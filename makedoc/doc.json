{
	"id": 0,
	"name": "@arjunatlast/jsds",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 412,
			"name": "AbstractBinaryTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "Abstract Implementation of binary tree. (Note: This class cannot be used to initialize objects.)"
			},
			"typeParameter": [
				{
					"id": 413,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 415,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 416,
							"name": "new AbstractBinaryTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 417,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractBinaryTree",
								"id": 412
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 26,
							"character": 41
						}
					]
				},
				{
					"id": 414,
					"name": "_root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 26,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 421,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 422,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an item from the binary tree."
							},
							"parameters": [
								{
									"id": 423,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "BinaryTree.delete",
								"id": 234
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 40,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.delete",
						"id": 233
					}
				},
				{
					"id": 424,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 425,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the height of this binary tree.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  bt.height();// returns a number.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 426,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 47,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.height",
						"id": 236
					}
				},
				{
					"id": 427,
					"name": "inorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 428,
							"name": "inorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after inorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.inorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 429,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 58,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.inorder",
						"id": 238
					}
				},
				{
					"id": 418,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 419,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a new item to the binary tree."
							},
							"parameters": [
								{
									"id": 420,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "BinaryTree.insert",
								"id": 231
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 35,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.insert",
						"id": 230
					}
				},
				{
					"id": 433,
					"name": "postorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 434,
							"name": "postorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after postorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.postorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 435,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 88,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.postorder",
						"id": 242
					}
				},
				{
					"id": 430,
					"name": "preorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 431,
							"name": "preorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after preorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.preorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 432,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 73,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.preorder",
						"id": 240
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						415
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						414
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						421,
						424,
						427,
						418,
						433,
						430
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-binary-tree.ts",
					"line": 25,
					"character": 40
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "BinarySearchTree",
					"id": 2158
				},
				{
					"type": "reference",
					"name": "Rope",
					"id": 2703
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "BinaryTree",
					"id": 228,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 244,
			"name": "AbstractCollection",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract implementation of Collection interface"
			},
			"typeParameter": [
				{
					"id": 245,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 247,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 248,
							"name": "new AbstractCollection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 249,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractCollection",
								"id": 244
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 28
						}
					]
				},
				{
					"id": 246,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "T"
						}
					},
					"defaultValue": " []"
				},
				{
					"id": 250,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 251,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.add(5);\n  //now collection contains [1,2,3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 252,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.add",
								"id": 87
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 21,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.add",
						"id": 86
					}
				},
				{
					"id": 253,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 254,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4,5]\n  collection.addAll([6,7]);\n  //now collection contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 255,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 32,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 89
					}
				},
				{
					"id": 256,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 257,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 93
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 92
					}
				},
				{
					"id": 258,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 260,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 95
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 94
					}
				},
				{
					"id": 261,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 262,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 263,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 97
					}
				},
				{
					"id": 264,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 265,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 266,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 101
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 100
					}
				},
				{
					"id": 290,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 291,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 292,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 293,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 294,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 295,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 296,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 297,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 126
					}
				},
				{
					"id": 267,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 268,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 104
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 103
					}
				},
				{
					"id": 298,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 299,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.iterator",
								"id": 135
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.iterator",
						"id": 134
					}
				},
				{
					"id": 269,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 270,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 271,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 106
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 105
					}
				},
				{
					"id": 272,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 273,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 274,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 109
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 108
					}
				},
				{
					"id": 275,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 276,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 277,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 278,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 279,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 280,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 281,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 282,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 111
					}
				},
				{
					"id": 283,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 284,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 285,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 120
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 119
					}
				},
				{
					"id": 286,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 287,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.size",
								"id": 123
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.size",
						"id": 122
					}
				},
				{
					"id": 288,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 289,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 125
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 124
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						247
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						246
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						250,
						253,
						256,
						258,
						261,
						264,
						290,
						267,
						298,
						269,
						272,
						275,
						283,
						286,
						288
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-collection.ts",
					"line": 7,
					"character": 31
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 300
				},
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 655
				},
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 927
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			]
		},
		{
			"id": 826,
			"name": "AbstractGraph",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract implementation of graph interface"
			},
			"typeParameter": [
				{
					"id": 827,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 831,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 832,
							"name": "new AbstractGraph",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AbstractGraph",
								"id": 826
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 14,
							"character": 50
						}
					]
				},
				{
					"id": 830,
					"name": "_adjList",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 14,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"id": 505,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Vertex",
								"id": 601,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							{
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							}
						]
					}
				},
				{
					"id": 829,
					"name": "_edges",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 13,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Set",
						"id": 436,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Edge",
								"id": 607,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						]
					}
				},
				{
					"id": 828,
					"name": "_vertices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 12,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "Set",
						"id": 436,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Vertex",
								"id": 601,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						]
					}
				},
				{
					"id": 833,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 834,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a new vertex with the specified label to this graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.add(25);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 835,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.add",
								"id": 618
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 28,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.add",
						"id": 617
					}
				},
				{
					"id": 836,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 837,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add new vertices with the labels present in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.addAll([25,22,11,43]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 838,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addAll",
								"id": 621
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 38,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addAll",
						"id": 620
					}
				},
				{
					"id": 855,
					"name": "addEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 856,
							"name": "addEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add the specified edge to the graph. The start and end vertices are added automatically to the graph if not present.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, e:Edge<number>\n  g.addEdge(e);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 857,
									"name": "edge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addEdge",
								"id": 640
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 117,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addEdge",
						"id": 639
					}
				},
				{
					"id": 839,
					"name": "addVertex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 840,
							"name": "addVertex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add the specified vertex to the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.addVertex(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 841,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addVertex",
								"id": 624
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 48,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addVertex",
						"id": 623
					}
				},
				{
					"id": 842,
					"name": "addVertices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 843,
							"name": "addVertices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all vertices in the specified array to the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, a,b,c,d:Vertex<number>\n  g.addVertices([a,b,c,d]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 844,
									"name": "vertices",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vertex",
											"id": 601,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addVertices",
								"id": 627
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 58,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addVertices",
						"id": 626
					}
				},
				{
					"id": 865,
					"name": "adjacentEdges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 866,
							"name": "adjacentEdges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of edges starting from specified vertex.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.adjacentEdges(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 867,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Edge",
												"id": 607,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.adjacentEdges",
								"id": 650
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 160,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.adjacentEdges",
						"id": 649
					}
				},
				{
					"id": 868,
					"name": "adjacentVertices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 869,
							"name": "adjacentVertices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of vertices adjacent to the specified vertex.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.adjacentVertices(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 870,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Vertex",
												"id": 601,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.adjacentVertices",
								"id": 653
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 170,
							"character": 18
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.adjacentVertices",
						"id": 652
					}
				},
				{
					"id": 851,
					"name": "createEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 852,
							"name": "createEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create vertices from the given labels and an edge connecting them and add it to the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.createEdge(25,26);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 853,
									"name": "startLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 854,
									"name": "endLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.createEdge",
								"id": 636
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 105,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.createEdge",
						"id": 635
					}
				},
				{
					"id": 863,
					"name": "edgeSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 864,
							"name": "edgeSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of edges present in the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.edgeSet();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.edgeSet",
								"id": 648
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 151,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.edgeSet",
						"id": 647
					}
				},
				{
					"id": 845,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 846,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove a single vertex with the specified label from the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.remove(25);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 847,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.remove",
								"id": 630
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 72,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.remove",
						"id": 629
					}
				},
				{
					"id": 858,
					"name": "removeEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 859,
							"name": "removeEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove the specified edge from the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, e:Edge<number>\n  g.removeEdge(e);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 860,
									"name": "edge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.removeEdge",
								"id": 643
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 128,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.removeEdge",
						"id": 642
					}
				},
				{
					"id": 848,
					"name": "removeVertex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 849,
							"name": "removeVertex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove the specified vertex from the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.removeVertex(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 850,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.removeVertex",
								"id": 633
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 89,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.removeVertex",
						"id": 632
					}
				},
				{
					"id": 861,
					"name": "vertexSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 862,
							"name": "vertexSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of vertices present in the graph.(a copy of the set is returned).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.vertexSet();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.vertexSet",
								"id": 646
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 142,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Graph.vertexSet",
						"id": 645
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						831
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						830,
						829,
						828
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						833,
						836,
						855,
						839,
						842,
						865,
						868,
						851,
						863,
						845,
						858,
						848,
						861
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-graph.ts",
					"line": 11,
					"character": 26
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "DiGraph",
					"id": 1580
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Graph",
					"id": 615,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 300,
			"name": "AbstractList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract implementation of List interface"
			},
			"typeParameter": [
				{
					"id": 301,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 302,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 303,
							"name": "new AbstractList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 304,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 300
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 247
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 8,
							"character": 78
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 247
					}
				},
				{
					"id": 355,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 305,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 306,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 307,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 139
							}
						},
						{
							"id": 308,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.add(4); //[1,2,3,4]\n  list.add(2.5,2); //[1,2,2.5,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 309,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 310,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 141
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 17,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 25,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 26,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 250
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 138
					}
				},
				{
					"id": 311,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 312,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 313,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 145
							}
						},
						{
							"id": 314,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.addAll([4,5]); //[1,2,3,4,5]\n  list.addAll([2.1,2.2,2.3], 2); //[1,2,2.1,2.2,2.3,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 315,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								},
								{
									"id": 316,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 147
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 38,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 46,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 47,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 253
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 144
					}
				},
				{
					"id": 356,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 357,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 185
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 184
					}
				},
				{
					"id": 358,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 359,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 360,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 186
					}
				},
				{
					"id": 361,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 362,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 363,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 190
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 189
					}
				},
				{
					"id": 364,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 365,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 366,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 192
					}
				},
				{
					"id": 390,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 391,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 392,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 393,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 394,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 395,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 396,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 397,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 218
					}
				},
				{
					"id": 317,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 318,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 319,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 151
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 150
					}
				},
				{
					"id": 320,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 321,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 322,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 153
					}
				},
				{
					"id": 367,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 368,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 196
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 195
					}
				},
				{
					"id": 398,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 399,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 226
					}
				},
				{
					"id": 323,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 324,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 325,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 156
					}
				},
				{
					"id": 326,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 327,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator(); //starts at index 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 328,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 160
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 159
					}
				},
				{
					"id": 329,
					"name": "median",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 330,
							"name": "median",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median of this list. If the list is empty returns undefined.\nIn case of two medians the later one is preferred.",
								"tags": [
									{
										"tag": "example",
										"text": "\n //list contains [1, 2, 3, 4]\nlist.median(); //returns 3\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.median",
								"id": 163
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.median",
						"id": 162
					}
				},
				{
					"id": 369,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 370,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 371,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 198
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 197
					}
				},
				{
					"id": 372,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 373,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 374,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 201
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 200
					}
				},
				{
					"id": 331,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 332,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 333,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 165
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 164
					}
				},
				{
					"id": 375,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 376,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 377,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 378,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 379,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 380,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 381,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 382,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 203
					}
				},
				{
					"id": 334,
					"name": "removeRange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "removeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6]\n  console.log(list.removeRange(1,4)); //[1,5,6]\n  //Output: [2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 336,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 337,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 126,
							"character": 13
						}
					]
				},
				{
					"id": 383,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 384,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 385,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 211
					}
				},
				{
					"id": 353,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 354,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverse the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5]\n  list.reverse() //now list contains [5,4,3,2,1]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.reverse",
								"id": 183
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 173,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.reverse",
						"id": 182
					}
				},
				{
					"id": 338,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 339,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 340,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 341,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 168
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 137,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 167
					}
				},
				{
					"id": 386,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 387,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 215
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 214
					}
				},
				{
					"id": 342,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 343,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is considered smaller than y if the compareFn(x,y) is negetive",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 344,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 345,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 346,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 347,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 348,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 152,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 152,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 171
					}
				},
				{
					"id": 349,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 350,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 351,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 352,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 179
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 163,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 178
					}
				},
				{
					"id": 388,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 389,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 217
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 216
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						302
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						355
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						305,
						311,
						356,
						358,
						361,
						364,
						390,
						317,
						320,
						367,
						398,
						323,
						326,
						329,
						369,
						372,
						331,
						375,
						334,
						383,
						353,
						338,
						386,
						342,
						349,
						388
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-list.ts",
					"line": 8,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 244,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 1413
				},
				{
					"type": "reference",
					"name": "SwappableList",
					"id": 1778
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 136,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 723,
			"name": "AbstractMap",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 724,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 725,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 728,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 729,
							"name": "new AbstractMap",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 730,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "MapEntry",
											"id": 500,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "K"
												},
												{
													"type": "typeParameter",
													"name": "V"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractMap",
								"id": 723
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 34
						}
					]
				},
				{
					"id": 727,
					"name": "_keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractSet",
						"id": 655,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "K"
							}
						]
					}
				},
				{
					"id": 726,
					"name": "_values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractList",
						"id": 300,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "V"
							}
						]
					}
				},
				{
					"id": 731,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 732,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the mappings from this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map: [{\"1\":1},{\"2\":2},{\"3\":3}]\nmap.clear();\n//now : []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.clear",
								"id": 509
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 21,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.clear",
						"id": 508
					}
				},
				{
					"id": 733,
					"name": "compute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 734,
							"name": "compute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.compute(k1, (key,value,map)=>(value+11)); //returns 12\n  //now the value changes to 12+11 -> 23\n"
									}
								]
							},
							"parameters": [
								{
									"id": 735,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 736,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 737,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 738,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 739,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 740,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "V"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 741,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 32,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 32,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.compute",
						"id": 510
					}
				},
				{
					"id": 742,
					"name": "computeIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 743,
							"name": "computeIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.computeIfAbsent(k1, (key,value,map)=>(23)); //returns 12\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 744,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 745,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 746,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 747,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 748,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 749,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "V"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 750,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 46,
													"character": 37
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 46,
							"character": 16
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfAbsent",
						"id": 519
					}
				},
				{
					"id": 751,
					"name": "computeIfPresent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 752,
							"name": "computeIfPresent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to null\n  map.computeIfAbsent(k1, (key,value,map)=>(value+11)); //returns null\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 753,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 754,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 755,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 756,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 757,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 758,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 759,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 62,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 62,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfPresent",
						"id": 528
					}
				},
				{
					"id": 760,
					"name": "containsKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 761,
							"name": "containsKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains a mapping for the specified key.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsKey(k1); //returns true\n  map.containsKey(k5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 762,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.containsKey",
								"id": 538
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 78,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsKey",
						"id": 537
					}
				},
				{
					"id": 763,
					"name": "containsValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 764,
							"name": "containsValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map maps one or more keys to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsValue(1); //returns true\n  map.containsValue(5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 765,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.containsValue",
								"id": 541
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 89,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsValue",
						"id": 540
					}
				},
				{
					"id": 766,
					"name": "entrySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 767,
							"name": "entrySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the mappings contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.entrySet(); //returns Set [{key:k1, value:1},{key:k2, value:2}]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "reference",
										"name": "MapEntry",
										"id": 500,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.entrySet",
								"id": 544
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 99,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.entrySet",
						"id": 543
					}
				},
				{
					"id": 768,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 769,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified map with this map for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1 : [{k1:1},{k2:2},{k3:null}]\n  //map2 : [{k1:1},{k3:4}]\n  map1.equals(map2) //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 770,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.equals",
								"id": 546
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 115,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.equals",
						"id": 545
					}
				},
				{
					"id": 771,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 772,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each entry in this map until all entries have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.forEach((key, value, map)=>{\n     console.log(key+\"->\"+value+\",\");\n  });\n  //Output: one->1,two->2,three->3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 773,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 774,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 775,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 776,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 777,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 778,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 137,
													"character": 16
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 137,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.forEach",
						"id": 548
					}
				},
				{
					"id": 779,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 780,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped. undefined if there is no mapping.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.get(k1); //returns 1\n  map.get(k3); //returns null\n  map.get(k4); //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 781,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.get",
								"id": 557
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 152,
							"character": 4
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.get",
						"id": 556
					}
				},
				{
					"id": 782,
					"name": "getOrDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 783,
							"name": "getOrDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key or if key is mapped to null.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.getOrDefault(k1,5); //returns 1\n  map.getOrDefault(k3,12); //returns 12\n  map.getOrDefault(k4,16); //returns 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 784,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 785,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "V"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.getOrDefault",
								"id": 560
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 166,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.getOrDefault",
						"id": 559
					}
				},
				{
					"id": 786,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 787,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains no key-value mappings.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isEmpty(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isEmpty(); //false\n  //map : []\n  map.isEmpty(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.isEmpty",
								"id": 564
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 180,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.isEmpty",
						"id": 563
					}
				},
				{
					"id": 788,
					"name": "isNull",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 789,
							"name": "isNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains mappings to only null values or if  the map is empty.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isNull(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isNull(); //true\n  //map : []\n  map.isNull(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 194,
							"character": 8
						}
					]
				},
				{
					"id": 790,
					"name": "keySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 791,
							"name": "keySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the keys contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.keySet(); //[\"one\",\"two\",\"three\"]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "K"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.keySet",
								"id": 566
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 204,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.keySet",
						"id": 565
					}
				},
				{
					"id": 792,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 793,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Associates the specified value with the specified key in this map.Returns the old value associated with the key or  undefined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map : [{\"one\":1},{\"two\":2},{\"three\":3}]\nmap.put(\"one\",22); //return 1\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3}]\nmap.put(\"four\",4);//return undefined\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3},{\"four\":4}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 794,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 795,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.put",
								"id": 568
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 217,
							"character": 4
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.put",
						"id": 567
					}
				},
				{
					"id": 796,
					"name": "putAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 797,
							"name": "putAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copies all of the mappings from the specified map to this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1: [{k1:v1},{k2:v2},{k3:v3}], map2: [{k2:v4},{k4:v6},{k6:v8}]\n  map1.putAll(map2);\n  //now map1: [{k1:v1},{k2:v4},{k3:v3},{k4:v6},{k6:v8}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 798,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.putAll",
								"id": 572
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 237,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.putAll",
						"id": 571
					}
				},
				{
					"id": 799,
					"name": "putIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 800,
							"name": "putIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns undefined, else returns the current value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.putIfAbsent(\"four\",4); //return undefined (adds {\"four\":4} to the map)\n  map.putIfAbsent(\"one\",23); //return 1 (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 801,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 802,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.putIfAbsent",
								"id": 575
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 249,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.putIfAbsent",
						"id": 574
					}
				},
				{
					"id": 803,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 804,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the mapping for a key from this map if it is present.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.remove(\"one\"); //return 1\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.remove(\"four\"); //return undefined (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 805,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.remove",
								"id": 579
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 263,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.remove",
						"id": 578
					}
				},
				{
					"id": 806,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 807,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the entry for the specified key only if it is currently mapped to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.removeIf(\"one\", 1); //return true\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.removeIf(\"two\",5); //return false (map unchanged)\n  map.removeIf(\"four\",4); //return false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 808,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 809,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.removeIf",
								"id": 582
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 281,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.removeIf",
						"id": 581
					}
				},
				{
					"id": 810,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 811,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace all entries with specified value with the new value. Returns true if map was changed.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replace(5,2) //returns true;\n  //now map : [{k1:1},{k2:2},{k3:3},{k4:2},{k5:1}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 812,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								},
								{
									"id": 813,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.replace",
								"id": 586
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 293,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.replace",
						"id": 585
					}
				},
				{
					"id": 814,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 815,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replaceAll((k,v,m)=>(v*2)); //replace with its double\n  //map : [{k1:2},{k2:10},{k3:6},{k4:10},{k5:2}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 816,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 817,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 818,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 819,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 820,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 821,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 310,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 310,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.replaceAll",
						"id": 589
					}
				},
				{
					"id": 822,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 823,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of key-value mappings in this map.(key->null mappings are counted)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.size(); //return 5\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.size",
								"id": 598
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 322,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.size",
						"id": 597
					}
				},
				{
					"id": 824,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 825,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a List view of the values contained in this map.\n//map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\nmap.values(); //return list : [1,5,3,5,1]"
							},
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 300,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.values",
								"id": 600
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 331,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Map.values",
						"id": 599
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						728
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						727,
						726
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						731,
						733,
						742,
						751,
						760,
						763,
						766,
						768,
						771,
						779,
						782,
						786,
						788,
						790,
						792,
						796,
						799,
						803,
						806,
						810,
						814,
						822,
						824
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-map.ts",
					"line": 5,
					"character": 24
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ArrayMap",
					"id": 1241
				},
				{
					"type": "reference",
					"name": "Dictionary",
					"id": 1906
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Map",
					"id": 505,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "K"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			]
		},
		{
			"id": 927,
			"name": "AbstractQueue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract implementation of Queue interface"
			},
			"typeParameter": [
				{
					"id": 928,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 934,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 935,
							"name": "new AbstractQueue",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 936,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractQueue",
								"id": 927
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 247
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 247
					}
				},
				{
					"id": 933,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 937,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 938,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.add(5);\n  //now collection contains [1,2,3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 939,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.add",
								"id": 874
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 21,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 250
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.add",
						"id": 873
					}
				},
				{
					"id": 940,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 941,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4,5]\n  collection.addAll([6,7]);\n  //now collection contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 942,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.addAll",
								"id": 881
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 253
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.addAll",
						"id": 880
					}
				},
				{
					"id": 943,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 944,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.clear",
								"id": 884
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.clear",
						"id": 883
					}
				},
				{
					"id": 945,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 946,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 947,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.contains",
								"id": 886
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.contains",
						"id": 885
					}
				},
				{
					"id": 948,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 949,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 950,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.containsAll",
								"id": 889
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.containsAll",
						"id": 888
					}
				},
				{
					"id": 929,
					"name": "element",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 930,
							"name": "element",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves, but does not remove, the head of this queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.element",
								"id": 877
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 15,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Queue.element",
						"id": 876
					}
				},
				{
					"id": 951,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 952,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 953,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.equals",
								"id": 892
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.equals",
						"id": 891
					}
				},
				{
					"id": 977,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 978,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 979,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 980,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 981,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 982,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 983,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 984,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.forEach",
						"id": 917
					}
				},
				{
					"id": 954,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 955,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.isEmpty",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.isEmpty",
						"id": 894
					}
				},
				{
					"id": 985,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 986,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.iterator",
								"id": 926
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.iterator",
						"id": 925
					}
				},
				{
					"id": 931,
					"name": "poll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 932,
							"name": "poll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves and removes the head of this queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1 and queue now has elements [2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.poll",
								"id": 879
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 26,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Queue.poll",
						"id": 878
					}
				},
				{
					"id": 956,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 957,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 958,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.remove",
								"id": 897
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.remove",
						"id": 896
					}
				},
				{
					"id": 959,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 960,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 961,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.removeAll",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeAll",
						"id": 899
					}
				},
				{
					"id": 962,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 963,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 964,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 965,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 966,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 967,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 968,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 969,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeIf",
						"id": 902
					}
				},
				{
					"id": 970,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 971,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 972,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.retainAll",
								"id": 911
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.retainAll",
						"id": 910
					}
				},
				{
					"id": 973,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 974,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.size",
								"id": 914
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.size",
						"id": 913
					}
				},
				{
					"id": 975,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 976,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.toArray",
								"id": 916
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.toArray",
						"id": 915
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						934
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						933
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						937,
						940,
						943,
						945,
						948,
						929,
						951,
						977,
						954,
						985,
						931,
						956,
						959,
						962,
						970,
						973,
						975
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-queue.ts",
					"line": 7,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 244,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 2069
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Queue",
					"id": 871,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 655,
			"name": "AbstractSet",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract implementation of Set interface."
			},
			"typeParameter": [
				{
					"id": 656,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 657,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 658,
							"name": "new AbstractSet",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 659,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 247
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 7,
							"character": 77
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 247
					}
				},
				{
					"id": 678,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 660,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 661,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4,5]\n  set.add(6); //returns true and now set contains [1,2,3,4,5,6]\n  set.add(5); //returns false since 5 is already in the set.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 662,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.add",
								"id": 439
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 20,
							"character": 4
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 250
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.add",
						"id": 438
					}
				},
				{
					"id": 663,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 664,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds all of the elements in the specified collection to this set if they're not already present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4,5]\n  set.add([4,5,6]); //returns true and now set contains [1,2,3,4,5,6]\n  set.add([5,6]); //returns false since 5 and 6 are already in the set.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 665,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.addAll",
								"id": 442
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 32,
							"character": 7
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 253
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.addAll",
						"id": 441
					}
				},
				{
					"id": 679,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 680,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.clear",
								"id": 457
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.clear",
						"id": 456
					}
				},
				{
					"id": 681,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 682,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 683,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.contains",
								"id": 459
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.contains",
						"id": 458
					}
				},
				{
					"id": 684,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 685,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 686,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.containsAll",
								"id": 462
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.containsAll",
						"id": 461
					}
				},
				{
					"id": 672,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 673,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 674,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 66,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.difference",
						"id": 450
					}
				},
				{
					"id": 687,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 688,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 689,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.equals",
								"id": 465
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.equals",
						"id": 464
					}
				},
				{
					"id": 675,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 676,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 677,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 77,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.exclusion",
						"id": 453
					}
				},
				{
					"id": 713,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 714,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 715,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 716,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 717,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 718,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 719,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 720,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.forEach",
						"id": 490
					}
				},
				{
					"id": 669,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 670,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.intersection(set2); //returns a new set : [4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 671,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 55,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.intersection",
						"id": 447
					}
				},
				{
					"id": 690,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 691,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.isEmpty",
								"id": 468
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.isEmpty",
						"id": 467
					}
				},
				{
					"id": 721,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 722,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.iterator",
								"id": 499
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.iterator",
						"id": 498
					}
				},
				{
					"id": 692,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 693,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 694,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.remove",
								"id": 470
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.remove",
						"id": 469
					}
				},
				{
					"id": 695,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 696,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 697,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.removeAll",
								"id": 473
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.removeAll",
						"id": 472
					}
				},
				{
					"id": 698,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 699,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 700,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 701,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 702,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 703,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 704,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 705,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.removeIf",
						"id": 475
					}
				},
				{
					"id": 706,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 707,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 708,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.retainAll",
								"id": 484
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.retainAll",
						"id": 483
					}
				},
				{
					"id": 709,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 710,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.size",
								"id": 487
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.size",
						"id": 486
					}
				},
				{
					"id": 711,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 712,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.toArray",
								"id": 489
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.toArray",
						"id": 488
					}
				},
				{
					"id": 666,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 667,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4] and set2 : [4,5,6,7]\n  set1.union(set2); //returns a new set : [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 668,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.union",
								"id": 445
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 44,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.union",
						"id": 444
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						657
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						678
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						660,
						663,
						679,
						681,
						684,
						672,
						687,
						675,
						713,
						669,
						690,
						721,
						692,
						695,
						698,
						706,
						709,
						711,
						666
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-set.ts",
					"line": 7,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 244,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 1071
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Set",
					"id": 436,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 1071,
			"name": "AbstractSortedSet",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1072,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1078,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1079,
							"name": "new AbstractSortedSet",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1080,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1081,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1082,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1083,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1084,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-sorted-set.ts",
													"line": 8,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 1085,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSortedSet",
								"id": 1071
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSet.__constructor",
								"id": 657
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 6,
							"character": 42
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSet.__constructor",
						"id": 657
					}
				},
				{
					"id": 1073,
					"name": "_comparator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 6,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1074,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1075,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1076,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										},
										{
											"id": 1077,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "ds/abstract/abstract-sorted-set.ts",
									"line": 6,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 1124,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 1086,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1087,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,3,6,8] //compareFn is ascending\n  set.add(4); //set: [1,3,4,6,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1088,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSet.add",
								"id": 660
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.add",
								"id": 990
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 20,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSet.add",
						"id": 660
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.add",
						"id": 989
					}
				},
				{
					"id": 1089,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1090,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all items of an array into this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set containes [1,8,12] (compareFn designed for ascending order)\n  set.addAll([6,10,15]); //[1,6,8,10,12,15]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1091,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSet.addAll",
								"id": 663
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.addAll",
								"id": 993
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 34,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSet.addAll",
						"id": 663
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.addAll",
						"id": 992
					}
				},
				{
					"id": 1125,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1126,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.clear",
								"id": 1028
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.clear",
						"id": 1027
					}
				},
				{
					"id": 1092,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1093,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  set.comparator(); //returns a function\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1094,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1095,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1096,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 1097,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "ds/abstract/abstract-sorted-set.ts",
											"line": 43,
											"character": 15
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.comparator",
								"id": 996
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 43,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.comparator",
						"id": 995
					}
				},
				{
					"id": 1127,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1128,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1129,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.contains",
								"id": 1030
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.contains",
						"id": 1029
					}
				},
				{
					"id": 1130,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1131,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1132,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.containsAll",
								"id": 1033
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.containsAll",
						"id": 1032
					}
				},
				{
					"id": 1118,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1119,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1120,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.difference",
								"id": 672
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 66,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.difference",
						"id": 672
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.difference",
						"id": 1021
					}
				},
				{
					"id": 1133,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1134,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1135,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.equals",
								"id": 1036
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.equals",
						"id": 1035
					}
				},
				{
					"id": 1121,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1122,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1123,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.exclusion",
								"id": 675
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 77,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.exclusion",
						"id": 675
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.exclusion",
						"id": 1024
					}
				},
				{
					"id": 1098,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1099,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first (lowest) element currently in this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4]\n  set.first()\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.first",
								"id": 1002
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 53,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.first",
						"id": 1001
					}
				},
				{
					"id": 1159,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1160,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1161,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1162,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1163,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1164,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1165,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1166,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.forEach",
						"id": 1061
					}
				},
				{
					"id": 1106,
					"name": "headSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1107,
							"name": "headSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are strictly less than toElement.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set : [1,2,3,5,7,9]\n  set.headSet(6) //returns set : [1,2,3,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1108,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.headSet",
								"id": 1004
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 86,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.headSet",
						"id": 1003
					}
				},
				{
					"id": 1115,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1116,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.intersection(set2); //returns a new set : [4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1117,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.intersection",
								"id": 669
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 55,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.intersection",
						"id": 669
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.intersection",
						"id": 1018
					}
				},
				{
					"id": 1136,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1137,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.isEmpty",
								"id": 1039
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.isEmpty",
						"id": 1038
					}
				},
				{
					"id": 1167,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1168,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.iterator",
								"id": 1070
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.iterator",
						"id": 1069
					}
				},
				{
					"id": 1100,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1101,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the last (highest) element currently in this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4]\n  set.last();\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.last",
								"id": 1007
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 63,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.last",
						"id": 1006
					}
				},
				{
					"id": 1138,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1139,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1140,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.remove",
								"id": 1041
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.remove",
						"id": 1040
					}
				},
				{
					"id": 1141,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1142,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1143,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.removeAll",
								"id": 1044
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.removeAll",
						"id": 1043
					}
				},
				{
					"id": 1144,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1145,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1146,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1147,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1148,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1149,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1150,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1151,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.removeIf",
						"id": 1046
					}
				},
				{
					"id": 1152,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1153,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1154,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.retainAll",
								"id": 1055
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.retainAll",
						"id": 1054
					}
				},
				{
					"id": 1155,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1156,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.size",
								"id": 1058
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.size",
						"id": 1057
					}
				},
				{
					"id": 1102,
					"name": "subSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1103,
							"name": "subSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4,5,6,7,8,9,10]\n  set.subSet(4,9) //returns set : [4,5,6,7,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1104,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 1105,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.subSet",
								"id": 1009
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 73,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.subSet",
						"id": 1008
					}
				},
				{
					"id": 1109,
					"name": "tailSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1110,
							"name": "tailSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are greater than or equal to fromElement.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set : [1,2,3,5,7,9]\n  set.tailSet(4) //returns set : [5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1111,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.tailSet",
								"id": 1013
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 96,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.tailSet",
						"id": 1012
					}
				},
				{
					"id": 1157,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1158,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.toArray",
								"id": 1060
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.toArray",
						"id": 1059
					}
				},
				{
					"id": 1112,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1113,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4] and set2 : [4,5,6,7]\n  set1.union(set2); //returns a new set : [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1114,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.union",
								"id": 666
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.union",
								"id": 1016
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 44,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.union",
						"id": 666
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.union",
						"id": 1015
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1078
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1073,
						1124
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1086,
						1089,
						1125,
						1092,
						1127,
						1130,
						1118,
						1133,
						1121,
						1098,
						1159,
						1106,
						1115,
						1136,
						1167,
						1100,
						1138,
						1141,
						1144,
						1152,
						1155,
						1102,
						1109,
						1157,
						1112
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-sorted-set.ts",
					"line": 4,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 655,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Set",
					"id": 436,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "SortedSet",
					"id": 987,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 1356,
			"name": "AbstractTable",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"typeParameter": [
				{
					"id": 1357,
					"name": "R",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1358,
					"name": "C",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1359,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1361,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1362,
							"name": "new AbstractTable",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AbstractTable",
								"id": 1356
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 7,
							"character": 53
						}
					]
				},
				{
					"id": 1360,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 7,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractMap",
						"id": 723,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "R"
							},
							{
								"type": "reference",
								"name": "AbstractMap",
								"id": 723,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						]
					}
				},
				{
					"id": 1363,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1364,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a row to this table only if row curresponding to given key is absent.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //t:Table<number,number,string>\n  var r = new ArrayMap<number,string>(5);\n  r.add(1,'01');\n  r.add(2,'02');\n  r.add(3,'03');\n  t.add(0, r);\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  1  |  2  |  3  |\n    +-----+-----+-----+-----+\n    |  0  | 01  | 02  | 03  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1365,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1366,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 28,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.add",
						"id": 1173
					}
				},
				{
					"id": 1396,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1397,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.delete(0); //calling this function makes the table empty.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1398,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.delete",
								"id": 1207
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 92,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.delete",
						"id": 1206
					}
				},
				{
					"id": 1399,
					"name": "deleteIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 1400,
							"name": "deleteIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table based on filter function."
							},
							"parameters": [
								{
									"id": 1401,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1402,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1403,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1404,
															"name": "rowKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "R"
															}
														},
														{
															"id": 1405,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "C"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-table.ts",
													"line": 98,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 98,
							"character": 19
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.deleteIf",
						"id": 1209
					}
				},
				{
					"id": 1406,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1407,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire column from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.drop(2);\n  /*\n    +-----+-----+-----+\n    |  X  |  1  |  3  |\n    +-----+-----+-----+\n    |  0  | 01  | 03  |\n    +-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1408,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.drop",
								"id": 1217
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 110,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.drop",
						"id": 1216
					}
				},
				{
					"id": 1379,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1380,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire column of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.extract(2); //returns <Map>[{0:'02'}]\n  t.extract(5); //returns <Map>[{0: undefined}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1381,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractMap",
								"id": 723,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "V"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.extract",
								"id": 1190
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 72,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.extract",
						"id": 1189
					}
				},
				{
					"id": 1376,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1377,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire row of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.fetch(0);  //returns <Map>[{1:'01'},{2:'02'},{3:'03'}]\n  t.fetch(1);  //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1378,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.fetch",
								"id": 1187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 63,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.fetch",
						"id": 1186
					}
				},
				{
					"id": 1372,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1373,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entry from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.get(0,3); //returns '03'\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1374,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1375,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.get",
								"id": 1183
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 53,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.get",
						"id": 1182
					}
				},
				{
					"id": 1389,
					"name": "project",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 1390,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of columns in this table based on the filter function."
							},
							"parameters": [
								{
									"id": 1391,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1392,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1393,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1394,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														},
														{
															"id": 1395,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "R"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "typeParameter",
																				"name": "V"
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-table.ts",
													"line": 86,
													"character": 28
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Table",
								"id": 1169,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 86,
							"character": 18
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.project",
						"id": 1199
					}
				},
				{
					"id": 1409,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1410,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove an entry from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.remove(0,3); //returns '03' and removes it from the table\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1411,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1412,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.remove",
								"id": 1220
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 120,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.remove",
						"id": 1219
					}
				},
				{
					"id": 1382,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 1383,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of rows in this table based on the filter function."
							},
							"parameters": [
								{
									"id": 1384,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1385,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1386,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1387,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "R"
															}
														},
														{
															"id": 1388,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "C"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-table.ts",
													"line": 82,
													"character": 27
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Table",
								"id": 1169,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 82,
							"character": 17
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.select",
						"id": 1192
					}
				},
				{
					"id": 1367,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1368,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the value at the specified position in this table with the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.set(0,2,'2'); //returns '02'\n  t.set(1,2,'12'); //returns undefined\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  1  |  2  |  3  |\n    +-----+-----+-----+-----+\n    |  0  | 01  |  2  | 03  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1369,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1370,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								},
								{
									"id": 1371,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.set",
								"id": 1178
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 43,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Table.set",
						"id": 1177
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1361
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1360
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1363,
						1396,
						1399,
						1406,
						1379,
						1376,
						1372,
						1389,
						1409,
						1382,
						1367
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-table.ts",
					"line": 6,
					"character": 35
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "EntryTable",
					"id": 2237
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Table",
					"id": 1169,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "R"
						},
						{
							"type": "typeParameter",
							"name": "C"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			]
		},
		{
			"id": 1413,
			"name": "ArrayList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Resizable-array implementation of the List interface."
			},
			"typeParameter": [
				{
					"id": 1414,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1416,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructs an empty list with an initial capacity of ten.\nConstructs an empty list with the specified initial capacity.\nConstructs a list containing the items."
					},
					"signatures": [
						{
							"id": 1417,
							"name": "new ArrayList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with an initial capacity of ten."
							},
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 1413
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							}
						},
						{
							"id": 1418,
							"name": "new ArrayList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with the specified initial capacity."
							},
							"parameters": [
								{
									"id": 1419,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 1413
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							}
						},
						{
							"id": 1420,
							"name": "new ArrayList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs a list containing the items."
							},
							"parameters": [
								{
									"id": 1421,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1422,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 1413
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 11,
							"character": 30
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 16,
							"character": 15
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 20,
							"character": 37
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 24,
							"character": 51
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.__constructor",
						"id": 302
					}
				},
				{
					"id": 1415,
					"name": "_capacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 11,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1515,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 1423,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1424,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 1425,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.add",
								"id": 305
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 139
							}
						},
						{
							"id": 1426,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.add(4); //[1,2,3,4]\n  list.add(2.5,2); //[1,2,2.5,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1427,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 1428,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.add",
								"id": 305
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 141
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 33,
							"character": 5
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 41,
							"character": 5
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 42,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.add",
						"id": 305
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 138
					}
				},
				{
					"id": 1429,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1430,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 1431,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.addAll",
								"id": 311
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 145
							}
						},
						{
							"id": 1432,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.addAll([4,5]); //[1,2,3,4,5]\n  list.addAll([2.1,2.2,2.3], 2); //[1,2,2.1,2.2,2.3,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1433,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								},
								{
									"id": 1434,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.addAll",
								"id": 311
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 147
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 50,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 58,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 59,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.addAll",
						"id": 311
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 144
					}
				},
				{
					"id": 1516,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1517,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 185
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 184
					}
				},
				{
					"id": 1464,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1465,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this ArrayList instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newArrayList = arrayList.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 124,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 1518,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1519,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1520,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 186
					}
				},
				{
					"id": 1521,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1522,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1523,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 190
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 189
					}
				},
				{
					"id": 1435,
					"name": "ensureCapacity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1436,
							"name": "ensureCapacity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Increases the capacity of this ArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList has a capacity 10\n  arrayList.ensureCapacity(15);\n  //new capacity is 15\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1437,
									"name": "minCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 71,
							"character": 16
						}
					]
				},
				{
					"id": 1524,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1525,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1526,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 192
					}
				},
				{
					"id": 1438,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1439,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new ArrayList after filtering the items based on the filterFn",
								"tags": [
									{
										"tag": "example",
										"text": "\n//arryList [1,2,3,4,5]\narrayList.filter(x => (x < 4)); //returns an ArrayList [1,2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1440,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1441,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1442,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1443,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1444,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1445,
															"name": "list",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "ArrayList",
																"id": 1413,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 81,
													"character": 18
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						},
						{
							"id": 1446,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new ArrayList after filtering the items based on the filterFn with the given initial capacity",
								"tags": [
									{
										"tag": "example",
										"text": "\n//arryList [1,2,3,4,5]\narrayList.filter(x => (x < 4), 5); //returns an ArrayList [1,2,3] with capacity 5\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1447,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1448,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1449,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1450,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1451,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1452,
															"name": "list",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "ArrayList",
																"id": 1413,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 88,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 1453,
									"name": "capacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 81,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 88,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 89,
							"character": 8
						}
					]
				},
				{
					"id": 1550,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1551,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1552,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1553,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1554,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1555,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1556,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1557,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 218
					}
				},
				{
					"id": 1474,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1475,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //json = \"[1,2,3,4]\"\n  arrayList = new ArrayList<number>().fromString(json,(x)=>(parseFloat(x)));\n  //arrayList contains [1,2,3,4]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1476,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1477,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1478,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1479,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1480,
															"name": "itemJ",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 160,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 160,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.fromString",
						"id": 1234
					}
				},
				{
					"id": 1481,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1482,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1483,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.get",
								"id": 317
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 151
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.get",
						"id": 317
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 150
					}
				},
				{
					"id": 1484,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1485,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1486,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.indexOf",
								"id": 320
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.indexOf",
						"id": 320
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 153
					}
				},
				{
					"id": 1527,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1528,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 196
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 195
					}
				},
				{
					"id": 1558,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1559,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 226
					}
				},
				{
					"id": 1487,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1488,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 1489,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.lastIndexOf",
								"id": 323
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.lastIndexOf",
						"id": 323
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 156
					}
				},
				{
					"id": 1490,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1491,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator(); //starts at index 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1492,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.listIterator",
								"id": 326
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 160
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.listIterator",
						"id": 326
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 159
					}
				},
				{
					"id": 1493,
					"name": "median",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1494,
							"name": "median",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median of this list. If the list is empty returns undefined.\nIn case of two medians the later one is preferred.",
								"tags": [
									{
										"tag": "example",
										"text": "\n //list contains [1, 2, 3, 4]\nlist.median(); //returns 3\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.median",
								"id": 329
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.median",
								"id": 163
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.median",
						"id": 329
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.median",
						"id": 162
					}
				},
				{
					"id": 1529,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1530,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1531,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 198
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 197
					}
				},
				{
					"id": 1532,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1533,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1534,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 201
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 200
					}
				},
				{
					"id": 1495,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1496,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1497,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeAt",
								"id": 331
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 165
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeAt",
						"id": 331
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 164
					}
				},
				{
					"id": 1535,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1536,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1537,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1538,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1539,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1540,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1541,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1542,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 203
					}
				},
				{
					"id": 1498,
					"name": "removeRange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1499,
							"name": "removeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6]\n  console.log(list.removeRange(1,4)); //[1,5,6]\n  //Output: [2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1500,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1501,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeRange",
								"id": 334
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 126,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeRange",
						"id": 334
					}
				},
				{
					"id": 1454,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1455,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each element of this list with the result of applying the mapping function",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4]\n  arrayList.map((x)=>(x*2));\n  //now arrayList contains [2,4,6,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1456,
									"name": "mappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1457,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1458,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1459,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 105,
													"character": 23
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 105,
							"character": 12
						}
					]
				},
				{
					"id": 1543,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1544,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1545,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 211
					}
				},
				{
					"id": 1513,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1514,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverse the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5]\n  list.reverse() //now list contains [5,4,3,2,1]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.reverse",
								"id": 353
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.reverse",
								"id": 183
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 173,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.reverse",
						"id": 353
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.reverse",
						"id": 182
					}
				},
				{
					"id": 1502,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1503,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1504,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1505,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.set",
								"id": 338
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 168
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 137,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.set",
						"id": 338
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 167
					}
				},
				{
					"id": 1546,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1547,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 215
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 214
					}
				},
				{
					"id": 1506,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1507,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is considered smaller than y if the compareFn(x,y) is negetive",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1508,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1509,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1510,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1511,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1512,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 152,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.sort",
								"id": 342
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 152,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.sort",
						"id": 342
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 171
					}
				},
				{
					"id": 1460,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1461,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1462,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1463,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.subList",
								"id": 349
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 179
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 115,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.subList",
						"id": 349
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 178
					}
				},
				{
					"id": 1548,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1549,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 217
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 216
					}
				},
				{
					"id": 1468,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1469,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the arrayList into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4]\n  console.log(arrayList.toString((x)=>(x.toString())));\n  //Output\n  //\"[1,2,3,4]\"\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1470,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1471,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1472,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1473,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 146,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 146,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 1228
					}
				},
				{
					"id": 1466,
					"name": "trimToSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1467,
							"name": "trimToSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trims the capacity of this ArrayList instance to be the list's current size.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4,5] and capacity is 10\n  arrayList.trimToSize(); //new capacity is 5\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 134,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1416
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1415,
						1515
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1423,
						1429,
						1516,
						1464,
						1518,
						1521,
						1435,
						1524,
						1438,
						1550,
						1474,
						1481,
						1484,
						1527,
						1558,
						1487,
						1490,
						1493,
						1529,
						1532,
						1495,
						1535,
						1498,
						1454,
						1543,
						1513,
						1502,
						1546,
						1506,
						1460,
						1548,
						1468,
						1466
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/lists/array-list.ts",
					"line": 9,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 300,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "HistoryList",
					"id": 1631
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 136,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayList",
							"id": 1413,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 1227
				}
			]
		},
		{
			"id": 1241,
			"name": "ArrayMap",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1242,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1243,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1245,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructs an empty list with an initial capacity of ten.\nConstructs an empty list with the specified initial capacity.\nConstructs a list containing the items."
					},
					"signatures": [
						{
							"id": 1246,
							"name": "new ArrayMap",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with an initial capacity of ten."
							},
							"type": {
								"type": "reference",
								"name": "ArrayMap",
								"id": 1241
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractMap.__constructor",
								"id": 728
							}
						},
						{
							"id": 1247,
							"name": "new ArrayMap",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with the specified initial capacity."
							},
							"parameters": [
								{
									"id": 1248,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMap",
								"id": 1241
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractMap.__constructor",
								"id": 728
							}
						},
						{
							"id": 1249,
							"name": "new ArrayMap",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs a list containing the items."
							},
							"parameters": [
								{
									"id": 1250,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1251,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "MapEntry",
											"id": 500,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "K"
												},
												{
													"type": "typeParameter",
													"name": "V"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMap",
								"id": 1241
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractMap.__constructor",
								"id": 728
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 7,
							"character": 34
						},
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 11,
							"character": 15
						},
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 15,
							"character": 37
						},
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 19,
							"character": 63
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractMap.__constructor",
						"id": 728
					}
				},
				{
					"id": 1244,
					"name": "_capacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 7,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 1264,
					"name": "_keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractSet",
						"id": 655,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "K"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap._keys",
						"id": 727
					}
				},
				{
					"id": 1263,
					"name": "_values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractList",
						"id": 300,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "V"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap._values",
						"id": 726
					}
				},
				{
					"id": 1265,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1266,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the mappings from this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map: [{\"1\":1},{\"2\":2},{\"3\":3}]\nmap.clear();\n//now : []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.clear",
								"id": 731
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.clear",
								"id": 509
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 21,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.clear",
						"id": 731
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.clear",
						"id": 508
					}
				},
				{
					"id": 1259,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1260,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this ArrayMap instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newArrayMap = arrayMap.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 58,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 1267,
					"name": "compute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1268,
							"name": "compute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.compute(k1, (key,value,map)=>(value+11)); //returns 12\n  //now the value changes to 12+11 -> 23\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1269,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1270,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1271,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1272,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1273,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 1274,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "V"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 1275,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 32,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.compute",
								"id": 733
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.compute",
						"id": 733
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.compute",
						"id": 510
					}
				},
				{
					"id": 1276,
					"name": "computeIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1277,
							"name": "computeIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.computeIfAbsent(k1, (key,value,map)=>(23)); //returns 12\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1278,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1279,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1280,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1281,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1282,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 1283,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "V"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 1284,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 46,
													"character": 37
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.computeIfAbsent",
								"id": 742
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 46,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.computeIfAbsent",
						"id": 742
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfAbsent",
						"id": 519
					}
				},
				{
					"id": 1285,
					"name": "computeIfPresent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1286,
							"name": "computeIfPresent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to null\n  map.computeIfAbsent(k1, (key,value,map)=>(value+11)); //returns null\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1287,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1288,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1289,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1290,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1291,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 1292,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 1293,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 62,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.computeIfPresent",
								"id": 751
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 62,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.computeIfPresent",
						"id": 751
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfPresent",
						"id": 528
					}
				},
				{
					"id": 1294,
					"name": "containsKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1295,
							"name": "containsKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains a mapping for the specified key.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsKey(k1); //returns true\n  map.containsKey(k5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1296,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.containsKey",
								"id": 760
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.containsKey",
								"id": 538
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 78,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.containsKey",
						"id": 760
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsKey",
						"id": 537
					}
				},
				{
					"id": 1297,
					"name": "containsValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1298,
							"name": "containsValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map maps one or more keys to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsValue(1); //returns true\n  map.containsValue(5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1299,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.containsValue",
								"id": 763
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.containsValue",
								"id": 541
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 89,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.containsValue",
						"id": 763
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsValue",
						"id": 540
					}
				},
				{
					"id": 1256,
					"name": "ensureCapacity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1257,
							"name": "ensureCapacity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Increases the capacity of this ArrayMap instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayMap has a capacity 10\n  arrayMap.ensureCapacity(15);\n  //new capacity is 15\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1258,
									"name": "minCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 49,
							"character": 16
						}
					]
				},
				{
					"id": 1300,
					"name": "entrySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1301,
							"name": "entrySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the mappings contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.entrySet(); //returns Set [{key:k1, value:1},{key:k2, value:2}]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "reference",
										"name": "MapEntry",
										"id": 500,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.entrySet",
								"id": 766
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.entrySet",
								"id": 544
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 99,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.entrySet",
						"id": 766
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.entrySet",
						"id": 543
					}
				},
				{
					"id": 1302,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1303,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified map with this map for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1 : [{k1:1},{k2:2},{k3:null}]\n  //map2 : [{k1:1},{k3:4}]\n  map1.equals(map2) //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1304,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.equals",
								"id": 768
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.equals",
								"id": 546
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 115,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.equals",
						"id": 768
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.equals",
						"id": 545
					}
				},
				{
					"id": 1305,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1306,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each entry in this map until all entries have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.forEach((key, value, map)=>{\n     console.log(key+\"->\"+value+\",\");\n  });\n  //Output: one->1,two->2,three->3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1307,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1308,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1309,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1310,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 1311,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 1312,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 137,
													"character": 16
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.forEach",
								"id": 771
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 137,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.forEach",
						"id": 771
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.forEach",
						"id": 548
					}
				},
				{
					"id": 1313,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1314,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped. undefined if there is no mapping.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.get(k1); //returns 1\n  map.get(k3); //returns null\n  map.get(k4); //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1315,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.get",
								"id": 779
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.get",
								"id": 557
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 152,
							"character": 4
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.get",
						"id": 779
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.get",
						"id": 556
					}
				},
				{
					"id": 1316,
					"name": "getOrDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1317,
							"name": "getOrDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key or if key is mapped to null.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.getOrDefault(k1,5); //returns 1\n  map.getOrDefault(k3,12); //returns 12\n  map.getOrDefault(k4,16); //returns 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1318,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1319,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "V"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.getOrDefault",
								"id": 782
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.getOrDefault",
								"id": 560
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 166,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.getOrDefault",
						"id": 782
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.getOrDefault",
						"id": 559
					}
				},
				{
					"id": 1320,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1321,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains no key-value mappings.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isEmpty(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isEmpty(); //false\n  //map : []\n  map.isEmpty(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.isEmpty",
								"id": 786
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.isEmpty",
								"id": 564
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 180,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.isEmpty",
						"id": 786
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.isEmpty",
						"id": 563
					}
				},
				{
					"id": 1322,
					"name": "isNull",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1323,
							"name": "isNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains mappings to only null values or if  the map is empty.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isNull(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isNull(); //true\n  //map : []\n  map.isNull(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.isNull",
								"id": 788
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 194,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.isNull",
						"id": 788
					}
				},
				{
					"id": 1324,
					"name": "keySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1325,
							"name": "keySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the keys contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.keySet(); //[\"one\",\"two\",\"three\"]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "K"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.keySet",
								"id": 790
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.keySet",
								"id": 566
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 204,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.keySet",
						"id": 790
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.keySet",
						"id": 565
					}
				},
				{
					"id": 1252,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1253,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Associates the specified value with the specified key in this map.Returns the old value associated with the key or  undefined.\n(Throws an Error if ArrayMap is at maximum capacity)",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map : [{\"one\":1},{\"two\":2},{\"three\":3}]\nmap.put(\"one\",22); //return 1\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3}]\nmap.put(\"four\",4);//return undefined\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3},{\"four\":4}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1254,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1255,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractMap.put",
								"id": 792
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.put",
								"id": 568
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 35,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractMap.put",
						"id": 792
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.put",
						"id": 567
					}
				},
				{
					"id": 1326,
					"name": "putAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1327,
							"name": "putAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copies all of the mappings from the specified map to this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1: [{k1:v1},{k2:v2},{k3:v3}], map2: [{k2:v4},{k4:v6},{k6:v8}]\n  map1.putAll(map2);\n  //now map1: [{k1:v1},{k2:v4},{k3:v3},{k4:v6},{k6:v8}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1328,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.putAll",
								"id": 796
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.putAll",
								"id": 572
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 237,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.putAll",
						"id": 796
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.putAll",
						"id": 571
					}
				},
				{
					"id": 1329,
					"name": "putIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1330,
							"name": "putIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns undefined, else returns the current value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.putIfAbsent(\"four\",4); //return undefined (adds {\"four\":4} to the map)\n  map.putIfAbsent(\"one\",23); //return 1 (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1331,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1332,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.putIfAbsent",
								"id": 799
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.putIfAbsent",
								"id": 575
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 249,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.putIfAbsent",
						"id": 799
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.putIfAbsent",
						"id": 574
					}
				},
				{
					"id": 1333,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1334,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the mapping for a key from this map if it is present.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.remove(\"one\"); //return 1\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.remove(\"four\"); //return undefined (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1335,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.remove",
								"id": 803
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.remove",
								"id": 579
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 263,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.remove",
						"id": 803
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.remove",
						"id": 578
					}
				},
				{
					"id": 1336,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1337,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the entry for the specified key only if it is currently mapped to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.removeIf(\"one\", 1); //return true\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.removeIf(\"two\",5); //return false (map unchanged)\n  map.removeIf(\"four\",4); //return false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1338,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 1339,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.removeIf",
								"id": 806
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.removeIf",
								"id": 582
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 281,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.removeIf",
						"id": 806
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.removeIf",
						"id": 581
					}
				},
				{
					"id": 1340,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1341,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace all entries with specified value with the new value. Returns true if map was changed.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replace(5,2) //returns true;\n  //now map : [{k1:1},{k2:2},{k3:3},{k4:2},{k5:1}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1342,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								},
								{
									"id": 1343,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.replace",
								"id": 810
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.replace",
								"id": 586
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 293,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.replace",
						"id": 810
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.replace",
						"id": 585
					}
				},
				{
					"id": 1344,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1345,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replaceAll((k,v,m)=>(v*2)); //replace with its double\n  //map : [{k1:2},{k2:10},{k3:6},{k4:10},{k5:2}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1346,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1347,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1348,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1349,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 1350,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 1351,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 310,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.replaceAll",
								"id": 814
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 310,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.replaceAll",
						"id": 814
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.replaceAll",
						"id": 589
					}
				},
				{
					"id": 1352,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1353,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of key-value mappings in this map.(key->null mappings are counted)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.size(); //return 5\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.size",
								"id": 822
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.size",
								"id": 598
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 322,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.size",
						"id": 822
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.size",
						"id": 597
					}
				},
				{
					"id": 1261,
					"name": "trimToSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1262,
							"name": "trimToSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trims the capacity of this ArrayMap instance to be the list's current size.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayMap contains [{\"one\":1},{\"two\":2},{\"three\":3}] and capacity is 10\n  arrayMap.trimToSize(); //new capacity is 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/array-map.ts",
							"line": 68,
							"character": 12
						}
					]
				},
				{
					"id": 1354,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1355,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a List view of the values contained in this map.\n//map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\nmap.values(); //return list : [1,5,3,5,1]"
							},
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 300,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.values",
								"id": 824
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.values",
								"id": 600
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 331,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.values",
						"id": 824
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.values",
						"id": 599
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1245
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1244,
						1264,
						1263
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1265,
						1259,
						1267,
						1276,
						1285,
						1294,
						1297,
						1256,
						1300,
						1302,
						1305,
						1313,
						1316,
						1320,
						1322,
						1324,
						1252,
						1326,
						1329,
						1333,
						1336,
						1340,
						1344,
						1352,
						1261,
						1354
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/maps/array-map.ts",
					"line": 6,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractMap",
					"id": 723,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "K"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Map",
					"id": 505,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "K"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayMap",
							"id": 1241,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "K"
								},
								{
									"type": "typeParameter",
									"name": "V"
								}
							]
						}
					]
				}
			]
		},
		{
			"id": 2372,
			"name": "ArrayMatrix",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A 2 dimensional array implementation of Matrix."
			},
			"typeParameter": [
				{
					"id": 2373,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2375,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2376,
							"name": "new ArrayMatrix",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2377,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2378,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMatrix",
								"id": 2372
							}
						},
						{
							"id": 2379,
							"name": "new ArrayMatrix",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2380,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2381,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2382,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMatrix",
								"id": 2372
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 10,
							"character": 42
						},
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 11,
							"character": 58
						}
					]
				},
				{
					"id": 2374,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					}
				},
				{
					"id": 2413,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2414,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a copy of the current object and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 196,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 2405,
					"name": "col",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2406,
							"name": "col",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the column correponding to the specified index.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.col(1); //[2,5,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2407,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMatrixColumn",
								"id": 2437,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 136,
							"character": 5
						}
					]
				},
				{
					"id": 2408,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2409,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check whether the specified matrix is equal to this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2]\n  //  [2 3]\n  //  m2:\n  //  [1 2]\n  //  [2 3]\n  m1.equals(m2); //returns true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2410,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrix",
										"id": 2372,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 156,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.equals",
						"id": 2050
					}
				},
				{
					"id": 2383,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2384,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read the item at the specified position in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [2 3 4]\n  //  [3 4 5]\n  matrix.get(1,1); //3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2385,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2386,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.get",
								"id": 2032
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 27,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.get",
						"id": 2031
					}
				},
				{
					"id": 2394,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2395,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of rows in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.height(); //return 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.height",
								"id": 2043
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 72,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.height",
						"id": 2042
					}
				},
				{
					"id": 2387,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2388,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert an item at the specified position in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [2 3 4]\n  //  [3 4 5]\n  matrix.put(0,1,5);\n  //  [1 2 3]\n  //  [5 3 4]\n  //  [3 4 5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2389,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2390,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2391,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.put",
								"id": 2036
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 42,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.put",
						"id": 2035
					}
				},
				{
					"id": 2402,
					"name": "row",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2403,
							"name": "row",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the row correponding to the specified index.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.row(1); //[4,5,6]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2404,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMatrixRow",
								"id": 2415,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 119,
							"character": 5
						}
					]
				},
				{
					"id": 2398,
					"name": "subMatrix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2399,
							"name": "subMatrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the submatrix obtained after removing the specified rows and columns from this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.subMatrix([0],[1])\n  //  [4 6]\n  //  [7 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2400,
									"name": "rows",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2401,
									"name": "cols",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.subMatrix",
								"id": 2047
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 95,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.subMatrix",
						"id": 2046
					}
				},
				{
					"id": 2411,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2412,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a 2 dimensional array corresponding to the matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.toArray(); //[[1,2,3],[4,5,6],[7,8,9]]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 181,
							"character": 9
						}
					]
				},
				{
					"id": 2392,
					"name": "transpose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2393,
							"name": "transpose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the transpose of this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.transpose();\n  //  [1 4 7]\n  //  [2 5 8]\n  //  [3 6 9]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.transpose",
								"id": 2041
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 57,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.transpose",
						"id": 2040
					}
				},
				{
					"id": 2396,
					"name": "width",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2397,
							"name": "width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of columns in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.width(); //return 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.width",
								"id": 2045
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 81,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.width",
						"id": 2044
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2375
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2374
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2413,
						2405,
						2408,
						2383,
						2394,
						2387,
						2402,
						2398,
						2411,
						2392,
						2396
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/array-matrix.ts",
					"line": 7,
					"character": 24
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NumberMatrix",
					"id": 2459
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Matrix",
					"id": 2029,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayMatrix",
							"id": 2372,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					]
				}
			]
		},
		{
			"id": 2437,
			"name": "ArrayMatrixColumn",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A single column of an ArrayMatrix."
			},
			"typeParameter": [
				{
					"id": 2438,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2441,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2442,
							"name": "new ArrayMatrixColumn",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2443,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrix",
										"id": 2372,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								},
								{
									"id": 2444,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMatrixColumn",
								"id": 2437
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 298,
							"character": 26
						}
					]
				},
				{
					"id": 2440,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 298,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2439,
					"name": "_matrix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 297,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "ArrayMatrix",
						"id": 2372,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							}
						]
					}
				},
				{
					"id": 2447,
					"name": "index",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the index of this colun in the matrix it belongs to."
					},
					"getSignature": {
						"id": 2448,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the index of this colun in the matrix it belongs to."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 315,
							"character": 11
						}
					]
				},
				{
					"id": 2445,
					"name": "matrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the matrix to which this column belong."
					},
					"getSignature": {
						"id": 2446,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the matrix to which this column belong."
						},
						"type": {
							"type": "reference",
							"name": "ArrayMatrix",
							"id": 2372,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 308,
							"character": 12
						}
					]
				},
				{
					"id": 2449,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2450,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change this matrix column with another column of same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let c1 = am.col(0);\n  let c2 = am.col(1);\n  c1.change(c2);  // corresponds to C1 -> C2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2451,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixColumn",
										"id": 2437,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2452,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixColumn",
											"id": 2437,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 327,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "MatrixColumn.change",
						"id": 2063
					}
				},
				{
					"id": 2453,
					"name": "interchange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2454,
							"name": "interchange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Interchange this column with another column of the same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let c1 = am.col(0);\n  let c2 = am.col(1);\n  c1.interchange(c2);  // corresponds to C1 <-> C2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2455,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixColumn",
										"id": 2437,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2456,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixColumn",
											"id": 2437,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 345,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "MatrixColumn.interchange",
						"id": 2066
					}
				},
				{
					"id": 2457,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2458,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an array corresponding to this column.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  //  [1 1 1]\n  //  [0 1 1]\n  //  [0 0 1]\n  am.col(1).toArray() // [1,1,0]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 367,
							"character": 9
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2441
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2440,
						2439
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2447,
						2445
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2449,
						2453,
						2457
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/array-matrix.ts",
					"line": 296,
					"character": 30
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NumberMatrixColumn",
					"id": 2566
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "MatrixColumn",
					"id": 2061,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 2415,
			"name": "ArrayMatrixRow",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A single row of an ArrayMatrix."
			},
			"typeParameter": [
				{
					"id": 2416,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2419,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2420,
							"name": "new ArrayMatrixRow",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2421,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrix",
										"id": 2372,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								},
								{
									"id": 2422,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayMatrixRow",
								"id": 2415
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 213,
							"character": 26
						}
					]
				},
				{
					"id": 2418,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 213,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2417,
					"name": "_matrix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 212,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "ArrayMatrix",
						"id": 2372,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							}
						]
					}
				},
				{
					"id": 2425,
					"name": "index",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the index of this row in the matrix it belongs to."
					},
					"getSignature": {
						"id": 2426,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the index of this row in the matrix it belongs to."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 230,
							"character": 11
						}
					]
				},
				{
					"id": 2423,
					"name": "matrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the matrix to which this row belong."
					},
					"getSignature": {
						"id": 2424,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the matrix to which this row belong."
						},
						"type": {
							"type": "reference",
							"name": "ArrayMatrix",
							"id": 2372,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 223,
							"character": 12
						}
					]
				},
				{
					"id": 2427,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2428,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change this matrix row with another row of same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let r1 = am.row(0);\n  let r2 = am.row(1);\n  r1.change(r2);  // corresponds to R1 -> R2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2429,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixRow",
										"id": 2415,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2430,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixRow",
											"id": 2415,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 242,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "MatrixRow.change",
						"id": 2055
					}
				},
				{
					"id": 2431,
					"name": "interchange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2432,
							"name": "interchange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Interchange this row with another row of the same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let r1 = am.row(0);\n  let r2 = am.row(1);\n  r1.interchange(r2);  // corresponds to R1 <-> R2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2433,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixRow",
										"id": 2415,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2434,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixRow",
											"id": 2415,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 261,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "MatrixRow.interchange",
						"id": 2058
					}
				},
				{
					"id": 2435,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2436,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an array corresponding to this row.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  //  [1 0 0]\n  //  [0 1 0]\n  //  [0 0 1]\n  am.row(1).toArray() // [0,1,0]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 283,
							"character": 9
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2419
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2418,
						2417
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2425,
						2423
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2427,
						2431,
						2435
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/array-matrix.ts",
					"line": 211,
					"character": 27
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NumberMatrixRow",
					"id": 2534
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "MatrixRow",
					"id": 2053,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 2158,
			"name": "BinarySearchTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 2159,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2165,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2166,
							"name": "new BinarySearchTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2167,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2168,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2169,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2170,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 2171,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/trees/binary-search-tree.ts",
													"line": 7,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinarySearchTree",
								"id": 2158
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.__constructor",
								"id": 415
							}
						},
						{
							"id": 2172,
							"name": "new BinarySearchTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2173,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2174,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2175,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2176,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 2177,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/trees/binary-search-tree.ts",
													"line": 8,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 2178,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinarySearchTree",
								"id": 2158
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.__constructor",
								"id": 415
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 5,
							"character": 45
						},
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 7,
							"character": 43
						},
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 8,
							"character": 52
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree.__constructor",
						"id": 415
					}
				},
				{
					"id": 2160,
					"name": "_comparator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 5,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2161,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 2162,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2163,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										},
										{
											"id": 2164,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "ds/trees/binary-search-tree.ts",
									"line": 5,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 2224,
					"name": "_root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 26,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree._root",
						"id": 414
					}
				},
				{
					"id": 2191,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2192,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this BST.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  bst.comparator(); //returns a function\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2193,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2194,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2195,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 2196,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "ds/trees/binary-search-tree.ts",
											"line": 64,
											"character": 15
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 64,
							"character": 12
						}
					]
				},
				{
					"id": 2218,
					"name": "deepestLeft",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2219,
							"name": "deepestLeft",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2220,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 157,
							"character": 23
						}
					]
				},
				{
					"id": 2221,
					"name": "deepestRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2222,
							"name": "deepestRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2223,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 161,
							"character": 24
						}
					]
				},
				{
					"id": 2185,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2186,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an item from the BST.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bst:BinarySearchTree<number> : inorder -> 1,5,8,9,11\n  bst.delete(5);  //inorder -> 1,8,9,10,11\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2187,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.delete",
								"id": 421
							},
							"implementationOf": {
								"type": "reference",
								"name": "BinaryTree.delete",
								"id": 234
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 46,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree.delete",
						"id": 421
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.delete",
						"id": 233
					}
				},
				{
					"id": 2201,
					"name": "deleteItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2202,
							"name": "deleteItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2203,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 2204,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BinaryTreeNode",
												"id": 400,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 83,
							"character": 22
						}
					]
				},
				{
					"id": 2225,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2226,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the height of this binary tree.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  bt.height();// returns a number.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2227,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.height",
								"id": 424
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 47,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.height",
						"id": 424
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.height",
						"id": 236
					}
				},
				{
					"id": 2228,
					"name": "inorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2229,
							"name": "inorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after inorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.inorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2230,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.inorder",
								"id": 427
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 58,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.inorder",
						"id": 427
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.inorder",
						"id": 238
					}
				},
				{
					"id": 2215,
					"name": "inorderPredecessor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2216,
							"name": "inorderPredecessor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2217,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 153,
							"character": 30
						}
					]
				},
				{
					"id": 2212,
					"name": "inorderSuccessor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2213,
							"name": "inorderSuccessor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2214,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 149,
							"character": 28
						}
					]
				},
				{
					"id": 2179,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2180,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a new item to the BST.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bst:BinarySearchTree<number> : inorder -> 1,5,8,9,11\n  bst.insert(10);  //inorder -> 1,5,8,9,10,11\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2181,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.insert",
								"id": 418
							},
							"implementationOf": {
								"type": "reference",
								"name": "BinaryTree.insert",
								"id": 231
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 20,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree.insert",
						"id": 418
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.insert",
						"id": 230
					}
				},
				{
					"id": 2197,
					"name": "insertItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2198,
							"name": "insertItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2199,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 2200,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 71,
							"character": 22
						}
					]
				},
				{
					"id": 2182,
					"name": "insertMultiple",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2183,
							"name": "insertMultiple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert multiple items to the BST.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bst:BinarySearchTree<number> : inorder -> 1,5,8,9,11\n  bst.insertMultiple(10,21,3,15);  //inorder -> 1,3,5,8,9,10,11,15,21\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2184,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 34,
							"character": 16
						}
					]
				},
				{
					"id": 2234,
					"name": "postorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2235,
							"name": "postorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after postorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.postorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2236,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.postorder",
								"id": 433
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 88,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.postorder",
						"id": 433
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.postorder",
						"id": 242
					}
				},
				{
					"id": 2231,
					"name": "preorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2232,
							"name": "preorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after preorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.preorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2233,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.preorder",
								"id": 430
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 73,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.preorder",
						"id": 430
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.preorder",
						"id": 240
					}
				},
				{
					"id": 2205,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2206,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2207,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 115,
							"character": 18
						}
					]
				},
				{
					"id": 2188,
					"name": "search",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2189,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Search an item in the tree. Returns the item if found else returns null.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  bst.search(25);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2190,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 55,
							"character": 8
						}
					]
				},
				{
					"id": 2208,
					"name": "searchItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2209,
							"name": "searchItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2210,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 2211,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BinaryTreeNode",
												"id": 400,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/binary-search-tree.ts",
							"line": 134,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2165
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2160,
						2224
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2191,
						2218,
						2221,
						2185,
						2201,
						2225,
						2228,
						2215,
						2212,
						2179,
						2197,
						2182,
						2234,
						2231,
						2205,
						2188,
						2208
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/trees/binary-search-tree.ts",
					"line": 3,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractBinaryTree",
					"id": 412,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "BinaryTree",
					"id": 228,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 400,
			"name": "BinaryTreeNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A Node in a Binary Tree dataStructure"
			},
			"typeParameter": [
				{
					"id": 401,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 405,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 406,
							"name": "new BinaryTreeNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 407,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400
							}
						},
						{
							"id": 408,
							"name": "new BinaryTreeNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 409,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 410,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								},
								{
									"id": 411,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 11,
							"character": 32
						},
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 13,
							"character": 22
						},
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 14,
							"character": 71
						}
					]
				},
				{
					"id": 402,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 9,
							"character": 7
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "E"
					}
				},
				{
					"id": 403,
					"name": "left",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 10,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 404,
					"name": "right",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 11,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "BinaryTreeNode",
								"id": 400,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						405
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						402,
						403,
						404
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-binary-tree.ts",
					"line": 8,
					"character": 27
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "RopeNode",
					"id": 2785
				}
			]
		},
		{
			"id": 2298,
			"name": "DataTable",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An entry table with enumerable rowKeys (number) and string columnKeys."
			},
			"typeParameter": [
				{
					"id": 2299,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2315,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2316,
							"name": "new DataTable",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DataTable",
								"id": 2298
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.__constructor",
								"id": 1361
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntryTable.__constructor",
								"id": 2241
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 9,
							"character": 65
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.__constructor",
						"id": 1361
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EntryTable.__constructor",
						"id": 2241
					}
				},
				{
					"id": 2342,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 7,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractMap",
						"id": 723,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"name": "AbstractMap",
								"id": 723,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable._store",
						"id": 1360
					}
				},
				{
					"id": 2343,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2344,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a row to this table only if row curresponding to given key is absent.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //t:Table<number,number,string>\n  var r = new ArrayMap<number,string>(5);\n  r.add(1,'01');\n  r.add(2,'02');\n  r.add(3,'03');\n  t.add(0, r);\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  1  |  2  |  3  |\n    +-----+-----+-----+-----+\n    |  0  | 01  | 02  | 03  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2345,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2346,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.add",
								"id": 1363
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 28,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.add",
						"id": 1363
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.add",
						"id": 1173
					}
				},
				{
					"id": 2338,
					"name": "attributes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2339,
							"name": "attributes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the set of all column keys of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.attributes(); //returns <Set>{1,2,3}\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntryTable.attributes",
								"id": 2264
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 61,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntryTable.attributes",
						"id": 2264
					}
				},
				{
					"id": 2362,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2363,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.delete(0); //calling this function makes the table empty.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2364,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.delete",
								"id": 1396
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 92,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.delete",
						"id": 1396
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.delete",
						"id": 1206
					}
				},
				{
					"id": 2331,
					"name": "deleteIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2332,
							"name": "deleteIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table based on filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.deleteIf((rowKey, row) => (row.get(2)=='02')); //delete all rows with value '02' in the cell correspondin to column 2.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2333,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2334,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2335,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2336,
															"name": "rowKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2337,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/tables/entry-table.ts",
													"line": 50,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.deleteIf",
								"id": 1399
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntryTable.deleteIf",
								"id": 2257
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 50,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.deleteIf",
						"id": 1399
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EntryTable.deleteIf",
						"id": 2257
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.deleteIf",
						"id": 1209
					}
				},
				{
					"id": 2365,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2366,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire column from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.drop(2);\n  /*\n    +-----+-----+-----+\n    |  X  |  1  |  3  |\n    +-----+-----+-----+\n    |  0  | 01  | 03  |\n    +-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2367,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.drop",
								"id": 1406
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 110,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.drop",
						"id": 1406
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.drop",
						"id": 1216
					}
				},
				{
					"id": 2359,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2360,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire column of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.extract(2); //returns <Map>[{0:'02'}]\n  t.extract(5); //returns <Map>[{0: undefined}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2361,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractMap",
								"id": 723,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "V"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.extract",
								"id": 1379
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 72,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.extract",
						"id": 1379
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.extract",
						"id": 1189
					}
				},
				{
					"id": 2356,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2357,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire row of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.fetch(0);  //returns <Map>[{1:'01'},{2:'02'},{3:'03'}]\n  t.fetch(1);  //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2358,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.fetch",
								"id": 1376
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 63,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.fetch",
						"id": 1376
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.fetch",
						"id": 1186
					}
				},
				{
					"id": 2352,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2353,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entry from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.get(0,3); //returns '03'\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2354,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2355,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.get",
								"id": 1372
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 53,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.get",
						"id": 1372
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.get",
						"id": 1182
					}
				},
				{
					"id": 2340,
					"name": "indexes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2341,
							"name": "indexes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the set of all row keys of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.indexes(); //returns <Set>{0}\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntryTable.indexes",
								"id": 2266
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 74,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EntryTable.indexes",
						"id": 2266
					}
				},
				{
					"id": 2300,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2301,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a new row at the end of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var t = new DataTable<string>();\n  var r = new ArrayMap<number,string>(5);\n  r.add(\"a\",'0a');\n  r.add(\"b\",'0b');\n  r.add(\"c\",'0c');\n  t.insert(r);\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  a  |  b  |  c  |\n    +-----+-----+-----+-----+\n    |  0  | 0a  | 0b  | 0c  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2302,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/data-table.ts",
							"line": 25,
							"character": 8
						}
					]
				},
				{
					"id": 2305,
					"name": "limit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2306,
							"name": "limit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first n rows in the table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.limit(5); //return first 5 rows of the table.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2307,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/data-table.ts",
							"line": 43,
							"character": 7
						}
					]
				},
				{
					"id": 2308,
					"name": "limitLast",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2309,
							"name": "limitLast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the last n rows of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.limitLast(5); //return last 5 rows\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2310,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/data-table.ts",
							"line": 56,
							"character": 11
						}
					]
				},
				{
					"id": 2303,
					"name": "num_rows",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2304,
							"name": "num_rows",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of rows in this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.num_rows(); //returns 1\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/data-table.ts",
							"line": 34,
							"character": 10
						}
					]
				},
				{
					"id": 2324,
					"name": "project",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2325,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of columns in this table based on the filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.project((columnKey, col) => ([1,3].indexOf(columnKey)!=-1)); //project only columns 1 and 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2326,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2327,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2328,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2329,
															"name": "columnKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2330,
															"name": "col",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "typeParameter",
																				"name": "V"
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/tables/entry-table.ts",
													"line": 32,
													"character": 19
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.project",
								"id": 1389
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntryTable.project",
								"id": 2250
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 32,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.project",
						"id": 1389
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EntryTable.project",
						"id": 2250
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.project",
						"id": 1199
					}
				},
				{
					"id": 2368,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2369,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove an entry from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.remove(0,3); //returns '03' and removes it from the table\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2370,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2371,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.remove",
								"id": 1409
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 120,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.remove",
						"id": 1409
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.remove",
						"id": 1219
					}
				},
				{
					"id": 2317,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2318,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of rows in this table based on the filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.select((rowKey,row)=>(key>2)); //selects and returns all rows with associated key > 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2319,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2320,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2321,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2322,
															"name": "rowKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2323,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/tables/entry-table.ts",
													"line": 19,
													"character": 18
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.select",
								"id": 1382
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EntryTable.select",
								"id": 2243
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 19,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.select",
						"id": 1382
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EntryTable.select",
						"id": 2243
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.select",
						"id": 1192
					}
				},
				{
					"id": 2347,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2348,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the value at the specified position in this table with the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.set(0,2,'2'); //returns '02'\n  t.set(1,2,'12'); //returns undefined\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  1  |  2  |  3  |\n    +-----+-----+-----+-----+\n    |  0  | 01  |  2  | 03  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2349,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2350,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2351,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.set",
								"id": 1367
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 43,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.set",
						"id": 1367
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.set",
						"id": 1177
					}
				},
				{
					"id": 2311,
					"name": "subTable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2312,
							"name": "subTable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of rows beginning at the fromIndex inclusive and ending at toIndex exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.subTable(2,6); //returns table with rows 2,3,4,5\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2313,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2314,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/data-table.ts",
							"line": 69,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2315
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2342
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2343,
						2338,
						2362,
						2331,
						2365,
						2359,
						2356,
						2352,
						2340,
						2300,
						2305,
						2308,
						2303,
						2324,
						2368,
						2317,
						2347,
						2311
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/tables/data-table.ts",
					"line": 8,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EntryTable",
					"id": 2237,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Table",
					"id": 1169,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			]
		},
		{
			"id": 1580,
			"name": "DiGraph",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A directed graph data structure."
			},
			"typeParameter": [
				{
					"id": 1581,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1582,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1583,
							"name": "new DiGraph",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DiGraph",
								"id": 1580
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractGraph.__constructor",
								"id": 831
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/graphs/di-graph.ts",
							"line": 11,
							"character": 50
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractGraph.__constructor",
						"id": 831
					}
				},
				{
					"id": 1592,
					"name": "_adjList",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 14,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"id": 505,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Vertex",
								"id": 601,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							{
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph._adjList",
						"id": 830
					}
				},
				{
					"id": 1591,
					"name": "_edges",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 13,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Set",
						"id": 436,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Edge",
								"id": 607,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph._edges",
						"id": 829
					}
				},
				{
					"id": 1590,
					"name": "_vertices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 12,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "Set",
						"id": 436,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Vertex",
								"id": 601,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph._vertices",
						"id": 828
					}
				},
				{
					"id": 1593,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1594,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a new vertex with the specified label to this graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.add(25);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1595,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.add",
								"id": 833
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.add",
								"id": 618
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 28,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.add",
						"id": 833
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.add",
						"id": 617
					}
				},
				{
					"id": 1596,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1597,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add new vertices with the labels present in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.addAll([25,22,11,43]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1598,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.addAll",
								"id": 836
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addAll",
								"id": 621
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 38,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.addAll",
						"id": 836
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addAll",
						"id": 620
					}
				},
				{
					"id": 1615,
					"name": "addEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1616,
							"name": "addEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add the specified edge to the graph. The start and end vertices are added automatically to the graph if not present.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, e:Edge<number>\n  g.addEdge(e);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1617,
									"name": "edge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.addEdge",
								"id": 855
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addEdge",
								"id": 640
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 117,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.addEdge",
						"id": 855
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addEdge",
						"id": 639
					}
				},
				{
					"id": 1599,
					"name": "addVertex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1600,
							"name": "addVertex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add the specified vertex to the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.addVertex(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1601,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.addVertex",
								"id": 839
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addVertex",
								"id": 624
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 48,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.addVertex",
						"id": 839
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addVertex",
						"id": 623
					}
				},
				{
					"id": 1602,
					"name": "addVertices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1603,
							"name": "addVertices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all vertices in the specified array to the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, a,b,c,d:Vertex<number>\n  g.addVertices([a,b,c,d]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1604,
									"name": "vertices",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vertex",
											"id": 601,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.addVertices",
								"id": 842
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.addVertices",
								"id": 627
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 58,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.addVertices",
						"id": 842
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.addVertices",
						"id": 626
					}
				},
				{
					"id": 1625,
					"name": "adjacentEdges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1626,
							"name": "adjacentEdges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of edges starting from specified vertex.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.adjacentEdges(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1627,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Edge",
												"id": 607,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.adjacentEdges",
								"id": 865
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.adjacentEdges",
								"id": 650
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 160,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.adjacentEdges",
						"id": 865
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.adjacentEdges",
						"id": 649
					}
				},
				{
					"id": 1628,
					"name": "adjacentVertices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1629,
							"name": "adjacentVertices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of vertices adjacent to the specified vertex.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.adjacentVertices(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1630,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Vertex",
												"id": 601,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.adjacentVertices",
								"id": 868
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.adjacentVertices",
								"id": 653
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 170,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.adjacentVertices",
						"id": 868
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.adjacentVertices",
						"id": 652
					}
				},
				{
					"id": 1587,
					"name": "bfs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1588,
							"name": "bfs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "BFS Traverse the graph starting from the specified vertex and return the list of vertices.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dgraph:DGraph<number>\n  dgraph.bfs(); // returns a List of numbers.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1589,
									"name": "startVertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._vertices.toArray()[0]"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/graphs/di-graph.ts",
							"line": 46,
							"character": 5
						}
					]
				},
				{
					"id": 1611,
					"name": "createEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1612,
							"name": "createEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create vertices from the given labels and an edge connecting them and add it to the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.createEdge(25,26);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1613,
									"name": "startLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 1614,
									"name": "endLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.createEdge",
								"id": 851
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.createEdge",
								"id": 636
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 105,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.createEdge",
						"id": 851
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.createEdge",
						"id": 635
					}
				},
				{
					"id": 1584,
					"name": "dfs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1585,
							"name": "dfs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "DFS Traverse the graph starting from the specified vertex and return the list of vertices.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dgraph:DGraph<number>\n  dgraph.dfs(); // returns a List of numbers.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1586,
									"name": "startVertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									},
									"defaultValue": " this._vertices.toArray()[0]"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/graphs/di-graph.ts",
							"line": 23,
							"character": 5
						}
					]
				},
				{
					"id": 1623,
					"name": "edgeSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1624,
							"name": "edgeSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of edges present in the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.edgeSet();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.edgeSet",
								"id": 863
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.edgeSet",
								"id": 648
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 151,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.edgeSet",
						"id": 863
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.edgeSet",
						"id": 647
					}
				},
				{
					"id": 1605,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1606,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove a single vertex with the specified label from the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.remove(25);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1607,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.remove",
								"id": 845
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.remove",
								"id": 630
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 72,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.remove",
						"id": 845
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.remove",
						"id": 629
					}
				},
				{
					"id": 1618,
					"name": "removeEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1619,
							"name": "removeEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove the specified edge from the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, e:Edge<number>\n  g.removeEdge(e);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1620,
									"name": "edge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.removeEdge",
								"id": 858
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.removeEdge",
								"id": 643
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 128,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.removeEdge",
						"id": 858
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.removeEdge",
						"id": 642
					}
				},
				{
					"id": 1608,
					"name": "removeVertex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1609,
							"name": "removeVertex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove the specified vertex from the graph.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>, v:Vertex<number>\n  g.removeVertex(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1610,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.removeVertex",
								"id": 848
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.removeVertex",
								"id": 633
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 89,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.removeVertex",
						"id": 848
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.removeVertex",
						"id": 632
					}
				},
				{
					"id": 1621,
					"name": "vertexSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1622,
							"name": "vertexSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of vertices present in the graph.(a copy of the set is returned).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //g:Graph<number>\n  g.vertexSet();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractGraph.vertexSet",
								"id": 861
							},
							"implementationOf": {
								"type": "reference",
								"name": "Graph.vertexSet",
								"id": 646
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-graph.ts",
							"line": 142,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractGraph.vertexSet",
						"id": 861
					},
					"implementationOf": {
						"type": "reference",
						"name": "Graph.vertexSet",
						"id": 645
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1582
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1592,
						1591,
						1590
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1593,
						1596,
						1615,
						1599,
						1602,
						1625,
						1628,
						1587,
						1611,
						1584,
						1623,
						1605,
						1618,
						1608,
						1621
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/graphs/di-graph.ts",
					"line": 11,
					"character": 20
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractGraph",
					"id": 826,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Graph",
					"id": 615,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 1906,
			"name": "Dictionary",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A Map whose keys are always of string type."
			},
			"typeParameter": [
				{
					"id": 1907,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1931,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1932,
							"name": "new Dictionary",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1933,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "MapEntry",
											"id": 500,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Dictionary",
								"id": 1906
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.__constructor",
								"id": 728
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 34
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.__constructor",
						"id": 728
					}
				},
				{
					"id": 1930,
					"name": "_keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractSet",
						"id": 655,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap._keys",
						"id": 727
					}
				},
				{
					"id": 1929,
					"name": "_values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractList",
						"id": 300,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap._values",
						"id": 726
					}
				},
				{
					"id": 1934,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1935,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the mappings from this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map: [{\"1\":1},{\"2\":2},{\"3\":3}]\nmap.clear();\n//now : []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.clear",
								"id": 731
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.clear",
								"id": 509
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 21,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.clear",
						"id": 731
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.clear",
						"id": 508
					}
				},
				{
					"id": 1914,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1915,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this Dictionary instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newDict = dict.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 51,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 1936,
					"name": "compute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1937,
							"name": "compute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.compute(k1, (key,value,map)=>(value+11)); //returns 12\n  //now the value changes to 12+11 -> 23\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1938,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1939,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1940,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1941,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1942,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1943,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 1944,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 32,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.compute",
								"id": 733
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.compute",
						"id": 733
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.compute",
						"id": 510
					}
				},
				{
					"id": 1945,
					"name": "computeIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1946,
							"name": "computeIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.computeIfAbsent(k1, (key,value,map)=>(23)); //returns 12\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1947,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1948,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1949,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1950,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1951,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1952,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 1953,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 46,
													"character": 37
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.computeIfAbsent",
								"id": 742
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 46,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.computeIfAbsent",
						"id": 742
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfAbsent",
						"id": 519
					}
				},
				{
					"id": 1954,
					"name": "computeIfPresent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1955,
							"name": "computeIfPresent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to null\n  map.computeIfAbsent(k1, (key,value,map)=>(value+11)); //returns null\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1956,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1957,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1958,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1959,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1960,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1961,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1962,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 62,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.computeIfPresent",
								"id": 751
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 62,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.computeIfPresent",
						"id": 751
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfPresent",
						"id": 528
					}
				},
				{
					"id": 1963,
					"name": "containsKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1964,
							"name": "containsKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains a mapping for the specified key.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsKey(k1); //returns true\n  map.containsKey(k5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1965,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.containsKey",
								"id": 760
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 78,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.containsKey",
						"id": 760
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsKey",
						"id": 537
					}
				},
				{
					"id": 1966,
					"name": "containsValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1967,
							"name": "containsValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map maps one or more keys to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsValue(1); //returns true\n  map.containsValue(5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1968,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.containsValue",
								"id": 763
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.containsValue",
								"id": 541
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 89,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.containsValue",
						"id": 763
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsValue",
						"id": 540
					}
				},
				{
					"id": 1908,
					"name": "count",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1909,
							"name": "count",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number occurances of an item in the dictionary",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dict contains [{'a':1},{'b':2},{'c':3},{'d':2},{'f':1},{'e':2},{'g':4}]\n  dict.count(2) // returns 3\n  dict.count(7) // return 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1910,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 20,
							"character": 7
						}
					]
				},
				{
					"id": 1969,
					"name": "entrySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1970,
							"name": "entrySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the mappings contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.entrySet(); //returns Set [{key:k1, value:1},{key:k2, value:2}]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "reference",
										"name": "MapEntry",
										"id": 500,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.entrySet",
								"id": 766
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.entrySet",
								"id": 544
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 99,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.entrySet",
						"id": 766
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.entrySet",
						"id": 543
					}
				},
				{
					"id": 1971,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1972,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified map with this map for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1 : [{k1:1},{k2:2},{k3:null}]\n  //map2 : [{k1:1},{k3:4}]\n  map1.equals(map2) //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1973,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.equals",
								"id": 768
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.equals",
								"id": 546
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 115,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.equals",
						"id": 768
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.equals",
						"id": 545
					}
				},
				{
					"id": 1974,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1975,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each entry in this map until all entries have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.forEach((key, value, map)=>{\n     console.log(key+\"->\"+value+\",\");\n  });\n  //Output: one->1,two->2,three->3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1976,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1977,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1978,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1979,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1980,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1981,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 137,
													"character": 16
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.forEach",
								"id": 771
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 137,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.forEach",
						"id": 771
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.forEach",
						"id": 548
					}
				},
				{
					"id": 1922,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1923,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //json = '{\"a\":1,\"b\":2,\"c\":3}'\n  dict = new Dictionary<number>().fromString(json,(x)=>(parseFloat(x)));\n  //dict contains [{'a':1},{'b':2},{'c':3}]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1924,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1925,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1926,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1927,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1928,
															"name": "itemJSON",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/maps/dictionary.ts",
													"line": 79,
													"character": 42
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 79,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.fromString",
						"id": 1234
					}
				},
				{
					"id": 1982,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1983,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped. undefined if there is no mapping.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.get(k1); //returns 1\n  map.get(k3); //returns null\n  map.get(k4); //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1984,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.get",
								"id": 779
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 152,
							"character": 4
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.get",
						"id": 779
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.get",
						"id": 556
					}
				},
				{
					"id": 1911,
					"name": "getKeys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1912,
							"name": "getKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a set of keys associated with a given item",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dict contains [{'a':1},{'b':2},{'c':3},{'d':2},{'f':1},{'e':2},{'g':4}]\n  dict.getKeys(2) //return a set containing ['b','d','e']\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1913,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 36,
							"character": 9
						}
					]
				},
				{
					"id": 1985,
					"name": "getOrDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1986,
							"name": "getOrDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key or if key is mapped to null.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.getOrDefault(k1,5); //returns 1\n  map.getOrDefault(k3,12); //returns 12\n  map.getOrDefault(k4,16); //returns 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1987,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1988,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.getOrDefault",
								"id": 782
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 166,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.getOrDefault",
						"id": 782
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.getOrDefault",
						"id": 559
					}
				},
				{
					"id": 1989,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1990,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains no key-value mappings.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isEmpty(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isEmpty(); //false\n  //map : []\n  map.isEmpty(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.isEmpty",
								"id": 786
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.isEmpty",
								"id": 564
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 180,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.isEmpty",
						"id": 786
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.isEmpty",
						"id": 563
					}
				},
				{
					"id": 1991,
					"name": "isNull",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1992,
							"name": "isNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains mappings to only null values or if  the map is empty.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isNull(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isNull(); //true\n  //map : []\n  map.isNull(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.isNull",
								"id": 788
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 194,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.isNull",
						"id": 788
					}
				},
				{
					"id": 1993,
					"name": "keySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1994,
							"name": "keySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the keys contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.keySet(); //[\"one\",\"two\",\"three\"]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.keySet",
								"id": 790
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.keySet",
								"id": 566
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 204,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.keySet",
						"id": 790
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.keySet",
						"id": 565
					}
				},
				{
					"id": 1995,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1996,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Associates the specified value with the specified key in this map.Returns the old value associated with the key or  undefined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map : [{\"one\":1},{\"two\":2},{\"three\":3}]\nmap.put(\"one\",22); //return 1\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3}]\nmap.put(\"four\",4);//return undefined\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3},{\"four\":4}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1997,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1998,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.put",
								"id": 792
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 217,
							"character": 4
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.put",
						"id": 792
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.put",
						"id": 567
					}
				},
				{
					"id": 1999,
					"name": "putAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2000,
							"name": "putAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copies all of the mappings from the specified map to this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1: [{k1:v1},{k2:v2},{k3:v3}], map2: [{k2:v4},{k4:v6},{k6:v8}]\n  map1.putAll(map2);\n  //now map1: [{k1:v1},{k2:v4},{k3:v3},{k4:v6},{k6:v8}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2001,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.putAll",
								"id": 796
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.putAll",
								"id": 572
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 237,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.putAll",
						"id": 796
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.putAll",
						"id": 571
					}
				},
				{
					"id": 2002,
					"name": "putIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2003,
							"name": "putIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns undefined, else returns the current value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.putIfAbsent(\"four\",4); //return undefined (adds {\"four\":4} to the map)\n  map.putIfAbsent(\"one\",23); //return 1 (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2004,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2005,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.putIfAbsent",
								"id": 799
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 249,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.putIfAbsent",
						"id": 799
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.putIfAbsent",
						"id": 574
					}
				},
				{
					"id": 2006,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2007,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the mapping for a key from this map if it is present.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.remove(\"one\"); //return 1\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.remove(\"four\"); //return undefined (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2008,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.remove",
								"id": 803
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 263,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.remove",
						"id": 803
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.remove",
						"id": 578
					}
				},
				{
					"id": 2009,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2010,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the entry for the specified key only if it is currently mapped to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.removeIf(\"one\", 1); //return true\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.removeIf(\"two\",5); //return false (map unchanged)\n  map.removeIf(\"four\",4); //return false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2011,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2012,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.removeIf",
								"id": 806
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 281,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.removeIf",
						"id": 806
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.removeIf",
						"id": 581
					}
				},
				{
					"id": 2013,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2014,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace all entries with specified value with the new value. Returns true if map was changed.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replace(5,2) //returns true;\n  //now map : [{k1:1},{k2:2},{k3:3},{k4:2},{k5:1}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2015,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 2016,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.replace",
								"id": 810
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.replace",
								"id": 586
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 293,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.replace",
						"id": 810
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.replace",
						"id": 585
					}
				},
				{
					"id": 2017,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2018,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replaceAll((k,v,m)=>(v*2)); //replace with its double\n  //map : [{k1:2},{k2:10},{k3:6},{k4:10},{k5:2}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2019,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2020,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2021,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2022,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2023,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 2024,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 310,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.replaceAll",
								"id": 814
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 310,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.replaceAll",
						"id": 814
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.replaceAll",
						"id": 589
					}
				},
				{
					"id": 2025,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2026,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of key-value mappings in this map.(key->null mappings are counted)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.size(); //return 5\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.size",
								"id": 822
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.size",
								"id": 598
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 322,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.size",
						"id": 822
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.size",
						"id": 597
					}
				},
				{
					"id": 1916,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1917,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the dictionary into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dictionary contains [{'a':1},{'b':2},{'c':3}]\n  console.log(arrayList.toString((x)=>(x.toString())));\n  //Output\n  //'{\"a\":1,\"b\":2,\"c\":3}'\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1918,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1919,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1920,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1921,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/maps/dictionary.ts",
													"line": 63,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 63,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 1228
					}
				},
				{
					"id": 2027,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2028,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a List view of the values contained in this map.\n//map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\nmap.values(); //return list : [1,5,3,5,1]"
							},
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 300,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.values",
								"id": 824
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.values",
								"id": 600
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 331,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.values",
						"id": 824
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.values",
						"id": 599
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1931
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1930,
						1929
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1934,
						1914,
						1936,
						1945,
						1954,
						1963,
						1966,
						1908,
						1969,
						1971,
						1974,
						1922,
						1982,
						1911,
						1985,
						1989,
						1991,
						1993,
						1995,
						1999,
						2002,
						2006,
						2009,
						2013,
						2017,
						2025,
						1916,
						2027
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/maps/dictionary.ts",
					"line": 11,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractMap",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ParameterMap",
					"id": 2802
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Map",
					"id": 505,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "Dictionary",
							"id": 1906,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 1227
				}
			]
		},
		{
			"id": 607,
			"name": "Edge",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": " An Edge in graph datastructure."
			},
			"typeParameter": [
				{
					"id": 608,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 611,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 612,
							"name": "new Edge",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 613,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								},
								{
									"id": 614,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Edge",
								"id": 607
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 15,
							"character": 16
						}
					]
				},
				{
					"id": 610,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 15,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "Vertex",
						"id": 601,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							}
						]
					}
				},
				{
					"id": 609,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 14,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "Vertex",
						"id": 601,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						611
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						610,
						609
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/graph.ts",
					"line": 13,
					"character": 17
				}
			]
		},
		{
			"id": 2237,
			"name": "EntryTable",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Entry Table is mapping from a set of row and column keys to a value."
			},
			"typeParameter": [
				{
					"id": 2238,
					"name": "R",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 2239,
					"name": "C",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 2240,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2241,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2242,
							"name": "new EntryTable",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "EntryTable",
								"id": 2237
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.__constructor",
								"id": 1361
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 9,
							"character": 65
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.__constructor",
						"id": 1361
					}
				},
				{
					"id": 2268,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 7,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractMap",
						"id": 723,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "R"
							},
							{
								"type": "reference",
								"name": "AbstractMap",
								"id": 723,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable._store",
						"id": 1360
					}
				},
				{
					"id": 2269,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2270,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a row to this table only if row curresponding to given key is absent.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //t:Table<number,number,string>\n  var r = new ArrayMap<number,string>(5);\n  r.add(1,'01');\n  r.add(2,'02');\n  r.add(3,'03');\n  t.add(0, r);\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  1  |  2  |  3  |\n    +-----+-----+-----+-----+\n    |  0  | 01  | 02  | 03  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2271,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 2272,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.add",
								"id": 1363
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 28,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.add",
						"id": 1363
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.add",
						"id": 1173
					}
				},
				{
					"id": 2264,
					"name": "attributes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2265,
							"name": "attributes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the set of all column keys of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.attributes(); //returns <Set>{1,2,3}\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 61,
							"character": 12
						}
					]
				},
				{
					"id": 2288,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2289,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.delete(0); //calling this function makes the table empty.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2290,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.delete",
								"id": 1396
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.delete",
								"id": 1207
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 92,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.delete",
						"id": 1396
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.delete",
						"id": 1206
					}
				},
				{
					"id": 2257,
					"name": "deleteIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2258,
							"name": "deleteIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table based on filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.deleteIf((rowKey, row) => (row.get(2)=='02')); //delete all rows with value '02' in the cell correspondin to column 2.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2259,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2260,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2261,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2262,
															"name": "rowKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "R"
															}
														},
														{
															"id": 2263,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "C"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/tables/entry-table.ts",
													"line": 50,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.deleteIf",
								"id": 1399
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 50,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.deleteIf",
						"id": 1399
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.deleteIf",
						"id": 1209
					}
				},
				{
					"id": 2291,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2292,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire column from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.drop(2);\n  /*\n    +-----+-----+-----+\n    |  X  |  1  |  3  |\n    +-----+-----+-----+\n    |  0  | 01  | 03  |\n    +-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2293,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.drop",
								"id": 1406
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.drop",
								"id": 1217
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 110,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.drop",
						"id": 1406
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.drop",
						"id": 1216
					}
				},
				{
					"id": 2285,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2286,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire column of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.extract(2); //returns <Map>[{0:'02'}]\n  t.extract(5); //returns <Map>[{0: undefined}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2287,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractMap",
								"id": 723,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "V"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.extract",
								"id": 1379
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.extract",
								"id": 1190
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 72,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.extract",
						"id": 1379
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.extract",
						"id": 1189
					}
				},
				{
					"id": 2282,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2283,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire row of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.fetch(0);  //returns <Map>[{1:'01'},{2:'02'},{3:'03'}]\n  t.fetch(1);  //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2284,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AbstractMap",
										"id": 723,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.fetch",
								"id": 1376
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.fetch",
								"id": 1187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 63,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.fetch",
						"id": 1376
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.fetch",
						"id": 1186
					}
				},
				{
					"id": 2278,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2279,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entry from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.get(0,3); //returns '03'\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2280,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 2281,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.get",
								"id": 1372
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.get",
								"id": 1183
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 53,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.get",
						"id": 1372
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.get",
						"id": 1182
					}
				},
				{
					"id": 2266,
					"name": "indexes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2267,
							"name": "indexes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the set of all row keys of this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.indexes(); //returns <Set>{0}\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 74,
							"character": 9
						}
					]
				},
				{
					"id": 2250,
					"name": "project",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2251,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of columns in this table based on the filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.project((columnKey, col) => ([1,3].indexOf(columnKey)!=-1)); //project only columns 1 and 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2252,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2253,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2254,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2255,
															"name": "columnKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														},
														{
															"id": 2256,
															"name": "col",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "R"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "typeParameter",
																				"name": "V"
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/tables/entry-table.ts",
													"line": 32,
													"character": 19
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.project",
								"id": 1389
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 32,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.project",
						"id": 1389
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.project",
						"id": 1199
					}
				},
				{
					"id": 2294,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2295,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove an entry from this table.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.remove(0,3); //returns '03' and removes it from the table\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2296,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 2297,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.remove",
								"id": 1409
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.remove",
								"id": 1220
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 120,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.remove",
						"id": 1409
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.remove",
						"id": 1219
					}
				},
				{
					"id": 2243,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2244,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of rows in this table based on the filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.select((rowKey,row)=>(key>2)); //selects and returns all rows with associated key > 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2245,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2246,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2247,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2248,
															"name": "rowKey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "R"
															}
														},
														{
															"id": 2249,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "C"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/tables/entry-table.ts",
													"line": 19,
													"character": 18
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractTable.select",
								"id": 1382
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/tables/entry-table.ts",
							"line": 19,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractTable.select",
						"id": 1382
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.select",
						"id": 1192
					}
				},
				{
					"id": 2273,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2274,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the value at the specified position in this table with the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  t.set(0,2,'2'); //returns '02'\n  t.set(1,2,'12'); //returns undefined\n  /*\n    +-----+-----+-----+-----+\n    |  X  |  1  |  2  |  3  |\n    +-----+-----+-----+-----+\n    |  0  | 01  |  2  | 03  |\n    +-----+-----+-----+-----+\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2275,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 2276,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								},
								{
									"id": 2277,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractTable.set",
								"id": 1367
							},
							"implementationOf": {
								"type": "reference",
								"name": "Table.set",
								"id": 1178
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-table.ts",
							"line": 43,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractTable.set",
						"id": 1367
					},
					"implementationOf": {
						"type": "reference",
						"name": "Table.set",
						"id": 1177
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2241
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2268
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2269,
						2264,
						2288,
						2257,
						2291,
						2285,
						2282,
						2278,
						2266,
						2250,
						2294,
						2243,
						2273
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/tables/entry-table.ts",
					"line": 9,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractTable",
					"id": 1356,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "R"
						},
						{
							"type": "typeParameter",
							"name": "C"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "DataTable",
					"id": 2298
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Table",
					"id": 1169,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "R"
						},
						{
							"type": "typeParameter",
							"name": "C"
						},
						{
							"type": "typeParameter",
							"name": "V"
						}
					]
				}
			]
		},
		{
			"id": 1631,
			"name": "HistoryList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A list of limited size 'n' that stores only the last n items."
			},
			"typeParameter": [
				{
					"id": 1632,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1646,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructs an empty list with an initial capacity of ten.\nConstructs an empty list with the specified initial capacity.\nConstructs a list containing the items."
					},
					"signatures": [
						{
							"id": 1647,
							"name": "new HistoryList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with an initial capacity of ten."
							},
							"type": {
								"type": "reference",
								"name": "HistoryList",
								"id": 1631
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.__constructor",
								"id": 1416
							}
						},
						{
							"id": 1648,
							"name": "new HistoryList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with the specified initial capacity."
							},
							"parameters": [
								{
									"id": 1649,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HistoryList",
								"id": 1631
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.__constructor",
								"id": 1416
							}
						},
						{
							"id": 1650,
							"name": "new HistoryList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs a list containing the items."
							},
							"parameters": [
								{
									"id": 1651,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1652,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HistoryList",
								"id": 1631
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.__constructor",
								"id": 1416
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 11,
							"character": 30
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 16,
							"character": 15
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 20,
							"character": 37
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 24,
							"character": 51
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.__constructor",
						"id": 302
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.__constructor",
						"id": 1416
					}
				},
				{
					"id": 1645,
					"name": "_capacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 11,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList._capacity",
						"id": 1415
					}
				},
				{
					"id": 1733,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 1633,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1634,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6] -capacity 6\n  list.add(7); //[2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1635,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayList.add",
								"id": 1423
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 139
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/history-list.ts",
							"line": 13,
							"character": 5
						},
						{
							"fileName": "ds/lists/history-list.ts",
							"line": 14,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayList.add",
						"id": 1423
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 138
					}
				},
				{
					"id": 1636,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1637,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5] - capacity 6\n  list.addAll([6,7]); //[2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1638,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayList.addAll",
								"id": 1429
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 145
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/history-list.ts",
							"line": 28,
							"character": 8
						},
						{
							"fileName": "ds/lists/history-list.ts",
							"line": 29,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayList.addAll",
						"id": 1429
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 144
					}
				},
				{
					"id": 1734,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1735,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 185
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 184
					}
				},
				{
					"id": 1642,
					"name": "clearUntill",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1643,
							"name": "clearUntill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clear old items in the history list retaining the last n elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5]\n  list.clearUntil(2); //return [1,2,3]\n  //now list contain [4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1644,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/history-list.ts",
							"line": 55,
							"character": 13
						}
					]
				},
				{
					"id": 1682,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1683,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this ArrayList instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newArrayList = arrayList.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.clone",
								"id": 1464
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 124,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.clone",
						"id": 1464
					},
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 1736,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1737,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1738,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 186
					}
				},
				{
					"id": 1739,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1740,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1741,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 190
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 189
					}
				},
				{
					"id": 1653,
					"name": "ensureCapacity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1654,
							"name": "ensureCapacity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Increases the capacity of this ArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList has a capacity 10\n  arrayList.ensureCapacity(15);\n  //new capacity is 15\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1655,
									"name": "minCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.ensureCapacity",
								"id": 1435
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 71,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.ensureCapacity",
						"id": 1435
					}
				},
				{
					"id": 1742,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1743,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1744,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 192
					}
				},
				{
					"id": 1656,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1657,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new ArrayList after filtering the items based on the filterFn",
								"tags": [
									{
										"tag": "example",
										"text": "\n//arryList [1,2,3,4,5]\narrayList.filter(x => (x < 4)); //returns an ArrayList [1,2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1658,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1659,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1660,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1661,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1662,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1663,
															"name": "list",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "ArrayList",
																"id": 1413,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 81,
													"character": 18
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.filter",
								"id": 1438
							}
						},
						{
							"id": 1664,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new ArrayList after filtering the items based on the filterFn with the given initial capacity",
								"tags": [
									{
										"tag": "example",
										"text": "\n//arryList [1,2,3,4,5]\narrayList.filter(x => (x < 4), 5); //returns an ArrayList [1,2,3] with capacity 5\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1665,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1666,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1667,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1668,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1669,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1670,
															"name": "list",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "ArrayList",
																"id": 1413,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 88,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 1671,
									"name": "capacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.filter",
								"id": 1438
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 81,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 88,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 89,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.filter",
						"id": 1438
					}
				},
				{
					"id": 1768,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1769,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1770,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1771,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1772,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1773,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1774,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1775,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 218
					}
				},
				{
					"id": 1692,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1693,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //json = \"[1,2,3,4]\"\n  arrayList = new ArrayList<number>().fromString(json,(x)=>(parseFloat(x)));\n  //arrayList contains [1,2,3,4]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1694,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1695,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1696,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1697,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1698,
															"name": "itemJ",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 160,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.fromString",
								"id": 1474
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 160,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.fromString",
						"id": 1474
					},
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.fromString",
						"id": 1234
					}
				},
				{
					"id": 1699,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1700,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1701,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.get",
								"id": 317
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 151
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.get",
						"id": 317
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 150
					}
				},
				{
					"id": 1702,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1703,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1704,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.indexOf",
								"id": 320
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.indexOf",
						"id": 320
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 153
					}
				},
				{
					"id": 1745,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1746,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 196
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 195
					}
				},
				{
					"id": 1776,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1777,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 226
					}
				},
				{
					"id": 1705,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1706,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 1707,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.lastIndexOf",
								"id": 323
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.lastIndexOf",
						"id": 323
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 156
					}
				},
				{
					"id": 1708,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1709,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator(); //starts at index 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1710,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.listIterator",
								"id": 326
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 160
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.listIterator",
						"id": 326
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 159
					}
				},
				{
					"id": 1711,
					"name": "median",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1712,
							"name": "median",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median of this list. If the list is empty returns undefined.\nIn case of two medians the later one is preferred.",
								"tags": [
									{
										"tag": "example",
										"text": "\n //list contains [1, 2, 3, 4]\nlist.median(); //returns 3\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.median",
								"id": 329
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.median",
								"id": 163
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.median",
						"id": 329
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.median",
						"id": 162
					}
				},
				{
					"id": 1639,
					"name": "recent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1640,
							"name": "recent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the recent (last) n items from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5]\n  list.recent(3); //[3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1641,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "unknown",
									"name": "E"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/history-list.ts",
							"line": 44,
							"character": 8
						}
					]
				},
				{
					"id": 1747,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1748,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1749,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 198
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 197
					}
				},
				{
					"id": 1750,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1751,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1752,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 201
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 200
					}
				},
				{
					"id": 1713,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1714,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1715,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeAt",
								"id": 331
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 165
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeAt",
						"id": 331
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 164
					}
				},
				{
					"id": 1753,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1754,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1755,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1756,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1757,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1758,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1759,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1760,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 203
					}
				},
				{
					"id": 1716,
					"name": "removeRange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1717,
							"name": "removeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6]\n  console.log(list.removeRange(1,4)); //[1,5,6]\n  //Output: [2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1718,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1719,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeRange",
								"id": 334
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 126,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeRange",
						"id": 334
					}
				},
				{
					"id": 1672,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1673,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each element of this list with the result of applying the mapping function",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4]\n  arrayList.map((x)=>(x*2));\n  //now arrayList contains [2,4,6,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1674,
									"name": "mappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1675,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1676,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1677,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 105,
													"character": 23
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.replaceAll",
								"id": 1454
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 105,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.replaceAll",
						"id": 1454
					}
				},
				{
					"id": 1761,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1762,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1763,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 211
					}
				},
				{
					"id": 1731,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1732,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverse the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5]\n  list.reverse() //now list contains [5,4,3,2,1]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.reverse",
								"id": 353
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.reverse",
								"id": 183
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 173,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.reverse",
						"id": 353
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.reverse",
						"id": 182
					}
				},
				{
					"id": 1720,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1721,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1722,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1723,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.set",
								"id": 338
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 168
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 137,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.set",
						"id": 338
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 167
					}
				},
				{
					"id": 1764,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1765,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 215
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 214
					}
				},
				{
					"id": 1724,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1725,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is considered smaller than y if the compareFn(x,y) is negetive",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1726,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1727,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1728,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1729,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1730,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 152,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.sort",
								"id": 342
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 152,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.sort",
						"id": 342
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 171
					}
				},
				{
					"id": 1678,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1679,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1680,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1681,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.subList",
								"id": 349
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.subList",
								"id": 1460
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 179
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 115,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.subList",
						"id": 349
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.subList",
						"id": 1460
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 178
					}
				},
				{
					"id": 1766,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1767,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 217
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 216
					}
				},
				{
					"id": 1686,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1687,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the arrayList into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4]\n  console.log(arrayList.toString((x)=>(x.toString())));\n  //Output\n  //\"[1,2,3,4]\"\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1688,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1689,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1690,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1691,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 146,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.toString",
								"id": 1468
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.toString",
						"id": 1468
					},
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 1228
					}
				},
				{
					"id": 1684,
					"name": "trimToSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1685,
							"name": "trimToSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trims the capacity of this ArrayList instance to be the list's current size.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4,5] and capacity is 10\n  arrayList.trimToSize(); //new capacity is 5\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayList.trimToSize",
								"id": 1466
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 134,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayList.trimToSize",
						"id": 1466
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1646
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1645,
						1733
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1633,
						1636,
						1734,
						1642,
						1682,
						1736,
						1739,
						1653,
						1742,
						1656,
						1768,
						1692,
						1699,
						1702,
						1745,
						1776,
						1705,
						1708,
						1711,
						1639,
						1747,
						1750,
						1713,
						1753,
						1716,
						1672,
						1761,
						1731,
						1720,
						1764,
						1724,
						1678,
						1766,
						1686,
						1684
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/lists/history-list.ts",
					"line": 6,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 1413,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 136,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayList",
							"id": 1413,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 1227
				}
			]
		},
		{
			"id": 13,
			"name": "Iterator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Used to iterate over Iterable objects"
			},
			"typeParameter": [
				{
					"id": 14,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 17,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 18,
							"name": "new Iterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 19,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13
							}
						},
						{
							"id": 20,
							"name": "new Iterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 21,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								},
								{
									"id": 22,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 31
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 9,
							"character": 39
						}
					]
				},
				{
					"id": 16,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 15,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					}
				},
				{
					"id": 23,
					"name": "forEachRemaining",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 24,
							"name": "forEachRemaining",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4], iterator pointer after 2\n  iterator.forEachRemaining(function(item, index) {\n    console.log(item*2);\n  });\n  // Output: 6 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 25,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 27,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 28,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 29,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "classes/iterator.ts",
													"line": 24,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 24,
							"character": 18
						}
					]
				},
				{
					"id": 30,
					"name": "hasNext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 31,
							"name": "hasNext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the iteration has more elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4] iterator pointer after 3.\n  if(iterator.hasNext()) console.log(\"Elements remaining\");\n  //Ouput: Elements remaining\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 37,
							"character": 9
						}
					]
				},
				{
					"id": 32,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the next element in the iteration.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,25,83,48] iterator pointer after 1.\n  console.log((item = iterator.next());\n  //Output 25\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 48,
							"character": 6
						}
					]
				},
				{
					"id": 34,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 35,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from the underlying Iterable the last element returned by this iterator.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,25,83,48] iterator pointer after 1.\n  iterator.next() //returns 25\n  iterator.remove(); //removes 25\n  // now target contains [1,83,48]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 60,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						17
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16,
						15
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						23,
						30,
						32,
						34
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/iterator.ts",
					"line": 4,
					"character": 21
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ListIterator",
					"id": 36
				}
			]
		},
		{
			"id": 36,
			"name": "ListIterator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Iterator modified to iterate over lists"
			},
			"typeParameter": [
				{
					"id": 37,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 59,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 60,
							"name": "new ListIterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 61,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.__constructor",
								"id": 17
							}
						},
						{
							"id": 62,
							"name": "new ListIterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 63,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								},
								{
									"id": 64,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.__constructor",
								"id": 17
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 31
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 9,
							"character": 39
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.__constructor",
						"id": 17
					}
				},
				{
					"id": 58,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator._index",
						"id": 16
					}
				},
				{
					"id": 57,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator._target",
						"id": 15
					}
				},
				{
					"id": 38,
					"name": "lastIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 6,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 39,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 40,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element into the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  iterator.add(25);\n  //new list contains [1,5,11,25,26]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 41,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 15,
							"character": 5
						}
					]
				},
				{
					"id": 65,
					"name": "forEachRemaining",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 66,
							"name": "forEachRemaining",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4], iterator pointer after 2\n  iterator.forEachRemaining(function(item, index) {\n    console.log(item*2);\n  });\n  // Output: 6 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 67,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 68,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 69,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 70,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 71,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "classes/iterator.ts",
													"line": 24,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.forEachRemaining",
								"id": 23
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 24,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.forEachRemaining",
						"id": 23
					}
				},
				{
					"id": 72,
					"name": "hasNext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 73,
							"name": "hasNext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the iteration has more elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4] iterator pointer after 3.\n  if(iterator.hasNext()) console.log(\"Elements remaining\");\n  //Ouput: Elements remaining\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.hasNext",
								"id": 30
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 37,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.hasNext",
						"id": 30
					}
				},
				{
					"id": 44,
					"name": "hasPrevious",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 45,
							"name": "hasPrevious",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this list iterator has more elements when traversing the list in the reverse direction.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer before 1\n  console.log(iterator.hasPrevious());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 42,
							"character": 13
						}
					]
				},
				{
					"id": 42,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the next element in the iteration.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  console.log(iterator.next());\n  //Output: 11\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterator.next",
								"id": 32
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 27,
							"character": 6
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterator.next",
						"id": 32
					}
				},
				{
					"id": 48,
					"name": "nextIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "nextIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the element that would be returned by a subsequent call to next().",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.nextIndex());\n  //Output: 3\n  iterator.next();\n  console.log(iterator.nextIndex());\n  //Output: -1\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 71,
							"character": 11
						}
					]
				},
				{
					"id": 46,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 47,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the previous element in the list and moves the cursor position backwards.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.previous());\n  //Output: 11\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 53,
							"character": 10
						}
					]
				},
				{
					"id": 50,
					"name": "previousIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 51,
							"name": "previousIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the element that would be returned by a subsequent call to previous().",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.previousIndex());\n  //Output: 2\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 82,
							"character": 15
						}
					]
				},
				{
					"id": 55,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 56,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from the underlying Iterable the last element returned by this iterator.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  iterator.previous(); //returns 5\n  iterator.remove(); //removes 5\n  //now target contains [1,11,26]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterator.remove",
								"id": 34
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 108,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterator.remove",
						"id": 34
					}
				},
				{
					"id": 52,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 53,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the last element returned by next() or previous() with the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  iterator.next(); //returns 11\n  iterator.set(15);\n  //now target contains [1,5,15,26]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 54,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 94,
							"character": 5
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						59
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						58,
						57,
						38
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						39,
						65,
						72,
						44,
						42,
						48,
						46,
						50,
						55,
						52
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/list-iterator.ts",
					"line": 4,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Iterator",
					"id": 13,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 2459,
			"name": "NumberMatrix",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An Array Matrix with only number values. Matrix element has a default value of 0."
			},
			"children": [
				{
					"id": 2460,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2461,
							"name": "new NumberMatrix",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2462,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2463,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrix.__constructor",
								"id": 2375
							}
						},
						{
							"id": 2464,
							"name": "new NumberMatrix",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2465,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2466,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2467,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrix.__constructor",
								"id": 2375
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 6,
							"character": 55
						},
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 8,
							"character": 42
						},
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 9,
							"character": 63
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrix.__constructor",
						"id": 2375
					}
				},
				{
					"id": 2507,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix._store",
						"id": 2374
					}
				},
				{
					"id": 2492,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2493,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add to each element in this matrix the corresponding elements in the specified matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2]\n  //  [2 3]\n  //  m2:\n  //  [3 2]\n  //  [4 3]\n  m1.add(m2);\n  //  [4 4]\n  //  [6 6]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2494,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 115,
							"character": 5
						}
					]
				},
				{
					"id": 2532,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2533,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a copy of the current object and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.clone",
								"id": 2413
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 196,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.clone",
						"id": 2413
					},
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 2504,
					"name": "col",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2505,
							"name": "col",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the column correponding to the specified index.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.col(1);  //  [2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2506,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrixColumn",
								"id": 2566
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrix.col",
								"id": 2405
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 179,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrix.col",
						"id": 2405
					}
				},
				{
					"id": 2527,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2528,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check whether the specified matrix is equal to this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2]\n  //  [2 3]\n  //  m2:\n  //  [1 2]\n  //  [2 3]\n  m1.equals(m2); //returns true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2529,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrix",
										"id": 2372,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.equals",
								"id": 2408
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 156,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.equals",
						"id": 2408
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.equals",
						"id": 2050
					}
				},
				{
					"id": 2508,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2509,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read the item at the specified position in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [2 3 4]\n  //  [3 4 5]\n  matrix.get(1,1); //3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2510,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2511,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.get",
								"id": 2383
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.get",
								"id": 2032
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 27,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.get",
						"id": 2383
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.get",
						"id": 2031
					}
				},
				{
					"id": 2519,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2520,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of rows in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.height(); //return 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.height",
								"id": 2394
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.height",
								"id": 2043
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 72,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.height",
						"id": 2394
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.height",
						"id": 2042
					}
				},
				{
					"id": 2512,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2513,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert an item at the specified position in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [2 3 4]\n  //  [3 4 5]\n  matrix.put(0,1,5);\n  //  [1 2 3]\n  //  [5 3 4]\n  //  [3 4 5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2514,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2515,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2516,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.put",
								"id": 2387
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 42,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.put",
						"id": 2387
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.put",
						"id": 2035
					}
				},
				{
					"id": 2501,
					"name": "row",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2502,
							"name": "row",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the row correponding to the specified index.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.row(0);  //  [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2503,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrixRow",
								"id": 2534
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrix.row",
								"id": 2402
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 165,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrix.row",
						"id": 2402
					}
				},
				{
					"id": 2498,
					"name": "scalarMultiply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2499,
							"name": "scalarMultiply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiply each element in this matrix with the specified scalar.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.multiply(2);\n  //  [2 4]\n  //  [4 6]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2500,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 153,
							"character": 16
						}
					]
				},
				{
					"id": 2523,
					"name": "subMatrix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2524,
							"name": "subMatrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the submatrix obtained after removing the specified rows and columns from this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.subMatrix([0],[1])\n  //  [4 6]\n  //  [7 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2525,
									"name": "rows",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2526,
									"name": "cols",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.subMatrix",
								"id": 2398
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.subMatrix",
								"id": 2047
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 95,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.subMatrix",
						"id": 2398
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.subMatrix",
						"id": 2046
					}
				},
				{
					"id": 2495,
					"name": "subtract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2496,
							"name": "subtract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Subtract from each element in this matrix, the corresponding elements in the specified matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.subtract(m2);\n  //  [-2 0]\n  //  [-2 0]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2497,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 134,
							"character": 10
						}
					]
				},
				{
					"id": 2530,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2531,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a 2 dimensional array corresponding to the matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.toArray(); //[[1,2,3],[4,5,6],[7,8,9]]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.toArray",
								"id": 2411
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 181,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.toArray",
						"id": 2411
					}
				},
				{
					"id": 2517,
					"name": "transpose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2518,
							"name": "transpose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the transpose of this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.transpose();\n  //  [1 4 7]\n  //  [2 5 8]\n  //  [3 6 9]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.transpose",
								"id": 2392
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.transpose",
								"id": 2041
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 57,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.transpose",
						"id": 2392
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.transpose",
						"id": 2040
					}
				},
				{
					"id": 2521,
					"name": "width",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2522,
							"name": "width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of columns in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.width(); //return 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.width",
								"id": 2396
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.width",
								"id": 2045
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 81,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.width",
						"id": 2396
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.width",
						"id": 2044
					}
				},
				{
					"id": 2472,
					"name": "allOnes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2473,
							"name": "allOnes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an all-ones matrix of given order.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let allOneMatrix = NumberMatrix.allOnes(2,3)\n  //   [1 1 1]\n  //   [1 1 1]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2474,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2475,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 32,
							"character": 16
						}
					]
				},
				{
					"id": 2489,
					"name": "fromArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2490,
							"name": "fromArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a matrix from the specified two dimensional array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  NumberMatrix.fromArray([[1,2],[3,4]]);\n  //  [1 2]\n  //  [3 4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2491,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 91,
							"character": 18
						}
					]
				},
				{
					"id": 2476,
					"name": "generate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2477,
							"name": "generate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a matrix based on the given order and generateFn function on the indices.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let m = NumberMatrix.generate(3,3,(i,j)=>(i+j));\n  //  [0 1 2]\n  //  [1 2 3]\n  //  [2 3 4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2478,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2479,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2480,
									"name": "generateFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2481,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2482,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2483,
															"name": "rowIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2484,
															"name": "columnIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/matrices/number-matrix.ts",
													"line": 44,
													"character": 60
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 44,
							"character": 17
						}
					]
				},
				{
					"id": 2485,
					"name": "multiply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2486,
							"name": "multiply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiply two matrices and return the resultant matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2 3]\n  //  [2 3 4]\n  //  m2:\n  //  [1 1]\n  //  [2 2]\n  //  [3 3]\n  NumberMatrix.multiply(m1,m2)\n  //  [14 14]\n  //  [20 20]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2487,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								},
								{
									"id": 2488,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 66,
							"character": 17
						}
					]
				},
				{
					"id": 2468,
					"name": "zero",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2469,
							"name": "zero",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a zero matrix of given order.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let zeroMatrix = NumberMatrix.zero(2,3)\n  //   [0 0 0]\n  //   [0 0 0]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2470,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2471,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 21,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2460
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2507
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2492,
						2532,
						2504,
						2527,
						2508,
						2519,
						2512,
						2501,
						2498,
						2523,
						2495,
						2530,
						2517,
						2521,
						2472,
						2489,
						2476,
						2485,
						2468
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/number-matrix.ts",
					"line": 6,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ArrayMatrix",
					"id": 2372,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "SquareMatrix",
					"id": 2598
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Matrix",
					"id": 2029,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayMatrix",
							"id": 2372,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					]
				}
			]
		},
		{
			"id": 2566,
			"name": "NumberMatrixColumn",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A single column of a NumberMatrix.\nIs obtained by calling col() method of a NumberMatrix instance."
			},
			"children": [
				{
					"id": 2568,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2569,
							"name": "new NumberMatrixColumn",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2570,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								},
								{
									"id": 2571,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrixColumn",
								"id": 2566
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrixColumn.__constructor",
								"id": 2441
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 267,
							"character": 33
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrixColumn.__constructor",
						"id": 2441
					}
				},
				{
					"id": 2585,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 298,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixColumn._index",
						"id": 2440
					}
				},
				{
					"id": 2567,
					"name": "_matrix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 267,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "NumberMatrix",
						"id": 2459
					},
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrixColumn._matrix",
						"id": 2439
					}
				},
				{
					"id": 2586,
					"name": "index",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the index of this colun in the matrix it belongs to."
					},
					"getSignature": {
						"id": 2587,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the index of this colun in the matrix it belongs to."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "ArrayMatrixColumn.index",
							"id": 2447
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 315,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixColumn.index",
						"id": 2447
					}
				},
				{
					"id": 2572,
					"name": "matrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the matrix to which this column belong."
					},
					"getSignature": {
						"id": 2573,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the matrix to which this column belong."
						},
						"type": {
							"type": "reference",
							"name": "NumberMatrix",
							"id": 2459
						},
						"overwrites": {
							"type": "reference",
							"name": "ArrayMatrixColumn.matrix",
							"id": 2445
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 277,
							"character": 12
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrixColumn.matrix",
						"id": 2445
					}
				},
				{
					"id": 2574,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2575,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add to this column another column of the same matix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //nm:NumberMatrix.\n  let c1 = nm.col(0);\n  let c2 = nm.col(1);\n  c1.add(c2); // C1 -> C1 + C2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2576,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrixColumn",
										"id": 2566
									}
								}
							],
							"parameters": [
								{
									"id": 2577,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"name": "NumberMatrixColumn",
											"id": 2566
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 2578,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add to this column a multiple of a column of the same matix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  c1.add(c2, 3); // C1 -> C1 + 3C2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2579,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrixColumn",
										"id": 2566
									}
								}
							],
							"parameters": [
								{
									"id": 2580,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"name": "NumberMatrixColumn",
											"id": 2566
										}
									}
								},
								{
									"id": 2581,
									"name": "coeff",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 289,
							"character": 5
						},
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 295,
							"character": 5
						},
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 296,
							"character": 5
						}
					]
				},
				{
					"id": 2588,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2589,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change this matrix column with another column of same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let c1 = am.col(0);\n  let c2 = am.col(1);\n  c1.change(c2);  // corresponds to C1 -> C2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2590,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixColumn",
										"id": 2437,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2591,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixColumn",
											"id": 2437,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrixColumn.change",
								"id": 2449
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 327,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixColumn.change",
						"id": 2449
					},
					"implementationOf": {
						"type": "reference",
						"name": "MatrixColumn.change",
						"id": 2063
					}
				},
				{
					"id": 2592,
					"name": "interchange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2593,
							"name": "interchange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Interchange this column with another column of the same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let c1 = am.col(0);\n  let c2 = am.col(1);\n  c1.interchange(c2);  // corresponds to C1 <-> C2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2594,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixColumn",
										"id": 2437,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2595,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixColumn",
											"id": 2437,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrixColumn.interchange",
								"id": 2453
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 345,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixColumn.interchange",
						"id": 2453
					},
					"implementationOf": {
						"type": "reference",
						"name": "MatrixColumn.interchange",
						"id": 2066
					}
				},
				{
					"id": 2582,
					"name": "multiply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2583,
							"name": "multiply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiply all entries of a column by a non-zero scalar.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //nm:NumberMatrix.\n  let c1 = nm.col(0);\n  c1.multiply(5); // C1 -> 5.C1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2584,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 316,
							"character": 10
						}
					]
				},
				{
					"id": 2596,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2597,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an array corresponding to this column.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  //  [1 1 1]\n  //  [0 1 1]\n  //  [0 0 1]\n  am.col(1).toArray() // [1,1,0]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrixColumn.toArray",
								"id": 2457
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 367,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixColumn.toArray",
						"id": 2457
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2568
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2585,
						2567
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2586,
						2572
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2574,
						2588,
						2592,
						2582,
						2596
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/number-matrix.ts",
					"line": 266,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ArrayMatrixColumn",
					"id": 2437,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "MatrixColumn",
					"id": 2061,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				}
			]
		},
		{
			"id": 2534,
			"name": "NumberMatrixRow",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A single row of a NumberMatrix.\nIs obtained by calling row() method of a NumberMatrix instance."
			},
			"children": [
				{
					"id": 2536,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2537,
							"name": "new NumberMatrixRow",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2538,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								},
								{
									"id": 2539,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrixRow",
								"id": 2534
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrixRow.__constructor",
								"id": 2419
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 195,
							"character": 33
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrixRow.__constructor",
						"id": 2419
					}
				},
				{
					"id": 2553,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 213,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixRow._index",
						"id": 2418
					}
				},
				{
					"id": 2535,
					"name": "_matrix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 195,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "NumberMatrix",
						"id": 2459
					},
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrixRow._matrix",
						"id": 2417
					}
				},
				{
					"id": 2554,
					"name": "index",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the index of this row in the matrix it belongs to."
					},
					"getSignature": {
						"id": 2555,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the index of this row in the matrix it belongs to."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "ArrayMatrixRow.index",
							"id": 2425
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 230,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixRow.index",
						"id": 2425
					}
				},
				{
					"id": 2540,
					"name": "matrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the matrix to which this row belong."
					},
					"getSignature": {
						"id": 2541,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the matrix to which this row belong."
						},
						"type": {
							"type": "reference",
							"name": "NumberMatrix",
							"id": 2459
						},
						"overwrites": {
							"type": "reference",
							"name": "ArrayMatrixRow.matrix",
							"id": 2423
						}
					},
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 205,
							"character": 12
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrixRow.matrix",
						"id": 2423
					}
				},
				{
					"id": 2542,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2543,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add to this row another row of the same matix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //nm:NumberMatrix.\n  let r1 = nm.row(0);\n  let r2 = nm.row(1);\n  r1.add(r2); // R1 -> R1 + R2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2544,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrixRow",
										"id": 2534
									}
								}
							],
							"parameters": [
								{
									"id": 2545,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R",
										"constraint": {
											"type": "reference",
											"name": "NumberMatrixRow",
											"id": 2534
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 2546,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add to this row a multiple of a row of the same matix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //nm:NumberMatrix.\n  let r1 = nm.row(0);\n  let r2 = nm.row(1);\n  r1.add(r2, 3); // R1 -> R1 + 3R2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2547,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrixRow",
										"id": 2534
									}
								}
							],
							"parameters": [
								{
									"id": 2548,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R",
										"constraint": {
											"type": "reference",
											"name": "NumberMatrixRow",
											"id": 2534
										}
									}
								},
								{
									"id": 2549,
									"name": "coeff",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 217,
							"character": 5
						},
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 226,
							"character": 5
						},
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 227,
							"character": 5
						}
					]
				},
				{
					"id": 2556,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2557,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change this matrix row with another row of same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let r1 = am.row(0);\n  let r2 = am.row(1);\n  r1.change(r2);  // corresponds to R1 -> R2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2558,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixRow",
										"id": 2415,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2559,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixRow",
											"id": 2415,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrixRow.change",
								"id": 2427
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 242,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixRow.change",
						"id": 2427
					},
					"implementationOf": {
						"type": "reference",
						"name": "MatrixRow.change",
						"id": 2055
					}
				},
				{
					"id": 2560,
					"name": "interchange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2561,
							"name": "interchange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Interchange this row with another row of the same matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  let r1 = am.row(0);\n  let r2 = am.row(1);\n  r1.interchange(r2);  // corresponds to R1 <-> R2\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2562,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrixRow",
										"id": 2415,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2563,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R",
										"constraint": {
											"type": "reference",
											"name": "ArrayMatrixRow",
											"id": 2415,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrixRow.interchange",
								"id": 2431
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 261,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixRow.interchange",
						"id": 2431
					},
					"implementationOf": {
						"type": "reference",
						"name": "MatrixRow.interchange",
						"id": 2058
					}
				},
				{
					"id": 2550,
					"name": "multiply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2551,
							"name": "multiply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiply all entries of a row by a non-zero scalar.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //nm:NumberMatrix.\n  let r1 = nm.row(0);\n  r1.multiply(5); // R1 -> 5.R1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2552,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 247,
							"character": 10
						}
					]
				},
				{
					"id": 2564,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2565,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an array corresponding to this row.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //am:ArrayMatrix\n  //  [1 0 0]\n  //  [0 1 0]\n  //  [0 0 1]\n  am.row(1).toArray() // [0,1,0]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrixRow.toArray",
								"id": 2435
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 283,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrixRow.toArray",
						"id": 2435
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2536
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2553,
						2535
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2554,
						2540
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2542,
						2556,
						2560,
						2550,
						2564
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/number-matrix.ts",
					"line": 194,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ArrayMatrixRow",
					"id": 2415,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "MatrixRow",
					"id": 2053,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				}
			]
		},
		{
			"id": 2936,
			"name": "Parameter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A data structure used to store information about a value.\nThe value provided during initialization is used as the default value."
			},
			"children": [
				{
					"id": 2949,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2950,
							"name": "new Parameter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2951,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2952,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Parameter",
								"id": 2936
							}
						},
						{
							"id": 2953,
							"name": "new Parameter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2954,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2955,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2956,
									"name": "convertFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2957,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2958,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2959,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2960,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/maps/parameter-map.ts",
													"line": 59,
													"character": 48
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Parameter",
								"id": 2936
							}
						},
						{
							"id": 2961,
							"name": "new Parameter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2962,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2963,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2964,
									"name": "convertFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2965,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2966,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2967,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2968,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/maps/parameter-map.ts",
													"line": 60,
													"character": 48
												}
											]
										}
									}
								},
								{
									"id": 2969,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Parameter",
								"id": 2936
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 56,
							"character": 82
						},
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 58,
							"character": 37
						},
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 59,
							"character": 80
						},
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 60,
							"character": 90
						}
					]
				},
				{
					"id": 2940,
					"name": "_convert",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 50,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2941,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 2942,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2943,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2944,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "ds/maps/parameter-map.ts",
									"line": 50,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 2945,
					"name": "_data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 51,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2939,
					"name": "_defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 49,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2937,
					"name": "_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 47,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2938,
					"name": "_value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 48,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2974,
					"name": "type",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the type of this parameter."
					},
					"getSignature": {
						"id": 2975,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the type of this parameter."
						},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 86,
							"character": 10
						}
					]
				},
				{
					"id": 2970,
					"name": "value",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the value of this parameter.\nChange the value of this parameter."
					},
					"getSignature": {
						"id": 2971,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Return the value of this parameter."
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"setSignature": {
						"id": 2972,
						"name": "__set",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"shortText": "Change the value of this parameter."
						},
						"parameters": [
							{
								"id": 2973,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					},
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 72,
							"character": 11
						},
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 79,
							"character": 11
						}
					]
				},
				{
					"id": 2985,
					"name": "convert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2986,
							"name": "convert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the value of the parameter as a string."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 114,
							"character": 9
						}
					]
				},
				{
					"id": 2978,
					"name": "getData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2979,
							"name": "getData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the data associated with the specified key."
							},
							"parameters": [
								{
									"id": 2980,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 100,
							"character": 9
						}
					]
				},
				{
					"id": 2981,
					"name": "putData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2982,
							"name": "putData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change or add the data associated with the specified key."
							},
							"parameters": [
								{
									"id": 2983,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2984,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 107,
							"character": 9
						}
					]
				},
				{
					"id": 2976,
					"name": "reset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2977,
							"name": "reset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reset the value back to the default value."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 93,
							"character": 7
						}
					]
				},
				{
					"id": 2946,
					"name": "TO_STRING",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2947,
							"name": "TO_STRING",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2948,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 56,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2949
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2940,
						2945,
						2939,
						2937,
						2938
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2974,
						2970
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2985,
						2978,
						2981,
						2976,
						2946
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/maps/parameter-map.ts",
					"line": 46,
					"character": 22
				}
			]
		},
		{
			"id": 2802,
			"name": "ParameterMap",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A Map that stores parameters."
			},
			"children": [
				{
					"id": 2838,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2839,
							"name": "new ParameterMap",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2840,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "MapEntry",
											"id": 500,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"name": "Parameter",
													"id": 2936
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ParameterMap",
								"id": 2802
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.__constructor",
								"id": 728
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 34
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.__constructor",
						"id": 728
					}
				},
				{
					"id": 2837,
					"name": "_keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractSet",
						"id": 655,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap._keys",
						"id": 727
					}
				},
				{
					"id": 2836,
					"name": "_values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AbstractList",
						"id": 300,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Parameter",
								"id": 2936
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap._values",
						"id": 726
					}
				},
				{
					"id": 2841,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2842,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the mappings from this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map: [{\"1\":1},{\"2\":2},{\"3\":3}]\nmap.clear();\n//now : []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.clear",
								"id": 731
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.clear",
								"id": 509
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 21,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.clear",
						"id": 731
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.clear",
						"id": 508
					}
				},
				{
					"id": 2821,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2822,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this Dictionary instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newDict = dict.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Dictionary.clone",
								"id": 1914
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 51,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Dictionary.clone",
						"id": 1914
					},
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 2843,
					"name": "compute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2844,
							"name": "compute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.compute(k1, (key,value,map)=>(value+11)); //returns 12\n  //now the value changes to 12+11 -> 23\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2845,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2846,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2847,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2848,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2849,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2850,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Parameter",
																		"id": 2936
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 2851,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Parameter",
														"id": 2936
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 32,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.compute",
								"id": 733
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.compute",
						"id": 733
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.compute",
						"id": 510
					}
				},
				{
					"id": 2852,
					"name": "computeIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2853,
							"name": "computeIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to 12\n  map.computeIfAbsent(k1, (key,value,map)=>(23)); //returns 12\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2854,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2855,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2856,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2857,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2858,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2859,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Parameter",
																		"id": 2936
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 2860,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Parameter",
														"id": 2936
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 46,
													"character": 37
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.computeIfAbsent",
								"id": 742
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 46,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.computeIfAbsent",
						"id": 742
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfAbsent",
						"id": 519
					}
				},
				{
					"id": 2861,
					"name": "computeIfPresent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2862,
							"name": "computeIfPresent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //in map key k1 is mapped to null\n  map.computeIfAbsent(k1, (key,value,map)=>(value+11)); //returns null\n  //value does not change\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2863,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2864,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2865,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2866,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2867,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2868,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Parameter",
																"id": 2936
															}
														},
														{
															"id": 2869,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Parameter",
														"id": 2936
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 62,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.computeIfPresent",
								"id": 751
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 62,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.computeIfPresent",
						"id": 751
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.computeIfPresent",
						"id": 528
					}
				},
				{
					"id": 2870,
					"name": "containsKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2871,
							"name": "containsKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains a mapping for the specified key.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsKey(k1); //returns true\n  map.containsKey(k5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2872,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.containsKey",
								"id": 760
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 78,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.containsKey",
						"id": 760
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsKey",
						"id": 537
					}
				},
				{
					"id": 2873,
					"name": "containsValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2874,
							"name": "containsValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map maps one or more keys to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.conainsValue(1); //returns true\n  map.containsValue(5); //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2875,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.containsValue",
								"id": 763
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 89,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.containsValue",
						"id": 763
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.containsValue",
						"id": 540
					}
				},
				{
					"id": 2815,
					"name": "count",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2816,
							"name": "count",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number occurances of an item in the dictionary",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dict contains [{'a':1},{'b':2},{'c':3},{'d':2},{'f':1},{'e':2},{'g':4}]\n  dict.count(2) // returns 3\n  dict.count(7) // return 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2817,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Dictionary.count",
								"id": 1908
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 20,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Dictionary.count",
						"id": 1908
					}
				},
				{
					"id": 2876,
					"name": "entrySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2877,
							"name": "entrySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the mappings contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2}]\n  map.entrySet(); //returns Set [{key:k1, value:1},{key:k2, value:2}]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "reference",
										"name": "MapEntry",
										"id": 500,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Parameter",
												"id": 2936
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.entrySet",
								"id": 766
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.entrySet",
								"id": 544
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 99,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.entrySet",
						"id": 766
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.entrySet",
						"id": 543
					}
				},
				{
					"id": 2878,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2879,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified map with this map for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1 : [{k1:1},{k2:2},{k3:null}]\n  //map2 : [{k1:1},{k3:4}]\n  map1.equals(map2) //returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2880,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Parameter",
												"id": 2936
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.equals",
								"id": 768
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.equals",
								"id": 546
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 115,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.equals",
						"id": 768
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.equals",
						"id": 545
					}
				},
				{
					"id": 2881,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2882,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each entry in this map until all entries have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.forEach((key, value, map)=>{\n     console.log(key+\"->\"+value+\",\");\n  });\n  //Output: one->1,two->2,three->3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2883,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2884,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2885,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2886,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2887,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Parameter",
																"id": 2936
															}
														},
														{
															"id": 2888,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 137,
													"character": 16
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.forEach",
								"id": 771
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 137,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.forEach",
						"id": 771
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.forEach",
						"id": 548
					}
				},
				{
					"id": 2829,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2830,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //json = '{\"a\":1,\"b\":2,\"c\":3}'\n  dict = new Dictionary<number>().fromString(json,(x)=>(parseFloat(x)));\n  //dict contains [{'a':1},{'b':2},{'c':3}]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2831,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2832,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2833,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2834,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2835,
															"name": "itemJSON",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Parameter",
														"id": 2936
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/maps/dictionary.ts",
													"line": 79,
													"character": 42
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Dictionary.fromString",
								"id": 1922
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 79,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Dictionary.fromString",
						"id": 1922
					},
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.fromString",
						"id": 1234
					}
				},
				{
					"id": 2889,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2890,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped. undefined if there is no mapping.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.get(k1); //returns 1\n  map.get(k3); //returns null\n  map.get(k4); //returns undefined\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2891,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.get",
								"id": 779
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 152,
							"character": 4
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.get",
						"id": 779
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.get",
						"id": 556
					}
				},
				{
					"id": 2818,
					"name": "getKeys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2819,
							"name": "getKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a set of keys associated with a given item",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dict contains [{'a':1},{'b':2},{'c':3},{'d':2},{'f':1},{'e':2},{'g':4}]\n  dict.getKeys(2) //return a set containing ['b','d','e']\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2820,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Dictionary.getKeys",
								"id": 1911
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 36,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Dictionary.getKeys",
						"id": 1911
					}
				},
				{
					"id": 2892,
					"name": "getOrDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2893,
							"name": "getOrDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key or if key is mapped to null.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.getOrDefault(k1,5); //returns 1\n  map.getOrDefault(k3,12); //returns 12\n  map.getOrDefault(k4,16); //returns 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2894,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2895,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Parameter",
								"id": 2936
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.getOrDefault",
								"id": 782
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 166,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.getOrDefault",
						"id": 782
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.getOrDefault",
						"id": 559
					}
				},
				{
					"id": 2812,
					"name": "getString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2813,
							"name": "getString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the string value of the parameter associated with this key."
							},
							"parameters": [
								{
									"id": 2814,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 35,
							"character": 11
						}
					]
				},
				{
					"id": 2805,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2806,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the value of the parameter associated with this key."
							},
							"parameters": [
								{
									"id": 2807,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 19,
							"character": 10
						}
					]
				},
				{
					"id": 2896,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2897,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains no key-value mappings.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isEmpty(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isEmpty(); //false\n  //map : []\n  map.isEmpty(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.isEmpty",
								"id": 786
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.isEmpty",
								"id": 564
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 180,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.isEmpty",
						"id": 786
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.isEmpty",
						"id": 563
					}
				},
				{
					"id": 2898,
					"name": "isNull",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2899,
							"name": "isNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains mappings to only null values or if  the map is empty.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:2},{k3:null}]\n  map.isNull(); //false\n  //map : [{k1:null},{k2:null},{k3:null}]\n  map.isNull(); //true\n  //map : []\n  map.isNull(); //true\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.isNull",
								"id": 788
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 194,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.isNull",
						"id": 788
					}
				},
				{
					"id": 2900,
					"name": "keySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2901,
							"name": "keySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the keys contained in this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.keySet(); //[\"one\",\"two\",\"three\"]\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 655,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.keySet",
								"id": 790
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.keySet",
								"id": 566
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 204,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.keySet",
						"id": 790
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.keySet",
						"id": 565
					}
				},
				{
					"id": 2902,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2903,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Associates the specified value with the specified key in this map.Returns the old value associated with the key or  undefined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//map : [{\"one\":1},{\"two\":2},{\"three\":3}]\nmap.put(\"one\",22); //return 1\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3}]\nmap.put(\"four\",4);//return undefined\n//now map : [{\"one\":22},{\"two\":2},{\"three\":3},{\"four\":4}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2904,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2905,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.put",
								"id": 792
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 217,
							"character": 4
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.put",
						"id": 792
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.put",
						"id": 567
					}
				},
				{
					"id": 2906,
					"name": "putAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2907,
							"name": "putAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copies all of the mappings from the specified map to this map.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map1: [{k1:v1},{k2:v2},{k3:v3}], map2: [{k2:v4},{k4:v6},{k6:v8}]\n  map1.putAll(map2);\n  //now map1: [{k1:v1},{k2:v4},{k3:v3},{k4:v6},{k6:v8}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2908,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Parameter",
												"id": 2936
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.putAll",
								"id": 796
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.putAll",
								"id": 572
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 237,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.putAll",
						"id": 796
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.putAll",
						"id": 571
					}
				},
				{
					"id": 2909,
					"name": "putIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2910,
							"name": "putIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns undefined, else returns the current value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.putIfAbsent(\"four\",4); //return undefined (adds {\"four\":4} to the map)\n  map.putIfAbsent(\"one\",23); //return 1 (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2911,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2912,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.putIfAbsent",
								"id": 799
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 249,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.putIfAbsent",
						"id": 799
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.putIfAbsent",
						"id": 574
					}
				},
				{
					"id": 2913,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2914,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the mapping for a key from this map if it is present.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.remove(\"one\"); //return 1\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.remove(\"four\"); //return undefined (map unchanged)\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2915,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.remove",
								"id": 803
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 263,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.remove",
						"id": 803
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.remove",
						"id": 578
					}
				},
				{
					"id": 2916,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2917,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the entry for the specified key only if it is currently mapped to the specified value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{\"one\":1},{\"two\":2},{\"three\":3}]\n  map.removeIf(\"one\", 1); //return true\n  //now map : [{\"two\":2},{\"three\":3}]\n  map.removeIf(\"two\",5); //return false (map unchanged)\n  map.removeIf(\"four\",4); //return false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2918,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2919,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.removeIf",
								"id": 806
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 281,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.removeIf",
						"id": 806
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.removeIf",
						"id": 581
					}
				},
				{
					"id": 2920,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2921,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace all entries with specified value with the new value. Returns true if map was changed.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replace(5,2) //returns true;\n  //now map : [{k1:1},{k2:2},{k3:3},{k4:2},{k5:1}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2922,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								},
								{
									"id": 2923,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.replace",
								"id": 810
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 293,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.replace",
						"id": 810
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.replace",
						"id": 585
					}
				},
				{
					"id": 2924,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2925,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.replaceAll((k,v,m)=>(v*2)); //replace with its double\n  //map : [{k1:2},{k2:10},{k3:6},{k4:10},{k5:2}]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2926,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2927,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2928,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2929,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2930,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Parameter",
																"id": 2936
															}
														},
														{
															"id": 2931,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Parameter",
														"id": 2936
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-map.ts",
													"line": 310,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.replaceAll",
								"id": 814
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 310,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.replaceAll",
						"id": 814
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.replaceAll",
						"id": 589
					}
				},
				{
					"id": 2803,
					"name": "resetAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2804,
							"name": "resetAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reset all parameters in this map to its default value."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 12,
							"character": 10
						}
					]
				},
				{
					"id": 2808,
					"name": "setValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2809,
							"name": "setValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change the value of the parameter associated with this key."
							},
							"parameters": [
								{
									"id": 2810,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2811,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/parameter-map.ts",
							"line": 27,
							"character": 10
						}
					]
				},
				{
					"id": 2932,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2933,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of key-value mappings in this map.(key->null mappings are counted)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\n  map.size(); //return 5\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.size",
								"id": 822
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.size",
								"id": 598
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 322,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.size",
						"id": 822
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.size",
						"id": 597
					}
				},
				{
					"id": 2823,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2824,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the dictionary into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //dictionary contains [{'a':1},{'b':2},{'c':3}]\n  console.log(arrayList.toString((x)=>(x.toString())));\n  //Output\n  //'{\"a\":1,\"b\":2,\"c\":3}'\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2825,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2826,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2827,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2828,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Parameter",
																		"id": 2936
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/maps/dictionary.ts",
													"line": 63,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Dictionary.toString",
								"id": 1916
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/maps/dictionary.ts",
							"line": 63,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Dictionary.toString",
						"id": 1916
					},
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 1228
					}
				},
				{
					"id": 2934,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2935,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a List view of the values contained in this map.\n//map : [{k1:1},{k2:5},{k3:3},{k4:5},{k5:1}]\nmap.values(); //return list : [1,5,3,5,1]"
							},
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 300,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Parameter",
										"id": 2936
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMap.values",
								"id": 824
							},
							"implementationOf": {
								"type": "reference",
								"name": "Map.values",
								"id": 600
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-map.ts",
							"line": 331,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractMap.values",
						"id": 824
					},
					"implementationOf": {
						"type": "reference",
						"name": "Map.values",
						"id": 599
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2838
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2837,
						2836
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2841,
						2821,
						2843,
						2852,
						2861,
						2870,
						2873,
						2815,
						2876,
						2878,
						2881,
						2829,
						2889,
						2818,
						2892,
						2812,
						2805,
						2896,
						2898,
						2900,
						2902,
						2906,
						2909,
						2913,
						2916,
						2920,
						2924,
						2803,
						2808,
						2932,
						2823,
						2934
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/maps/parameter-map.ts",
					"line": 7,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Dictionary",
					"id": 1906,
					"typeArguments": [
						{
							"type": "reference",
							"name": "Parameter",
							"id": 2936
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Map",
					"id": 505,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "reference",
							"name": "Parameter",
							"id": 2936
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "Dictionary",
							"id": 1906,
							"typeArguments": [
								{
									"type": "reference",
									"name": "Parameter",
									"id": 2936
								}
							]
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 1227
				}
			]
		},
		{
			"id": 2069,
			"name": "PriorityQueue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An unbounded priority queue. The elements of the priority queue are ordered according to the compare function provided at queue construction time."
			},
			"typeParameter": [
				{
					"id": 2070,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2076,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2077,
							"name": "new PriorityQueue",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2078,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2079,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2080,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2081,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 2082,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/queues/priority-queue.ts",
													"line": 10,
													"character": 26
												}
											]
										}
									}
								},
								{
									"id": 2083,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PriorityQueue",
								"id": 2069
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 247
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 8,
							"character": 44
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 247
					}
				},
				{
					"id": 2071,
					"name": "_comparator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 8,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2072,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 2073,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2074,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										},
										{
											"id": 2075,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "ds/queues/priority-queue.ts",
									"line": 8,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 2113,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 2084,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2085,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified item into this priority queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue containes [1,8,12] (compareFn designed for ascending order)\n  queue.add(6); //[1,6,8,12]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2086,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.add",
								"id": 874
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 22,
							"character": 7
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 250
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.add",
						"id": 873
					}
				},
				{
					"id": 2087,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2088,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all items of an array into this priority queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue containes [1,8,12] (compareFn designed for ascending order)\n  queue.addAll([6,10,15]); //[1,6,8,10,12,15]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2089,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.addAll",
								"id": 881
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 32,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 253
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.addAll",
						"id": 880
					}
				},
				{
					"id": 2114,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2115,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.clear",
								"id": 884
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.clear",
						"id": 883
					}
				},
				{
					"id": 2090,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2091,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  queue.comparator(); //returns a function\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2092,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2093,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2094,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 2095,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "ds/queues/priority-queue.ts",
											"line": 41,
											"character": 17
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 41,
							"character": 14
						}
					]
				},
				{
					"id": 2116,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2117,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2118,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.contains",
								"id": 886
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.contains",
						"id": 885
					}
				},
				{
					"id": 2119,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2120,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2121,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.containsAll",
								"id": 889
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.containsAll",
						"id": 888
					}
				},
				{
					"id": 2109,
					"name": "element",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2110,
							"name": "element",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves, but does not remove, the head of this queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractQueue.element",
								"id": 929
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.element",
								"id": 877
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 15,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractQueue.element",
						"id": 929
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.element",
						"id": 876
					}
				},
				{
					"id": 2122,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2123,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2124,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.equals",
								"id": 892
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.equals",
						"id": 891
					}
				},
				{
					"id": 2148,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2149,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2150,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2151,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2152,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2153,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 2154,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2155,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.forEach",
						"id": 917
					}
				},
				{
					"id": 2102,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2103,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //json = \"[1,2,3,4]\"\n  queue = new PriorityQueue<number>((x,y)=>(x-y)).fromString(json,(x)=>(parseFloat(x)));\n  //queue contains [1,2,3,4]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2104,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2105,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2106,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2107,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2108,
															"name": "itemJSON",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/queues/priority-queue.ts",
													"line": 67,
													"character": 43
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 67,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.fromString",
						"id": 1234
					}
				},
				{
					"id": 2125,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2126,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.isEmpty",
								"id": 895
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.isEmpty",
						"id": 894
					}
				},
				{
					"id": 2156,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2157,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.iterator",
								"id": 926
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.iterator",
						"id": 925
					}
				},
				{
					"id": 2111,
					"name": "poll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2112,
							"name": "poll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves and removes the head of this queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1 and queue now has elements [2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractQueue.poll",
								"id": 931
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.poll",
								"id": 879
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 26,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractQueue.poll",
						"id": 931
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.poll",
						"id": 878
					}
				},
				{
					"id": 2127,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2128,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2129,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.remove",
								"id": 897
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.remove",
						"id": 896
					}
				},
				{
					"id": 2130,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2131,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2132,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.removeAll",
								"id": 900
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeAll",
						"id": 899
					}
				},
				{
					"id": 2133,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2134,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2135,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2136,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2137,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2138,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 2139,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2140,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeIf",
						"id": 902
					}
				},
				{
					"id": 2141,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2142,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2143,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.retainAll",
								"id": 911
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.retainAll",
						"id": 910
					}
				},
				{
					"id": 2144,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2145,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.size",
								"id": 914
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.size",
						"id": 913
					}
				},
				{
					"id": 2146,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2147,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.toArray",
								"id": 916
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.toArray",
						"id": 915
					}
				},
				{
					"id": 2096,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2097,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the queue into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.toString((x)=>(x.toString())));\n  //Output\n  //[1,2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2098,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2099,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2100,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2101,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/queues/priority-queue.ts",
													"line": 53,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 53,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 1228
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2076
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2071,
						2113
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2084,
						2087,
						2114,
						2090,
						2116,
						2119,
						2109,
						2122,
						2148,
						2102,
						2125,
						2156,
						2111,
						2127,
						2130,
						2133,
						2141,
						2144,
						2146,
						2096
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/queues/priority-queue.ts",
					"line": 7,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 927,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Queue",
					"id": 871,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 1227
				}
			]
		},
		{
			"id": 2703,
			"name": "Rope",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A rope is a binary tree where each leaf node contains a short string.\nUsed to efficiently store and manipulate a very long string"
			},
			"children": [
				{
					"id": 2705,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2706,
							"name": "new Rope",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.__constructor",
								"id": 415
							}
						},
						{
							"id": 2707,
							"name": "new Rope",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2708,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.__constructor",
								"id": 415
							}
						},
						{
							"id": 2709,
							"name": "new Rope",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2710,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2711,
									"name": "spacing",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.__constructor",
								"id": 415
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 8,
							"character": 27
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 10,
							"character": 15
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 11,
							"character": 25
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 12,
							"character": 41
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree.__constructor",
						"id": 415
					}
				},
				{
					"id": 2704,
					"name": "_root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 8,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "RopeNode",
						"id": 2785
					},
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree._root",
						"id": 414
					}
				},
				{
					"id": 2715,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the total length of the string stored in this rope."
					},
					"getSignature": {
						"id": 2716,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Returns the total length of the string stored in this rope."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 39,
							"character": 12
						}
					]
				},
				{
					"id": 2762,
					"name": "balance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2763,
							"name": "balance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Balance the rope."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 207,
							"character": 9
						}
					]
				},
				{
					"id": 2764,
					"name": "balanceNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2765,
							"name": "balanceNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2766,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 211,
							"character": 23
						}
					]
				},
				{
					"id": 2735,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2736,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Concatenate the specified rope with this rope."
							},
							"parameters": [
								{
									"id": 2737,
									"name": "rope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Rope",
										"id": 2703
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 107,
							"character": 8
						}
					]
				},
				{
					"id": 2726,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2727,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "This method call does not work on Rope.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2728,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.delete",
								"id": 421
							}
						},
						{
							"id": 2729,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete the substring starting at index i with a length j. Returns the deleted part as Rope."
							},
							"parameters": [
								{
									"id": 2730,
									"name": "i",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2731,
									"name": "j",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.delete",
								"id": 421
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 78,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 82,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 83,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree.delete",
						"id": 421
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.delete",
						"id": 233
					}
				},
				{
					"id": 2738,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2739,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the character at position specified by index."
							},
							"parameters": [
								{
									"id": 2740,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 2741,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the character at position specified by index, beginning from the specified node."
							},
							"parameters": [
								{
									"id": 2742,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2743,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 122,
							"character": 5
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 126,
							"character": 5
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 127,
							"character": 5
						}
					]
				},
				{
					"id": 2750,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2751,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the root node of this rope."
							},
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 169,
							"character": 9
						}
					]
				},
				{
					"id": 2773,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2774,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the height of this binary tree.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  bt.height();// returns a number.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2775,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.height",
								"id": 424
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 47,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.height",
						"id": 424
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.height",
						"id": 236
					}
				},
				{
					"id": 2776,
					"name": "inorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2777,
							"name": "inorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after inorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.inorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2778,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.inorder",
								"id": 427
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 58,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.inorder",
						"id": 427
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.inorder",
						"id": 238
					}
				},
				{
					"id": 2717,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2718,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert string at the end of this rope."
							},
							"parameters": [
								{
									"id": 2719,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.insert",
								"id": 418
							}
						},
						{
							"id": 2720,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert string at the specified position of this rope."
							},
							"parameters": [
								{
									"id": 2721,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2722,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.insert",
								"id": 418
							}
						},
						{
							"id": 2723,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a rope at the specified position of this rope."
							},
							"parameters": [
								{
									"id": 2724,
									"name": "rope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Rope",
										"id": 2703
									}
								},
								{
									"id": 2725,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractBinaryTree.insert",
								"id": 418
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 49,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 53,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 57,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 58,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractBinaryTree.insert",
						"id": 418
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.insert",
						"id": 230
					}
				},
				{
					"id": 2732,
					"name": "insertNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2733,
							"name": "insertNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert the specified node at the end of this rope."
							},
							"parameters": [
								{
									"id": 2734,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 94,
							"character": 12
						}
					]
				},
				{
					"id": 2782,
					"name": "postorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2783,
							"name": "postorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after postorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.postorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2784,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.postorder",
								"id": 433
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 88,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.postorder",
						"id": 433
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.postorder",
						"id": 242
					}
				},
				{
					"id": 2779,
					"name": "preorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2780,
							"name": "preorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after preorder traversal of the tree starting from the specified node (default root).",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //bt:BinaryTree<number>\n  bt.preorder();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2781,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BinaryTreeNode",
										"id": 400,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": " this._root!"
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractBinaryTree.preorder",
								"id": 430
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-binary-tree.ts",
							"line": 73,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractBinaryTree.preorder",
						"id": 430
					},
					"implementationOf": {
						"type": "reference",
						"name": "BinaryTree.preorder",
						"id": 240
					}
				},
				{
					"id": 2752,
					"name": "report",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2753,
							"name": "report",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the substring starting at index i with a length j."
							},
							"parameters": [
								{
									"id": 2754,
									"name": "i",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2755,
									"name": "j",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2756,
							"name": "report",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the substring starting at index i with a length j. Beginning at the specified node."
							},
							"parameters": [
								{
									"id": 2757,
									"name": "i",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2758,
									"name": "j",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2759,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 176,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 180,
							"character": 8
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 181,
							"character": 8
						}
					]
				},
				{
					"id": 2770,
					"name": "rotateLeft",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2771,
							"name": "rotateLeft",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2772,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 234,
							"character": 22
						}
					]
				},
				{
					"id": 2767,
					"name": "rotateRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2768,
							"name": "rotateRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2769,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 227,
							"character": 23
						}
					]
				},
				{
					"id": 2744,
					"name": "split",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2745,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Split this rope at the given position. Returns the right child after splitting."
							},
							"parameters": [
								{
									"id": 2746,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							}
						},
						{
							"id": 2747,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2748,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2749,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 143,
							"character": 7
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 144,
							"character": 7
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 145,
							"character": 7
						}
					]
				},
				{
					"id": 2760,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2761,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Convert the rope into a string."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 200,
							"character": 10
						}
					]
				},
				{
					"id": 2712,
					"name": "fromNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2713,
							"name": "fromNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Rope from the RopeNode."
							},
							"parameters": [
								{
									"id": 2714,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rope",
								"id": 2703
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 30,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2705
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2704
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2715
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2762,
						2764,
						2735,
						2726,
						2738,
						2750,
						2773,
						2776,
						2717,
						2732,
						2782,
						2779,
						2752,
						2770,
						2767,
						2744,
						2760,
						2712
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/trees/rope.ts",
					"line": 7,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractBinaryTree",
					"id": 412,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "BinaryTree",
					"id": 228,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					]
				}
			]
		},
		{
			"id": 2785,
			"name": "RopeNode",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents a node of Rope data structure."
			},
			"children": [
				{
					"id": 2789,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2790,
							"name": "new RopeNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							},
							"overwrites": {
								"type": "reference",
								"name": "BinaryTreeNode.__constructor",
								"id": 405
							}
						},
						{
							"id": 2791,
							"name": "new RopeNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2792,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							},
							"overwrites": {
								"type": "reference",
								"name": "BinaryTreeNode.__constructor",
								"id": 405
							}
						},
						{
							"id": 2793,
							"name": "new RopeNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2794,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							},
							"overwrites": {
								"type": "reference",
								"name": "BinaryTreeNode.__constructor",
								"id": 405
							}
						},
						{
							"id": 2795,
							"name": "new RopeNode",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2796,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								},
								{
									"id": 2797,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RopeNode",
										"id": 2785
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							},
							"overwrites": {
								"type": "reference",
								"name": "BinaryTreeNode.__constructor",
								"id": 405
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 248,
							"character": 23
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 250,
							"character": 15
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 251,
							"character": 27
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 252,
							"character": 28
						},
						{
							"fileName": "ds/trees/rope.ts",
							"line": 253,
							"character": 44
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BinaryTreeNode.__constructor",
						"id": 405
					}
				},
				{
					"id": 2786,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 246,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BinaryTreeNode.label",
						"id": 402
					}
				},
				{
					"id": 2787,
					"name": "left",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 247,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BinaryTreeNode.left",
						"id": 403
					}
				},
				{
					"id": 2788,
					"name": "right",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 248,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "RopeNode",
								"id": 2785
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BinaryTreeNode.right",
						"id": 404
					}
				},
				{
					"id": 2800,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the length of the string in this node."
					},
					"getSignature": {
						"id": 2801,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Returns the length of the string in this node."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 281,
							"character": 12
						}
					]
				},
				{
					"id": 2798,
					"name": "weight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the weight associated with this node."
					},
					"getSignature": {
						"id": 2799,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Returns the weight associated with this node."
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "ds/trees/rope.ts",
							"line": 271,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2789
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2786,
						2787,
						2788
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						2800,
						2798
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/trees/rope.ts",
					"line": 245,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "BinaryTreeNode",
					"id": 400,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					]
				}
			]
		},
		{
			"id": 2598,
			"name": "SquareMatrix",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A NumberMatrix with equal number of rows and columns."
			},
			"children": [
				{
					"id": 2599,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2600,
							"name": "new SquareMatrix",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2601,
									"name": "order",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SquareMatrix",
								"id": 2598
							},
							"overwrites": {
								"type": "reference",
								"name": "NumberMatrix.__constructor",
								"id": 2460
							}
						},
						{
							"id": 2602,
							"name": "new SquareMatrix",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2603,
									"name": "order",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2604,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SquareMatrix",
								"id": 2598
							},
							"overwrites": {
								"type": "reference",
								"name": "NumberMatrix.__constructor",
								"id": 2460
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 6,
							"character": 48
						},
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 8,
							"character": 27
						},
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 9,
							"character": 48
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "NumberMatrix.__constructor",
						"id": 2460
					}
				},
				{
					"id": 2676,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix._store",
						"id": 2374
					}
				},
				{
					"id": 2661,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2662,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add to each element in this matrix the corresponding elements in the specified matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2]\n  //  [2 3]\n  //  m2:\n  //  [3 2]\n  //  [4 3]\n  m1.add(m2);\n  //  [4 4]\n  //  [6 6]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2663,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.add",
								"id": 2492
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 115,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.add",
						"id": 2492
					}
				},
				{
					"id": 2631,
					"name": "adjoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2632,
							"name": "adjoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the adjoint of this matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 137,
							"character": 9
						}
					]
				},
				{
					"id": 2701,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2702,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a copy of the current object and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.clone",
								"id": 2413
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 196,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.clone",
						"id": 2413
					},
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 2621,
					"name": "cofactor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2622,
							"name": "cofactor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the cofactor of the element specified by the indices."
							},
							"parameters": [
								{
									"id": 2623,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2624,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 83,
							"character": 10
						}
					]
				},
				{
					"id": 2629,
					"name": "cofactorMatrix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2630,
							"name": "cofactorMatrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the matrix of cofactors of this matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 124,
							"character": 16
						}
					]
				},
				{
					"id": 2673,
					"name": "col",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2674,
							"name": "col",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the column correponding to the specified index.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.col(1);  //  [2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2675,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrixColumn",
								"id": 2566
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrix.col",
								"id": 2405
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.col",
								"id": 2504
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 179,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrix.col",
						"id": 2405
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.col",
						"id": 2504
					}
				},
				{
					"id": 2625,
					"name": "determinant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2626,
							"name": "determinant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the determinant of the square matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 90,
							"character": 13
						}
					]
				},
				{
					"id": 2696,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2697,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check whether the specified matrix is equal to this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2]\n  //  [2 3]\n  //  m2:\n  //  [1 2]\n  //  [2 3]\n  m1.equals(m2); //returns true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2698,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ArrayMatrix",
										"id": 2372,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.equals",
								"id": 2408
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 156,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.equals",
						"id": 2408
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.equals",
						"id": 2050
					}
				},
				{
					"id": 2677,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2678,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read the item at the specified position in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [2 3 4]\n  //  [3 4 5]\n  matrix.get(1,1); //3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2679,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2680,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.get",
								"id": 2383
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.get",
								"id": 2032
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 27,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.get",
						"id": 2383
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.get",
						"id": 2031
					}
				},
				{
					"id": 2688,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2689,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of rows in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.height(); //return 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.height",
								"id": 2394
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.height",
								"id": 2043
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 72,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.height",
						"id": 2394
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.height",
						"id": 2042
					}
				},
				{
					"id": 2633,
					"name": "inverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2634,
							"name": "inverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the inverse of this matrix if any. If not it returns null."
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 144,
							"character": 9
						}
					]
				},
				{
					"id": 2615,
					"name": "isSkewSymmetric",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2616,
							"name": "isSkewSymmetric",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check whether this matrix is skew-symmetric or not."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 68,
							"character": 17
						}
					]
				},
				{
					"id": 2613,
					"name": "isSymmetric",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2614,
							"name": "isSymmetric",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check whether this matrix is symmetric or not."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 60,
							"character": 13
						}
					]
				},
				{
					"id": 2617,
					"name": "minor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2618,
							"name": "minor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the minor of the element specified by the indices."
							},
							"parameters": [
								{
									"id": 2619,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2620,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 76,
							"character": 7
						}
					]
				},
				{
					"id": 2627,
					"name": "minorMatrix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2628,
							"name": "minorMatrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the matrix of minors of this matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 111,
							"character": 13
						}
					]
				},
				{
					"id": 2611,
					"name": "order",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2612,
							"name": "order",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the order of the matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 53,
							"character": 7
						}
					]
				},
				{
					"id": 2681,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2682,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert an item at the specified position in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [2 3 4]\n  //  [3 4 5]\n  matrix.put(0,1,5);\n  //  [1 2 3]\n  //  [5 3 4]\n  //  [3 4 5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2683,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2684,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2685,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.put",
								"id": 2387
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 42,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.put",
						"id": 2387
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.put",
						"id": 2035
					}
				},
				{
					"id": 2670,
					"name": "row",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2671,
							"name": "row",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the row correponding to the specified index.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.row(0);  //  [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2672,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrixRow",
								"id": 2534
							},
							"overwrites": {
								"type": "reference",
								"name": "ArrayMatrix.row",
								"id": 2402
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.row",
								"id": 2501
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 165,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "ArrayMatrix.row",
						"id": 2402
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.row",
						"id": 2501
					}
				},
				{
					"id": 2667,
					"name": "scalarMultiply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2668,
							"name": "scalarMultiply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiply each element in this matrix with the specified scalar.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.multiply(2);\n  //  [2 4]\n  //  [4 6]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2669,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.scalarMultiply",
								"id": 2498
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 153,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.scalarMultiply",
						"id": 2498
					}
				},
				{
					"id": 2692,
					"name": "subMatrix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2693,
							"name": "subMatrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the submatrix obtained after removing the specified rows and columns from this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.subMatrix([0],[1])\n  //  [4 6]\n  //  [7 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2694,
									"name": "rows",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2695,
									"name": "cols",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.subMatrix",
								"id": 2398
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.subMatrix",
								"id": 2047
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 95,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.subMatrix",
						"id": 2398
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.subMatrix",
						"id": 2046
					}
				},
				{
					"id": 2664,
					"name": "subtract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2665,
							"name": "subtract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Subtract from each element in this matrix, the corresponding elements in the specified matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  m1.subtract(m2);\n  //  [-2 0]\n  //  [-2 0]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2666,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.subtract",
								"id": 2495
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 134,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.subtract",
						"id": 2495
					}
				},
				{
					"id": 2699,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2700,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a 2 dimensional array corresponding to the matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.toArray(); //[[1,2,3],[4,5,6],[7,8,9]]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.toArray",
								"id": 2411
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 181,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.toArray",
						"id": 2411
					}
				},
				{
					"id": 2635,
					"name": "trace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2636,
							"name": "trace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the trace of this square matrix. (Trace is the sum of diagonal values of a square matrix.)"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 155,
							"character": 7
						}
					]
				},
				{
					"id": 2686,
					"name": "transpose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2687,
							"name": "transpose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the transpose of this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  [1 2 3]\n  //  [4 5 6]\n  //  [7 8 9]\n  matrix.transpose();\n  //  [1 4 7]\n  //  [2 5 8]\n  //  [3 6 9]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.transpose",
								"id": 2392
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.transpose",
								"id": 2041
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 57,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.transpose",
						"id": 2392
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.transpose",
						"id": 2040
					}
				},
				{
					"id": 2690,
					"name": "width",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2691,
							"name": "width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of columns in this matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  matrix.width(); //return 3\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ArrayMatrix.width",
								"id": 2396
							},
							"implementationOf": {
								"type": "reference",
								"name": "Matrix.width",
								"id": 2045
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/array-matrix.ts",
							"line": 81,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ArrayMatrix.width",
						"id": 2396
					},
					"implementationOf": {
						"type": "reference",
						"name": "Matrix.width",
						"id": 2044
					}
				},
				{
					"id": 2641,
					"name": "allOnes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2642,
							"name": "allOnes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an all-ones matrix of given order.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let allOneMatrix = NumberMatrix.allOnes(2,3)\n  //   [1 1 1]\n  //   [1 1 1]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2643,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2644,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.allOnes",
								"id": 2472
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 32,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.allOnes",
						"id": 2472
					}
				},
				{
					"id": 2608,
					"name": "cast",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2609,
							"name": "cast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a square matrix from the number matrix of same height and width."
							},
							"parameters": [
								{
									"id": 2610,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SquareMatrix",
								"id": 2598
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 34,
							"character": 13
						}
					]
				},
				{
					"id": 2658,
					"name": "fromArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2659,
							"name": "fromArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a matrix from the specified two dimensional array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  NumberMatrix.fromArray([[1,2],[3,4]]);\n  //  [1 2]\n  //  [3 4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2660,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.fromArray",
								"id": 2489
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 91,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.fromArray",
						"id": 2489
					}
				},
				{
					"id": 2645,
					"name": "generate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2646,
							"name": "generate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a matrix based on the given order and generateFn function on the indices.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let m = NumberMatrix.generate(3,3,(i,j)=>(i+j));\n  //  [0 1 2]\n  //  [1 2 3]\n  //  [2 3 4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2647,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2648,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2649,
									"name": "generateFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2650,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2651,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2652,
															"name": "rowIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2653,
															"name": "columnIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/matrices/number-matrix.ts",
													"line": 44,
													"character": 60
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.generate",
								"id": 2476
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 44,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.generate",
						"id": 2476
					}
				},
				{
					"id": 2605,
					"name": "identity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2606,
							"name": "identity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns identity matrix of the given order.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let m1 = SquareMatrix.identity(3);\n  //  m1:\n  //  [1 0 0]\n  //  [0 1 0]\n  //  [0 0 1]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2607,
									"name": "order",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SquareMatrix",
								"id": 2598
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/square-matrix.ts",
							"line": 23,
							"character": 17
						}
					]
				},
				{
					"id": 2654,
					"name": "multiply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2655,
							"name": "multiply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiply two matrices and return the resultant matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //  m1:\n  //  [1 2 3]\n  //  [2 3 4]\n  //  m2:\n  //  [1 1]\n  //  [2 2]\n  //  [3 3]\n  NumberMatrix.multiply(m1,m2)\n  //  [14 14]\n  //  [20 20]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2656,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								},
								{
									"id": 2657,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumberMatrix",
										"id": 2459
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.multiply",
								"id": 2485
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 66,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.multiply",
						"id": 2485
					}
				},
				{
					"id": 2637,
					"name": "zero",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 2638,
							"name": "zero",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a zero matrix of given order.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let zeroMatrix = NumberMatrix.zero(2,3)\n  //   [0 0 0]\n  //   [0 0 0]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2639,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2640,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NumberMatrix",
								"id": 2459
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberMatrix.zero",
								"id": 2468
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/matrices/number-matrix.ts",
							"line": 21,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "NumberMatrix.zero",
						"id": 2468
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2599
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2676
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2661,
						2631,
						2701,
						2621,
						2629,
						2673,
						2625,
						2696,
						2677,
						2688,
						2633,
						2615,
						2613,
						2617,
						2627,
						2611,
						2681,
						2670,
						2667,
						2692,
						2664,
						2699,
						2635,
						2686,
						2690,
						2641,
						2608,
						2658,
						2645,
						2605,
						2654,
						2637
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/matrices/square-matrix.ts",
					"line": 6,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "NumberMatrix",
					"id": 2459
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Matrix",
					"id": 2029,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayMatrix",
							"id": 2372,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					]
				}
			]
		},
		{
			"id": 1560,
			"name": "Stack",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Create a Stack (LIFO) datastructure."
			},
			"typeParameter": [
				{
					"id": 1561,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1563,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1564,
							"name": "new Stack",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1565,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack",
								"id": 1560
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 4,
							"character": 21
						}
					]
				},
				{
					"id": 1562,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 4,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "T"
						}
					}
				},
				{
					"id": 1566,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Number of elements in stack",
						"tags": [
							{
								"tag": "example",
								"text": "\n  //stack contains [1,2,3,4]\n  console.log(stack.height);\n  //Output: 4\n"
							}
						]
					},
					"getSignature": {
						"id": 1567,
						"name": "__get",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"shortText": "Number of elements in stack",
							"tags": [
								{
									"tag": "example",
									"text": "\n  //stack contains [1,2,3,4]\n  console.log(stack.height);\n  //Output: 4\n"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 17,
							"character": 12
						}
					]
				},
				{
					"id": 1578,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1579,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if stack is empty.\n* @example\n  //stack contains [1]\n  console.log(stack.isEmpty());\n  //Output: false\n  stack.pop();\n  console.log(stack.isEmpty());\n  //Output: true"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 78,
							"character": 9
						}
					]
				},
				{
					"id": 1573,
					"name": "peek",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1574,
							"name": "peek",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return top of the stack (does not pop)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,5,6]\n  console.log(stack.peek());\n  //Output: 6 (stack does not change)\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 53,
							"character": 6
						}
					]
				},
				{
					"id": 1571,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1572,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pop top of the stack and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,5,6,7]\n  console.log(stack.pop());\n  //Output: 7\n  //now stack contains [1,2,3,4,5,6]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 42,
							"character": 5
						}
					]
				},
				{
					"id": 1568,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1569,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Push item/items to the top of the stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4]\n  stack.push(5);\n  //now stack contains [1,2,3,4,5]\n  stack.push(6,7);\n  //now stack contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1570,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 30,
							"character": 6
						}
					]
				},
				{
					"id": 1575,
					"name": "search",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1576,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return first index (from top of the stack) of an item in stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,3,5]\n  console.log(stack.search(3));\n  //Output: 4\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1577,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 64,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1563
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1562
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1566
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1578,
						1573,
						1571,
						1568,
						1575
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/stack.ts",
					"line": 3,
					"character": 18
				}
			]
		},
		{
			"id": 1778,
			"name": "SwappableList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1779,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1808,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1809,
							"name": "new SwappableList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1810,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwappableList",
								"id": 1778
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 247
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 302
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 8,
							"character": 78
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 247
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.__constructor",
						"id": 302
					}
				},
				{
					"id": 1861,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "E"
						}
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 246
					}
				},
				{
					"id": 1811,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1812,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 1813,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.add",
								"id": 305
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 139
							}
						},
						{
							"id": 1814,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.add(4); //[1,2,3,4]\n  list.add(2.5,2); //[1,2,2.5,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1815,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 1816,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 250
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.add",
								"id": 305
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 141
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 17,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 25,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 26,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 250
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.add",
						"id": 305
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 138
					}
				},
				{
					"id": 1817,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1818,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 1819,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.addAll",
								"id": 311
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 145
							}
						},
						{
							"id": 1820,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.addAll([4,5]); //[1,2,3,4,5]\n  list.addAll([2.1,2.2,2.3], 2); //[1,2,2.1,2.2,2.3,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1821,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								},
								{
									"id": 1822,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 253
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.addAll",
								"id": 311
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 147
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 38,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 46,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 47,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 253
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.addAll",
						"id": 311
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 144
					}
				},
				{
					"id": 1862,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1863,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 256
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 185
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 256
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 184
					}
				},
				{
					"id": 1793,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1794,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this ArrayList instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newList = swappableList.clone();\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 1226
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 70,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 1225
					}
				},
				{
					"id": 1864,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1865,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1866,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 258
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 258
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 186
					}
				},
				{
					"id": 1867,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1868,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1869,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 261
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 190
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 261
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 189
					}
				},
				{
					"id": 1870,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1871,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1872,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 264
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 192
					}
				},
				{
					"id": 1787,
					"name": "fall",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1788,
							"name": "fall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Swap between item in the given index and the item just after it.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  ////list contains [1,2,3,4]\n  list.fall(2); //returns true\n  //now list contains [1,2,4,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1789,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 43,
							"character": 6
						}
					]
				},
				{
					"id": 1896,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1897,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1898,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1899,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1900,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1901,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1902,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1903,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 218
					}
				},
				{
					"id": 1801,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1802,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //json = \"[1,2,3,4]\"\n  list = new SwappableList<number>().fromString(json,(x)=>(parseFloat(x)));\n  //list contains [1,2,3,4]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1803,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1804,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1805,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1806,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1807,
															"name": "itemJ",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/swappable-list.ts",
													"line": 96,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SwappableList",
								"id": 1778,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 96,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.fromString",
						"id": 1234
					}
				},
				{
					"id": 1823,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1824,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1825,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.get",
								"id": 317
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 151
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.get",
						"id": 317
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 150
					}
				},
				{
					"id": 1826,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1827,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1828,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.indexOf",
								"id": 320
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.indexOf",
						"id": 320
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 153
					}
				},
				{
					"id": 1873,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1874,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 267
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 196
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 267
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 195
					}
				},
				{
					"id": 1904,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1905,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 298
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 298
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 226
					}
				},
				{
					"id": 1829,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1830,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 1831,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.lastIndexOf",
								"id": 323
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.lastIndexOf",
						"id": 323
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 156
					}
				},
				{
					"id": 1832,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1833,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator(); //starts at index 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1834,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.listIterator",
								"id": 326
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 160
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.listIterator",
						"id": 326
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 159
					}
				},
				{
					"id": 1835,
					"name": "median",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1836,
							"name": "median",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median of this list. If the list is empty returns undefined.\nIn case of two medians the later one is preferred.",
								"tags": [
									{
										"tag": "example",
										"text": "\n //list contains [1, 2, 3, 4]\nlist.median(); //returns 3\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.median",
								"id": 329
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.median",
								"id": 163
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.median",
						"id": 329
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.median",
						"id": 162
					}
				},
				{
					"id": 1875,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1876,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1877,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 269
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 198
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 269
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 197
					}
				},
				{
					"id": 1878,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1879,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1880,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 272
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 201
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 272
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 200
					}
				},
				{
					"id": 1837,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1838,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1839,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeAt",
								"id": 331
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 165
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeAt",
						"id": 331
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 164
					}
				},
				{
					"id": 1881,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1882,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1883,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1884,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1885,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1886,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1887,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1888,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 275
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 203
					}
				},
				{
					"id": 1840,
					"name": "removeRange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1841,
							"name": "removeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6]\n  console.log(list.removeRange(1,4)); //[1,5,6]\n  //Output: [2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1842,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1843,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeRange",
								"id": 334
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 126,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeRange",
						"id": 334
					}
				},
				{
					"id": 1889,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1890,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1891,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 283
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 283
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 211
					}
				},
				{
					"id": 1859,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1860,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverse the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5]\n  list.reverse() //now list contains [5,4,3,2,1]\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.reverse",
								"id": 353
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.reverse",
								"id": 183
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 173,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.reverse",
						"id": 353
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.reverse",
						"id": 182
					}
				},
				{
					"id": 1784,
					"name": "rise",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1785,
							"name": "rise",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Swap between item in the given index and the item just before it.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  ////list contains [1,2,3,4]\n  list.rise(2); //returns true\n  //now list contains [1,3,2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1786,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 32,
							"character": 6
						}
					]
				},
				{
					"id": 1790,
					"name": "rotate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1791,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotate the list based on the direction specified (-ve : left, +ve/0 : right);",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4]\n  list.rotate(-1); //returns true\n  //now list contains [2,3,4,1]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1792,
									"name": "direction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 54,
							"character": 8
						}
					]
				},
				{
					"id": 1844,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1845,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1846,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1847,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.set",
								"id": 338
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 168
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 137,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.set",
						"id": 338
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 167
					}
				},
				{
					"id": 1892,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1893,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 286
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 215
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 286
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 214
					}
				},
				{
					"id": 1848,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1849,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is considered smaller than y if the compareFn(x,y) is negetive",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1850,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1851,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1852,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1853,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1854,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 152,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.sort",
								"id": 342
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 152,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.sort",
						"id": 342
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 171
					}
				},
				{
					"id": 1855,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1856,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1857,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1858,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.subList",
								"id": 349
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 179
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 163,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.subList",
						"id": 349
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 178
					}
				},
				{
					"id": 1780,
					"name": "swap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1781,
							"name": "swap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Swap between items of given indexes. Returns true on success else false.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  ////list contains [1,2,3,4]\n  list.swap(1,3); //returns true\n  //now list contains [1,4,3,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1782,
									"name": "sourceIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1783,
									"name": "destinationIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 14,
							"character": 6
						}
					]
				},
				{
					"id": 1894,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1895,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 288
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 217
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 288
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 216
					}
				},
				{
					"id": 1795,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1796,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the list into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4]\n  console.log(list.toString((x)=>(x.toString())));\n  //Output\n  //\"[1,2,3,4]\"\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1797,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1798,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1799,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1800,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/swappable-list.ts",
													"line": 82,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/swappable-list.ts",
							"line": 82,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 1228
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1808
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1861
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1811,
						1817,
						1862,
						1793,
						1864,
						1867,
						1870,
						1787,
						1896,
						1801,
						1823,
						1826,
						1873,
						1904,
						1829,
						1832,
						1835,
						1875,
						1878,
						1837,
						1881,
						1840,
						1889,
						1859,
						1784,
						1790,
						1844,
						1892,
						1848,
						1855,
						1780,
						1894,
						1795
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/lists/swappable-list.ts",
					"line": 5,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 300,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 136,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 1223,
					"typeArguments": [
						{
							"type": "reference",
							"name": "SwappableList",
							"id": 1778,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 1227
				}
			]
		},
		{
			"id": 601,
			"name": "Vertex",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A Vertex in graph datastructure."
			},
			"typeParameter": [
				{
					"id": 602,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 604,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 605,
							"name": "new Vertex",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 606,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vertex",
								"id": 601
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 7,
							"character": 10
						}
					]
				},
				{
					"id": 603,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 7,
							"character": 7
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "E"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						604
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						603
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/graph.ts",
					"line": 6,
					"character": 19
				}
			]
		},
		{
			"id": 228,
			"name": "BinaryTree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A data structure in which a record is linked to two successor records, usually referred to as the left branch when greater and the right when less than the previous record."
			},
			"typeParameter": [
				{
					"id": 229,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 233,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 234,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an item from the tree."
							},
							"parameters": [
								{
									"id": 235,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Tree.delete",
								"id": 79
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/binary-tree.ts",
							"line": 15,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Tree.delete",
						"id": 79
					}
				},
				{
					"id": 236,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 237,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the height of this binary tree."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "Tree.height",
								"id": 82
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/binary-tree.ts",
							"line": 19,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Tree.height",
						"id": 82
					}
				},
				{
					"id": 238,
					"name": "inorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 239,
							"name": "inorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after inorder traversal of the tree."
							},
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/binary-tree.ts",
							"line": 23,
							"character": 9
						}
					]
				},
				{
					"id": 230,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 231,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a new item to the tree."
							},
							"parameters": [
								{
									"id": 232,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Tree.insert",
								"id": 76
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/binary-tree.ts",
							"line": 11,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Tree.insert",
						"id": 76
					}
				},
				{
					"id": 242,
					"name": "postorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 243,
							"name": "postorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after postorder traversal of the tree."
							},
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/binary-tree.ts",
							"line": 31,
							"character": 11
						}
					]
				},
				{
					"id": 240,
					"name": "preorder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 241,
							"name": "preorder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of items obtained after preorder traversal of the tree."
							},
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/binary-tree.ts",
							"line": 27,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						233,
						236,
						238,
						230,
						242,
						240
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/binary-tree.ts",
					"line": 7,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Tree",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractBinaryTree",
					"id": 412
				},
				{
					"type": "reference",
					"name": "BinarySearchTree",
					"id": 2158
				},
				{
					"type": "reference",
					"name": "Rope",
					"id": 2703
				}
			]
		},
		{
			"id": 1223,
			"name": "Cloneable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Classes that implements this interface must have a clone method."
			},
			"typeParameter": [
				{
					"id": 1224,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1225,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1226,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "create a copy of the current object and return"
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/cloneable.ts",
							"line": 6,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1225
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/cloneable.ts",
					"line": 2,
					"character": 26
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 1413
				},
				{
					"type": "reference",
					"name": "ArrayMap",
					"id": 1241
				},
				{
					"type": "reference",
					"name": "ArrayMatrix",
					"id": 2372
				},
				{
					"type": "reference",
					"name": "Dictionary",
					"id": 1906
				},
				{
					"type": "reference",
					"name": "HistoryList",
					"id": 1631
				},
				{
					"type": "reference",
					"name": "NumberMatrix",
					"id": 2459
				},
				{
					"type": "reference",
					"name": "ParameterMap",
					"id": 2802
				},
				{
					"type": "reference",
					"name": "SquareMatrix",
					"id": 2598
				},
				{
					"type": "reference",
					"name": "SwappableList",
					"id": 1778
				}
			]
		},
		{
			"id": 84,
			"name": "Collection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Collection is a set of elements of same type."
			},
			"typeParameter": [
				{
					"id": 85,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 86,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 87,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to collection"
							},
							"parameters": [
								{
									"id": 88,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 9,
							"character": 5
						}
					]
				},
				{
					"id": 89,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 90,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to collection"
							},
							"parameters": [
								{
									"id": 91,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 13,
							"character": 8
						}
					]
				},
				{
					"id": 92,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 93,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					]
				},
				{
					"id": 94,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 95,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 96,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					]
				},
				{
					"id": 97,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 98,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 99,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					]
				},
				{
					"id": 100,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 101,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 102,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					]
				},
				{
					"id": 126,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 127,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 128,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 130,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 131,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 132,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 133,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					}
				},
				{
					"id": 103,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 104,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					]
				},
				{
					"id": 134,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 135,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 105,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 106,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 107,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					]
				},
				{
					"id": 108,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 109,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 110,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					]
				},
				{
					"id": 111,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 112,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 113,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 114,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 115,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 116,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 117,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 118,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					]
				},
				{
					"id": 119,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 120,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 121,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					]
				},
				{
					"id": 122,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 123,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					]
				},
				{
					"id": 124,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 125,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						86,
						89,
						92,
						94,
						97,
						100,
						126,
						103,
						134,
						105,
						108,
						111,
						119,
						122,
						124
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/collection.ts",
					"line": 5,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Iterable",
					"id": 1,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "List",
					"id": 136
				},
				{
					"type": "reference",
					"name": "Set",
					"id": 436
				},
				{
					"type": "reference",
					"name": "Queue",
					"id": 871
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 244
				},
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 300
				},
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 927
				},
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 655
				},
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 1071
				},
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 1413
				},
				{
					"type": "reference",
					"name": "HistoryList",
					"id": 1631
				},
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 2069
				},
				{
					"type": "reference",
					"name": "SwappableList",
					"id": 1778
				}
			]
		},
		{
			"id": 615,
			"name": "Graph",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A graph is a pictorial representation of a set of objects where some pairs of objects are connected by links.\nThe interconnected objects are represented by points termed as vertices, and the links that connect the vertices are called edges."
			},
			"typeParameter": [
				{
					"id": 616,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 617,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 618,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a new vertex with the specified label to this graph."
							},
							"parameters": [
								{
									"id": 619,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 30,
							"character": 5
						}
					]
				},
				{
					"id": 620,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 621,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add new vertices with the labels present in the specified array."
							},
							"parameters": [
								{
									"id": 622,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 34,
							"character": 8
						}
					]
				},
				{
					"id": 639,
					"name": "addEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 640,
							"name": "addEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add the specified edge to the graph. The start and end vertices are added automatically to the graph if not present."
							},
							"parameters": [
								{
									"id": 641,
									"name": "edge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 58,
							"character": 9
						}
					]
				},
				{
					"id": 623,
					"name": "addVertex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 624,
							"name": "addVertex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add the specified vertex to the graph."
							},
							"parameters": [
								{
									"id": 625,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 38,
							"character": 11
						}
					]
				},
				{
					"id": 626,
					"name": "addVertices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 627,
							"name": "addVertices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all vertices in the specified array to the graph."
							},
							"parameters": [
								{
									"id": 628,
									"name": "vertices",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vertex",
											"id": 601,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "E"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 42,
							"character": 13
						}
					]
				},
				{
					"id": 649,
					"name": "adjacentEdges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 650,
							"name": "adjacentEdges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of edges starting from specified vertex."
							},
							"parameters": [
								{
									"id": 651,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Edge",
												"id": 607,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 74,
							"character": 15
						}
					]
				},
				{
					"id": 652,
					"name": "adjacentVertices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 653,
							"name": "adjacentVertices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of vertices adjacent to the specified vertex."
							},
							"parameters": [
								{
									"id": 654,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Vertex",
												"id": 601,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "E"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 78,
							"character": 18
						}
					]
				},
				{
					"id": 635,
					"name": "createEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 636,
							"name": "createEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create vertices from the given labels and an edge connecting them and add it to the graph."
							},
							"parameters": [
								{
									"id": 637,
									"name": "startLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 638,
									"name": "endLabel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 54,
							"character": 12
						}
					]
				},
				{
					"id": 647,
					"name": "edgeSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 648,
							"name": "edgeSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of edges present in the graph."
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 70,
							"character": 9
						}
					]
				},
				{
					"id": 629,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 630,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove a single vertex with the specified label from the graph."
							},
							"parameters": [
								{
									"id": 631,
									"name": "label",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 46,
							"character": 8
						}
					]
				},
				{
					"id": 642,
					"name": "removeEdge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 643,
							"name": "removeEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove the specified edge from the graph."
							},
							"parameters": [
								{
									"id": 644,
									"name": "edge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Edge",
										"id": 607,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 62,
							"character": 12
						}
					]
				},
				{
					"id": 632,
					"name": "removeVertex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 633,
							"name": "removeVertex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove the specified vertex from the graph."
							},
							"parameters": [
								{
									"id": 634,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 50,
							"character": 14
						}
					]
				},
				{
					"id": 645,
					"name": "vertexSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 646,
							"name": "vertexSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the set of vertices present in the graph."
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Vertex",
										"id": 601,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/graph.ts",
							"line": 66,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						617,
						620,
						639,
						623,
						626,
						649,
						652,
						635,
						647,
						629,
						642,
						632,
						645
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/graph.ts",
					"line": 26,
					"character": 22
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractGraph",
					"id": 826
				},
				{
					"type": "reference",
					"name": "DiGraph",
					"id": 1580
				}
			]
		},
		{
			"id": 1,
			"name": "Iterable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Anything whose elements can be iterated over."
			},
			"typeParameter": [
				{
					"id": 2,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 3,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 4,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Do an action for each item in this object"
							},
							"parameters": [
								{
									"id": 5,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 7,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 8,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 9,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 10,
															"name": "iterable",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Iterable",
																"id": 1,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/iterable.ts",
													"line": 8,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 8,
							"character": 9
						}
					]
				},
				{
					"id": 11,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 12,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						3,
						11
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/iterable.ts",
					"line": 4,
					"character": 25
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84
				}
			]
		},
		{
			"id": 136,
			"name": "List",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Sub interface of Collection. List has much more functionalities than a collection."
			},
			"typeParameter": [
				{
					"id": 137,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 138,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 139,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 140,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 86
							}
						},
						{
							"id": 141,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list"
							},
							"parameters": [
								{
									"id": 142,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 143,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 86
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 11,
							"character": 5
						},
						{
							"fileName": "interfaces/list.ts",
							"line": 15,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 86
					}
				},
				{
					"id": 144,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 145,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 146,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 89
							}
						},
						{
							"id": 147,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position."
							},
							"parameters": [
								{
									"id": 148,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								},
								{
									"id": 149,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 89
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 19,
							"character": 8
						},
						{
							"fileName": "interfaces/list.ts",
							"line": 23,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 89
					}
				},
				{
					"id": 184,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 185,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 92
					}
				},
				{
					"id": 186,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 187,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 188,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 94
					}
				},
				{
					"id": 189,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 190,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 191,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 97
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 97
					}
				},
				{
					"id": 192,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 193,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 194,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 100
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 100
					}
				},
				{
					"id": 218,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 219,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 220,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 221,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 222,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 223,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 224,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 225,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 126
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 126
					}
				},
				{
					"id": 150,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 151,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list"
							},
							"parameters": [
								{
									"id": 152,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 27,
							"character": 5
						}
					]
				},
				{
					"id": 153,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 154,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of first occurrence of the element."
							},
							"parameters": [
								{
									"id": 155,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 31,
							"character": 9
						}
					]
				},
				{
					"id": 195,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 196,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 103
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 103
					}
				},
				{
					"id": 226,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 227,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 156,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 157,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of last occurrence of the element."
							},
							"parameters": [
								{
									"id": 158,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 35,
							"character": 13
						}
					]
				},
				{
					"id": 159,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 160,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list starting from the 'index'"
							},
							"parameters": [
								{
									"id": 161,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 39,
							"character": 14
						}
					]
				},
				{
					"id": 162,
					"name": "median",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 163,
							"name": "median",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median of the list"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 43,
							"character": 8
						}
					]
				},
				{
					"id": 197,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 198,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 199,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 105
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 105
					}
				},
				{
					"id": 200,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 201,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 202,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 108
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 108
					}
				},
				{
					"id": 164,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 165,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list."
							},
							"parameters": [
								{
									"id": 166,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 47,
							"character": 10
						}
					]
				},
				{
					"id": 203,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 204,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 205,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 206,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 207,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 208,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 209,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 210,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 111
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 111
					}
				},
				{
					"id": 211,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 212,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 213,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 119
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 119
					}
				},
				{
					"id": 182,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 183,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverse the list"
							},
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 63,
							"character": 9
						}
					]
				},
				{
					"id": 167,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 168,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element"
							},
							"parameters": [
								{
									"id": 169,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 170,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 51,
							"character": 5
						}
					]
				},
				{
					"id": 214,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 215,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 122
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 122
					}
				},
				{
					"id": 171,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 172,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn"
							},
							"parameters": [
								{
									"id": 173,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 174,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 175,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 176,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 177,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/list.ts",
													"line": 55,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 55,
							"character": 6
						}
					]
				},
				{
					"id": 178,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 179,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive."
							},
							"parameters": [
								{
									"id": 180,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 181,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 59,
							"character": 9
						}
					]
				},
				{
					"id": 216,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 217,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 124
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 124
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						138,
						144,
						184,
						186,
						189,
						192,
						218,
						150,
						153,
						195,
						226,
						156,
						159,
						162,
						197,
						200,
						164,
						203,
						211,
						182,
						167,
						214,
						171,
						178,
						216
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/list.ts",
					"line": 7,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 300
				},
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 1413
				},
				{
					"type": "reference",
					"name": "HistoryList",
					"id": 1631
				},
				{
					"type": "reference",
					"name": "SwappableList",
					"id": 1778
				}
			]
		},
		{
			"id": 505,
			"name": "Map",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object that maps keys to values. A map cannot contain duplicate keys; each key can map to at most one value."
			},
			"typeParameter": [
				{
					"id": 506,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 507,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 508,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 509,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the mappings from this map."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 18,
							"character": 7
						}
					]
				},
				{
					"id": 510,
					"name": "compute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 511,
							"name": "compute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts to compute a mapping for the specified key and its current mapped value."
							},
							"parameters": [
								{
									"id": 512,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 513,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 514,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 515,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 516,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 517,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "V"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 518,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "K"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "typeParameter",
																"name": "V"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/map.ts",
													"line": 22,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 22,
							"character": 9
						}
					]
				},
				{
					"id": 519,
					"name": "computeIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 520,
							"name": "computeIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the specified key is not already associated with a value (or is mapped to null), attempts to compute its value using the given mapping function and enters it into this map."
							},
							"parameters": [
								{
									"id": 521,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 522,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 523,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 524,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 525,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 526,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "V"
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														},
														{
															"id": 527,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "K"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "typeParameter",
																"name": "V"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/map.ts",
													"line": 26,
													"character": 37
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 26,
							"character": 17
						}
					]
				},
				{
					"id": 528,
					"name": "computeIfPresent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 529,
							"name": "computeIfPresent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the value for the specified key is present and non-null, attempts to compute a new mapping given the key and its current mapped value."
							},
							"parameters": [
								{
									"id": 530,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 531,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 532,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 533,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 534,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 535,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 536,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "K"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/map.ts",
													"line": 30,
													"character": 38
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 30,
							"character": 18
						}
					]
				},
				{
					"id": 537,
					"name": "containsKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 538,
							"name": "containsKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains a mapping for the specified key."
							},
							"parameters": [
								{
									"id": 539,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 34,
							"character": 13
						}
					]
				},
				{
					"id": 540,
					"name": "containsValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 541,
							"name": "containsValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map maps one or more keys to the specified value."
							},
							"parameters": [
								{
									"id": 542,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 38,
							"character": 15
						}
					]
				},
				{
					"id": 543,
					"name": "entrySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 544,
							"name": "entrySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the mappings contained in this map."
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "reference",
										"name": "MapEntry",
										"id": 500,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 42,
							"character": 10
						}
					]
				},
				{
					"id": 545,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 546,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified map with this map for equality."
							},
							"parameters": [
								{
									"id": 547,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 46,
							"character": 8
						}
					]
				},
				{
					"id": 548,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 549,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each entry in this map until all entries have been processed or the action throws an exception."
							},
							"parameters": [
								{
									"id": 550,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 551,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 552,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 553,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 554,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 555,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "K"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/map.ts",
													"line": 50,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 50,
							"character": 9
						}
					]
				},
				{
					"id": 556,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 557,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped. undefined if there is no mapping."
							},
							"parameters": [
								{
									"id": 558,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 54,
							"character": 5
						}
					]
				},
				{
					"id": 559,
					"name": "getOrDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 560,
							"name": "getOrDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key or if key is mapped to null."
							},
							"parameters": [
								{
									"id": 561,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 562,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "V"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 58,
							"character": 14
						}
					]
				},
				{
					"id": 563,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 564,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this map contains no key-value mappings."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 62,
							"character": 9
						}
					]
				},
				{
					"id": 565,
					"name": "keySet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 566,
							"name": "keySet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a Set view of the keys contained in this map."
							},
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "K"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 66,
							"character": 8
						}
					]
				},
				{
					"id": 567,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 568,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Associates the specified value with the specified key in this map.Returns the old value associated with the key or  undefined."
							},
							"parameters": [
								{
									"id": 569,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 570,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 70,
							"character": 5
						}
					]
				},
				{
					"id": 571,
					"name": "putAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 572,
							"name": "putAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Copies all of the mappings from the specified map to this map."
							},
							"parameters": [
								{
									"id": 573,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 74,
							"character": 8
						}
					]
				},
				{
					"id": 574,
					"name": "putIfAbsent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 575,
							"name": "putIfAbsent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns undefined, else returns the current value."
							},
							"parameters": [
								{
									"id": 576,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 577,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 78,
							"character": 13
						}
					]
				},
				{
					"id": 578,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 579,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the mapping for a key from this map if it is present"
							},
							"parameters": [
								{
									"id": 580,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 82,
							"character": 8
						}
					]
				},
				{
					"id": 581,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 582,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the entry for the specified key only if it is currently mapped to the specified value."
							},
							"parameters": [
								{
									"id": 583,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								},
								{
									"id": 584,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 86,
							"character": 10
						}
					]
				},
				{
					"id": 585,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 586,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace all entries with specified value with the new value. Returns true if map was changed."
							},
							"parameters": [
								{
									"id": 587,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								},
								{
									"id": 588,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 90,
							"character": 9
						}
					]
				},
				{
					"id": 589,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 590,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception."
							},
							"parameters": [
								{
									"id": 591,
									"name": "remappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 592,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 593,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 594,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 595,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "V"
															}
														},
														{
															"id": 596,
															"name": "map",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "K"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "V"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/map.ts",
													"line": 94,
													"character": 25
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 94,
							"character": 12
						}
					]
				},
				{
					"id": 597,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 598,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of key-value mappings in this map."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 98,
							"character": 6
						}
					]
				},
				{
					"id": 599,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 600,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a List view of the values contained in this map."
							},
							"type": {
								"type": "reference",
								"name": "List",
								"id": 136,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 102,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						508,
						510,
						519,
						528,
						537,
						540,
						543,
						545,
						548,
						556,
						559,
						563,
						565,
						567,
						571,
						574,
						578,
						581,
						585,
						589,
						597,
						599
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/map.ts",
					"line": 14,
					"character": 20
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractMap",
					"id": 723
				},
				{
					"type": "reference",
					"name": "ArrayMap",
					"id": 1241
				},
				{
					"type": "reference",
					"name": "Dictionary",
					"id": 1906
				},
				{
					"type": "reference",
					"name": "ParameterMap",
					"id": 2802
				}
			]
		},
		{
			"id": 500,
			"name": "MapEntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Used to denote an entry in Map(readonly)."
			},
			"typeParameter": [
				{
					"id": 501,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 502,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 503,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 7,
							"character": 14
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "K"
					}
				},
				{
					"id": 504,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "interfaces/map.ts",
							"line": 8,
							"character": 16
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "V"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						503,
						504
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/map.ts",
					"line": 6,
					"character": 25
				}
			]
		},
		{
			"id": 2029,
			"name": "Matrix",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 2030,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2050,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2051,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check whether the specified matrix is equal to this matrix."
							},
							"parameters": [
								{
									"id": 2052,
									"name": "matrix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Matrix",
										"id": 2029,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 35,
							"character": 8
						}
					]
				},
				{
					"id": 2031,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2032,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read the item at the specified position in this matrix."
							},
							"parameters": [
								{
									"id": 2033,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2034,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 5,
							"character": 5
						}
					]
				},
				{
					"id": 2042,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2043,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of rows in this matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 20,
							"character": 8
						}
					]
				},
				{
					"id": 2035,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2036,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert an item at the specified position in this matrix."
							},
							"parameters": [
								{
									"id": 2037,
									"name": "rowIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2038,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2039,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 10,
							"character": 5
						}
					]
				},
				{
					"id": 2046,
					"name": "subMatrix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2047,
							"name": "subMatrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the submatrix obtained after removing the specified rows and columns from this matrix."
							},
							"parameters": [
								{
									"id": 2048,
									"name": "rows",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2049,
									"name": "cols",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Matrix",
								"id": 2029,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 30,
							"character": 11
						}
					]
				},
				{
					"id": 2040,
					"name": "transpose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2041,
							"name": "transpose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the transpose of this matrix."
							},
							"type": {
								"type": "reference",
								"name": "Matrix",
								"id": 2029,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 15,
							"character": 11
						}
					]
				},
				{
					"id": 2044,
					"name": "width",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2045,
							"name": "width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of columns in this matrix."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 25,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2050,
						2031,
						2042,
						2035,
						2046,
						2040,
						2044
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/matrix.ts",
					"line": 1,
					"character": 23
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayMatrix",
					"id": 2372
				},
				{
					"type": "reference",
					"name": "NumberMatrix",
					"id": 2459
				},
				{
					"type": "reference",
					"name": "SquareMatrix",
					"id": 2598
				}
			]
		},
		{
			"id": 2061,
			"name": "MatrixColumn",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A single column of a matrix."
			},
			"typeParameter": [
				{
					"id": 2062,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2063,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2064,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change this matrix column with another column of same matrix."
							},
							"parameters": [
								{
									"id": 2065,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MatrixColumn",
										"id": 2061,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 59,
							"character": 8
						}
					]
				},
				{
					"id": 2066,
					"name": "interchange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2067,
							"name": "interchange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Interchange this column with another column of the same matrix."
							},
							"parameters": [
								{
									"id": 2068,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MatrixColumn",
										"id": 2061,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 63,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2063,
						2066
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/matrix.ts",
					"line": 55,
					"character": 29
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayMatrixColumn",
					"id": 2437
				},
				{
					"type": "reference",
					"name": "NumberMatrixColumn",
					"id": 2566
				}
			]
		},
		{
			"id": 2053,
			"name": "MatrixRow",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A single row of a matrix."
			},
			"typeParameter": [
				{
					"id": 2054,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 2055,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2056,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change this matrix row with another row of same matrix."
							},
							"parameters": [
								{
									"id": 2057,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MatrixRow",
										"id": 2053,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 45,
							"character": 8
						}
					]
				},
				{
					"id": 2058,
					"name": "interchange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2059,
							"name": "interchange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Interchange this row with another row of the same matrix."
							},
							"parameters": [
								{
									"id": 2060,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MatrixRow",
										"id": 2053,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/matrix.ts",
							"line": 49,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2055,
						2058
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/matrix.ts",
					"line": 41,
					"character": 26
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayMatrixRow",
					"id": 2415
				},
				{
					"type": "reference",
					"name": "NumberMatrixRow",
					"id": 2534
				}
			]
		},
		{
			"id": 871,
			"name": "Queue",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 872,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 873,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 874,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 875,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 86
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/queue.ts",
							"line": 4,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 86
					}
				},
				{
					"id": 880,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 881,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to collection"
							},
							"parameters": [
								{
									"id": 882,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 89
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 13,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 89
					}
				},
				{
					"id": 883,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 884,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 92
					}
				},
				{
					"id": 885,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 886,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 887,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 94
					}
				},
				{
					"id": 888,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 889,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 890,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 97
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 97
					}
				},
				{
					"id": 876,
					"name": "element",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 877,
							"name": "element",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/queue.ts",
							"line": 5,
							"character": 9
						}
					]
				},
				{
					"id": 891,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 892,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 893,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 100
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 100
					}
				},
				{
					"id": 917,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 918,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 919,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 920,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 921,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 922,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 923,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 924,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 126
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 126
					}
				},
				{
					"id": 894,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 895,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 103
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 103
					}
				},
				{
					"id": 925,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 926,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 878,
					"name": "poll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 879,
							"name": "poll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/queue.ts",
							"line": 6,
							"character": 6
						}
					]
				},
				{
					"id": 896,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 897,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 898,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 105
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 105
					}
				},
				{
					"id": 899,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 900,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 901,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 108
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 108
					}
				},
				{
					"id": 902,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 903,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 904,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 905,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 906,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 907,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 908,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 909,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 111
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 111
					}
				},
				{
					"id": 910,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 911,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 912,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 119
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 119
					}
				},
				{
					"id": 913,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 914,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 122
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 122
					}
				},
				{
					"id": 915,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 916,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 124
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 124
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						873,
						880,
						883,
						885,
						888,
						876,
						891,
						917,
						894,
						925,
						878,
						896,
						899,
						902,
						910,
						913,
						915
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/queue.ts",
					"line": 3,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 927
				},
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 2069
				}
			]
		},
		{
			"id": 1227,
			"name": "Serializable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Implementing this interface means that the class overrides Object's toString method to return the object's JSON String"
			},
			"children": [
				{
					"id": 1234,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1235,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the Object from the JSON string"
							},
							"parameters": [
								{
									"id": 1236,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1237,
									"name": "deserializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1238,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1239,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1240,
															"name": "itemJSON",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/serializable.ts",
													"line": 12,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/serializable.ts",
							"line": 12,
							"character": 12
						}
					]
				},
				{
					"id": 1228,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1229,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return this object's corresponding JSON String"
							},
							"parameters": [
								{
									"id": 1230,
									"name": "serializerFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1231,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1232,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1233,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/serializable.ts",
													"line": 8,
													"character": 24
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/serializable.ts",
							"line": 8,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1234,
						1228
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/serializable.ts",
					"line": 4,
					"character": 29
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 1413
				},
				{
					"type": "reference",
					"name": "Dictionary",
					"id": 1906
				},
				{
					"type": "reference",
					"name": "HistoryList",
					"id": 1631
				},
				{
					"type": "reference",
					"name": "ParameterMap",
					"id": 2802
				},
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 2069
				},
				{
					"type": "reference",
					"name": "SwappableList",
					"id": 1778
				}
			]
		},
		{
			"id": 436,
			"name": "Set",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A collection that contains no duplicate elements"
			},
			"typeParameter": [
				{
					"id": 437,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 438,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 439,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present"
							},
							"parameters": [
								{
									"id": 440,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 86
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 10,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 86
					}
				},
				{
					"id": 441,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 442,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds all of the elements in the specified array to this set if they're not already present"
							},
							"parameters": [
								{
									"id": 443,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 89
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 14,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 89
					}
				},
				{
					"id": 456,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 457,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 92
					}
				},
				{
					"id": 458,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 459,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 460,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 94
					}
				},
				{
					"id": 461,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 462,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 463,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 97
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 97
					}
				},
				{
					"id": 450,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 451,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set."
							},
							"parameters": [
								{
									"id": 452,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 26,
							"character": 12
						}
					]
				},
				{
					"id": 464,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 465,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 466,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 100
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 100
					}
				},
				{
					"id": 453,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 454,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified."
							},
							"parameters": [
								{
									"id": 455,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 30,
							"character": 11
						}
					]
				},
				{
					"id": 490,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 491,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 492,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 493,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 494,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 495,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 496,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 497,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 126
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 126
					}
				},
				{
					"id": 447,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 448,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified"
							},
							"parameters": [
								{
									"id": 449,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 22,
							"character": 14
						}
					]
				},
				{
					"id": 467,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 468,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 103
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 103
					}
				},
				{
					"id": 498,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 499,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 469,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 470,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 471,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 105
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 105
					}
				},
				{
					"id": 472,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 473,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 474,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 108
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 108
					}
				},
				{
					"id": 475,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 476,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 477,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 478,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 479,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 480,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 481,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 482,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 111
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 111
					}
				},
				{
					"id": 483,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 484,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 485,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 119
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 119
					}
				},
				{
					"id": 486,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 487,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 122
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 122
					}
				},
				{
					"id": 488,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 489,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 124
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 124
					}
				},
				{
					"id": 444,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 445,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified"
							},
							"parameters": [
								{
									"id": 446,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 18,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						438,
						441,
						456,
						458,
						461,
						450,
						464,
						453,
						490,
						447,
						467,
						498,
						469,
						472,
						475,
						483,
						486,
						488,
						444
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/set.ts",
					"line": 6,
					"character": 20
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 84,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "SortedSet",
					"id": 987
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 655
				},
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 1071
				}
			]
		},
		{
			"id": 987,
			"name": "SortedSet",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A Set that further provides a total ordering on its elements. The elements are ordered using the compare function typically provided at sorted set creation time."
			},
			"typeParameter": [
				{
					"id": 988,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 989,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 990,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present"
							},
							"parameters": [
								{
									"id": 991,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Set.add",
								"id": 438
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 10,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Set.add",
						"id": 438
					}
				},
				{
					"id": 992,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 993,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds all of the elements in the specified array to this set if they're not already present"
							},
							"parameters": [
								{
									"id": 994,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Set.addAll",
								"id": 441
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 14,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Set.addAll",
						"id": 441
					}
				},
				{
					"id": 1027,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1028,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 92
					}
				},
				{
					"id": 995,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 996,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this set"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 997,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 998,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 999,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 1000,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "interfaces/sorted-set.ts",
											"line": 18,
											"character": 15
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 18,
							"character": 12
						}
					]
				},
				{
					"id": 1029,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1030,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 1031,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 94
					}
				},
				{
					"id": 1032,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1033,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 1034,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 97
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 97
					}
				},
				{
					"id": 1021,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1022,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set."
							},
							"parameters": [
								{
									"id": 1023,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.difference",
								"id": 450
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 26,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.difference",
						"id": 450
					}
				},
				{
					"id": 1035,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1036,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 1037,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 84,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 100
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 100
					}
				},
				{
					"id": 1024,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1025,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified."
							},
							"parameters": [
								{
									"id": 1026,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.exclusion",
								"id": 453
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 30,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.exclusion",
						"id": 453
					}
				},
				{
					"id": 1001,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1002,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first (lowest) element currently in this set."
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 22,
							"character": 7
						}
					]
				},
				{
					"id": 1061,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1062,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 1063,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1064,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1065,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1066,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1067,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1068,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 126
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 126
					}
				},
				{
					"id": 1003,
					"name": "headSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1004,
							"name": "headSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are strictly less than toElement."
							},
							"parameters": [
								{
									"id": 1005,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SortedSet",
								"id": 987,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 26,
							"character": 9
						}
					]
				},
				{
					"id": 1018,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1019,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified"
							},
							"parameters": [
								{
									"id": 1020,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.intersection",
								"id": 447
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 22,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.intersection",
						"id": 447
					}
				},
				{
					"id": 1038,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1039,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 103
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 103
					}
				},
				{
					"id": 1069,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1070,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 1006,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1007,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the last (highest) element currently in this set."
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 30,
							"character": 6
						}
					]
				},
				{
					"id": 1040,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1041,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 1042,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 105
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 105
					}
				},
				{
					"id": 1043,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1044,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 1045,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 108
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 108
					}
				},
				{
					"id": 1046,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1047,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 1048,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1049,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1050,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1051,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 1052,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1053,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 84,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 111
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 111
					}
				},
				{
					"id": 1054,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1055,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 1056,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "E"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 119
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 119
					}
				},
				{
					"id": 1057,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1058,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 122
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 122
					}
				},
				{
					"id": 1008,
					"name": "subSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1009,
							"name": "subSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive."
							},
							"parameters": [
								{
									"id": 1010,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 1011,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SortedSet",
								"id": 987,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 34,
							"character": 8
						}
					]
				},
				{
					"id": 1012,
					"name": "tailSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1013,
							"name": "tailSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are greater than or equal to fromElement."
							},
							"parameters": [
								{
									"id": 1014,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SortedSet",
								"id": 987,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 38,
							"character": 9
						}
					]
				},
				{
					"id": 1059,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1060,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "E"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 124
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 124
					}
				},
				{
					"id": 1015,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1016,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified"
							},
							"parameters": [
								{
									"id": 1017,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 436,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 436,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.union",
								"id": 444
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 18,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.union",
						"id": 444
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						989,
						992,
						1027,
						995,
						1029,
						1032,
						1021,
						1035,
						1024,
						1001,
						1061,
						1003,
						1018,
						1038,
						1069,
						1006,
						1040,
						1043,
						1046,
						1054,
						1057,
						1008,
						1012,
						1059,
						1015
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/sorted-set.ts",
					"line": 6,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Set",
					"id": 436,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 1071
				}
			]
		},
		{
			"id": 1169,
			"name": "Table",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 1170,
					"name": "R",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1171,
					"name": "C",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1172,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1173,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1174,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a row to this table."
							},
							"parameters": [
								{
									"id": 1175,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1176,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 7,
							"character": 5
						}
					]
				},
				{
					"id": 1206,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1207,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table."
							},
							"parameters": [
								{
									"id": 1208,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 35,
							"character": 8
						}
					]
				},
				{
					"id": 1209,
					"name": "deleteIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1210,
							"name": "deleteIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire row from this table based on filter function."
							},
							"parameters": [
								{
									"id": 1211,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1212,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1213,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1214,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "R"
															}
														},
														{
															"id": 1215,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "C"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/table.ts",
													"line": 39,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 39,
							"character": 10
						}
					]
				},
				{
					"id": 1216,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1217,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an entire column from this table."
							},
							"parameters": [
								{
									"id": 1218,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 43,
							"character": 6
						}
					]
				},
				{
					"id": 1189,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1190,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire column of this table."
							},
							"parameters": [
								{
									"id": 1191,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"id": 505,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "V"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 23,
							"character": 9
						}
					]
				},
				{
					"id": 1186,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1187,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entire row of this table."
							},
							"parameters": [
								{
									"id": 1188,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Map",
										"id": 505,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "V"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 19,
							"character": 7
						}
					]
				},
				{
					"id": 1182,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1183,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an entry from this table."
							},
							"parameters": [
								{
									"id": 1184,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1185,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 15,
							"character": 5
						}
					]
				},
				{
					"id": 1199,
					"name": "project",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1200,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of columns in this table based on the filter function."
							},
							"parameters": [
								{
									"id": 1201,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1202,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1203,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1204,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														},
														{
															"id": 1205,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "R"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "typeParameter",
																				"name": "V"
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/table.ts",
													"line": 31,
													"character": 19
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Table",
								"id": 1169,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 31,
							"character": 9
						}
					]
				},
				{
					"id": 1219,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1220,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove an entry from this table."
							},
							"parameters": [
								{
									"id": 1221,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1222,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 47,
							"character": 8
						}
					]
				},
				{
					"id": 1192,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1193,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a subset of rows in this table based on the filter function."
							},
							"parameters": [
								{
									"id": 1194,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1195,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1196,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1197,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "R"
															}
														},
														{
															"id": 1198,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Map",
																"id": 505,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "C"
																	},
																	{
																		"type": "typeParameter",
																		"name": "V"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/table.ts",
													"line": 27,
													"character": 18
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Table",
								"id": 1169,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "R"
									},
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 27,
							"character": 8
						}
					]
				},
				{
					"id": 1177,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1178,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the value at the specified position in this table with the specified value."
							},
							"parameters": [
								{
									"id": 1179,
									"name": "rowKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "R"
									}
								},
								{
									"id": 1180,
									"name": "columnKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "C"
									}
								},
								{
									"id": 1181,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "V"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/table.ts",
							"line": 11,
							"character": 5
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1173,
						1206,
						1209,
						1216,
						1189,
						1186,
						1182,
						1199,
						1219,
						1192,
						1177
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/table.ts",
					"line": 3,
					"character": 22
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractTable",
					"id": 1356
				},
				{
					"type": "reference",
					"name": "DataTable",
					"id": 2298
				},
				{
					"type": "reference",
					"name": "EntryTable",
					"id": 2237
				}
			]
		},
		{
			"id": 74,
			"name": "Tree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A tree is a data structure made up of nodes or vertices and edges without having any cycle."
			},
			"typeParameter": [
				{
					"id": 75,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 79,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 80,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete an item from the tree."
							},
							"parameters": [
								{
									"id": 81,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/tree.ts",
							"line": 12,
							"character": 8
						}
					]
				},
				{
					"id": 82,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the height of the tree."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/tree.ts",
							"line": 16,
							"character": 8
						}
					]
				},
				{
					"id": 76,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 77,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Insert a new item to the tree."
							},
							"parameters": [
								{
									"id": 78,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/tree.ts",
							"line": 8,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						79,
						82,
						76
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/tree.ts",
					"line": 4,
					"character": 21
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "BinaryTree",
					"id": 228
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				412,
				244,
				826,
				300,
				723,
				927,
				655,
				1071,
				1356,
				1413,
				1241,
				2372,
				2437,
				2415,
				2158,
				400,
				2298,
				1580,
				1906,
				607,
				2237,
				1631,
				13,
				36,
				2459,
				2566,
				2534,
				2936,
				2802,
				2069,
				2703,
				2785,
				2598,
				1560,
				1778,
				601
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				228,
				1223,
				84,
				615,
				1,
				136,
				505,
				500,
				2029,
				2061,
				2053,
				871,
				1227,
				436,
				987,
				1169,
				74
			]
		}
	]
}