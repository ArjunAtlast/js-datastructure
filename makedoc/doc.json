{
	"id": 0,
	"name": "@arjunatlast/jsds",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 126,
			"name": "AbstractCollection",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract implementation of Collection interface"
			},
			"typeParameter": [
				{
					"id": 127,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 129,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 130,
							"name": "new AbstractCollection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 131,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractCollection",
								"id": 126
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 28
						}
					]
				},
				{
					"id": 128,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "T"
					},
					"defaultValue": " []"
				},
				{
					"id": 132,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 133,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.add(5);\n  //now collection contains [1,2,3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 134,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.add",
								"id": 77
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 21,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.add",
						"id": 76
					}
				},
				{
					"id": 135,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4,5]\n  collection.addAll([6,7]);\n  //now collection contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 137,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 80
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 32,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 79
					}
				},
				{
					"id": 138,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 139,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 83
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 140,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 141,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 142,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 85
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 143,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 144,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 145,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 88
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 146,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 147,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 148,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 91
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 172,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 173,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 175,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 176,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 177,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 178,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 179,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 149,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 150,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 180,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 181,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.iterator",
								"id": 125
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.iterator",
						"id": 124
					}
				},
				{
					"id": 151,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 152,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 153,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 96
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 154,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 155,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 156,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 99
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 157,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 158,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 159,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 160,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 161,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 162,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 163,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 164,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 165,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 166,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 167,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 110
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 168,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 169,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.size",
								"id": 113
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 170,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 171,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 115
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						129
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						128
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						132,
						135,
						138,
						140,
						143,
						146,
						172,
						149,
						180,
						151,
						154,
						157,
						165,
						168,
						170
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-collection.ts",
					"line": 7,
					"character": 40
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270
				},
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 422
				},
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 546
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			]
		},
		{
			"id": 270,
			"name": "AbstractList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract implementation of List interface"
			},
			"typeParameter": [
				{
					"id": 271,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 272,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 273,
							"name": "new AbstractList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 274,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 270
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 129
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 8,
							"character": 78
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 129
					}
				},
				{
					"id": 321,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 275,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 276,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 277,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 185
							}
						},
						{
							"id": 278,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.add(4); //[1,2,3,4]\n  list.add(2.5,2); //[1,2,2.5,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 279,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 280,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 17,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 25,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 26,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 132
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 184
					}
				},
				{
					"id": 281,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 282,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 283,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 191
							}
						},
						{
							"id": 284,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.addAll([4,5]); //[1,2,3,4,5]\n  list.addAll([2.1,2.2,2.3], 2); //[1,2,2.1,2.2,2.3,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 285,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 286,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 38,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 46,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 47,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 135
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 190
					}
				},
				{
					"id": 322,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 323,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 226
					}
				},
				{
					"id": 324,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 325,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 326,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 229
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 228
					}
				},
				{
					"id": 327,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 328,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 329,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 232
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 231
					}
				},
				{
					"id": 330,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 331,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 332,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 235
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 234
					}
				},
				{
					"id": 356,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 357,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 358,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 359,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 360,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 361,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 362,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 363,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 260
					}
				},
				{
					"id": 287,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 288,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 289,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 197
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 196
					}
				},
				{
					"id": 290,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 291,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 292,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 200
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 199
					}
				},
				{
					"id": 333,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 334,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 238
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 237
					}
				},
				{
					"id": 364,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 365,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 269
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 268
					}
				},
				{
					"id": 293,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 294,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 295,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 203
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 202
					}
				},
				{
					"id": 296,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 297,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator(); //starts at index 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 298,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 206
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 205
					}
				},
				{
					"id": 335,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 336,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 337,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 240
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 239
					}
				},
				{
					"id": 338,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 339,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 340,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 243
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 242
					}
				},
				{
					"id": 299,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 300,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 301,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 209
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 208
					}
				},
				{
					"id": 341,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 342,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 343,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 344,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 345,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 346,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 347,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 348,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 245
					}
				},
				{
					"id": 302,
					"name": "removeRange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 303,
							"name": "removeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6]\n  console.log(list.removeRange(1,4)); //[1,5,6]\n  //Output: [2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 304,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 305,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 13
						}
					]
				},
				{
					"id": 349,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 350,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 351,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 254
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 253
					}
				},
				{
					"id": 306,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 307,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 308,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 309,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 126,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 211
					}
				},
				{
					"id": 352,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 353,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 256
					}
				},
				{
					"id": 310,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 311,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is considered smaller than y if the compareFn(x,y) is negetive",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 312,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 313,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 314,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 315,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 316,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 141,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 141,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 215
					}
				},
				{
					"id": 317,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 318,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 319,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 320,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 270,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 223
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 151,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 222
					}
				},
				{
					"id": 354,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 355,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 259
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 258
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						272
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						321
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						275,
						281,
						322,
						324,
						327,
						330,
						356,
						287,
						290,
						333,
						364,
						293,
						296,
						335,
						338,
						299,
						341,
						302,
						349,
						306,
						352,
						310,
						317,
						354
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-list.ts",
					"line": 8,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 126,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 803
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 182,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 422,
			"name": "AbstractQueue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract implementation of Queue interface"
			},
			"typeParameter": [
				{
					"id": 423,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 429,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 430,
							"name": "new AbstractQueue",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 431,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractQueue",
								"id": 422
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 129
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 129
					}
				},
				{
					"id": 428,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 432,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 433,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.add(5);\n  //now collection contains [1,2,3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 434,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.add",
								"id": 369
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 21,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 132
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.add",
						"id": 368
					}
				},
				{
					"id": 435,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 436,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4,5]\n  collection.addAll([6,7]);\n  //now collection contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 437,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.addAll",
								"id": 376
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 135
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.addAll",
						"id": 375
					}
				},
				{
					"id": 438,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 439,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.clear",
								"id": 379
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.clear",
						"id": 378
					}
				},
				{
					"id": 440,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 441,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 442,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.contains",
								"id": 381
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.contains",
						"id": 380
					}
				},
				{
					"id": 443,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 444,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 445,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.containsAll",
								"id": 384
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.containsAll",
						"id": 383
					}
				},
				{
					"id": 424,
					"name": "element",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 425,
							"name": "element",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves, but does not remove, the head of this queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.element",
								"id": 372
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 15,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Queue.element",
						"id": 371
					}
				},
				{
					"id": 446,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 448,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.equals",
								"id": 387
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.equals",
						"id": 386
					}
				},
				{
					"id": 472,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 473,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 474,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 475,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 476,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 477,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 478,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 479,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.forEach",
						"id": 412
					}
				},
				{
					"id": 449,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 450,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.isEmpty",
								"id": 390
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.isEmpty",
						"id": 389
					}
				},
				{
					"id": 480,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 481,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.iterator",
								"id": 421
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.iterator",
						"id": 420
					}
				},
				{
					"id": 426,
					"name": "poll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 427,
							"name": "poll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves and removes the head of this queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1 and queue now has elements [2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.poll",
								"id": 374
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 26,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Queue.poll",
						"id": 373
					}
				},
				{
					"id": 451,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 452,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 453,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.remove",
								"id": 392
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.remove",
						"id": 391
					}
				},
				{
					"id": 454,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 455,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 456,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.removeAll",
								"id": 395
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeAll",
						"id": 394
					}
				},
				{
					"id": 457,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 458,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 459,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 460,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 461,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 462,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 463,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 464,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeIf",
						"id": 397
					}
				},
				{
					"id": 465,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 466,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 467,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.retainAll",
								"id": 406
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.retainAll",
						"id": 405
					}
				},
				{
					"id": 468,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 469,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.size",
								"id": 409
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.size",
						"id": 408
					}
				},
				{
					"id": 470,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 471,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.toArray",
								"id": 411
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.toArray",
						"id": 410
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						429
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						428
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						432,
						435,
						438,
						440,
						443,
						424,
						446,
						472,
						449,
						480,
						426,
						451,
						454,
						457,
						465,
						468,
						470
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-queue.ts",
					"line": 7,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 126,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 919
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Queue",
					"id": 366,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 546,
			"name": "AbstractSet",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Abstract implementation of Set interface."
			},
			"typeParameter": [
				{
					"id": 547,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 548,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 549,
							"name": "new AbstractSet",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 550,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 129
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 7,
							"character": 77
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 129
					}
				},
				{
					"id": 569,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 551,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 552,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4,5]\n  set.add(6); //returns true and now set contains [1,2,3,4,5,6]\n  set.add(5); //returns false since 5 is already in the set.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 553,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.add",
								"id": 485
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 20,
							"character": 4
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 132
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.add",
						"id": 484
					}
				},
				{
					"id": 554,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 555,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds all of the elements in the specified collection to this set if they're not already present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4,5]\n  set.add([4,5,6]); //returns true and now set contains [1,2,3,4,5,6]\n  set.add([5,6]); //returns false since 5 and 6 are already in the set.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 556,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.addAll",
								"id": 488
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 32,
							"character": 7
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 135
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.addAll",
						"id": 487
					}
				},
				{
					"id": 570,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 571,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.clear",
								"id": 503
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.clear",
						"id": 502
					}
				},
				{
					"id": 572,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 573,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 574,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.contains",
								"id": 505
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.contains",
						"id": 504
					}
				},
				{
					"id": 575,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 576,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 577,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.containsAll",
								"id": 508
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.containsAll",
						"id": 507
					}
				},
				{
					"id": 563,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 564,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 565,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 66,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.difference",
						"id": 496
					}
				},
				{
					"id": 578,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 579,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 580,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.equals",
								"id": 511
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.equals",
						"id": 510
					}
				},
				{
					"id": 566,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 567,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 568,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 77,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.exclusion",
						"id": 499
					}
				},
				{
					"id": 604,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 605,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 606,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 607,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 608,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 609,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 610,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 611,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.forEach",
						"id": 536
					}
				},
				{
					"id": 560,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 561,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.intersection(set2); //returns a new set : [4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 562,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 55,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.intersection",
						"id": 493
					}
				},
				{
					"id": 581,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 582,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.isEmpty",
								"id": 514
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.isEmpty",
						"id": 513
					}
				},
				{
					"id": 612,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 613,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.iterator",
								"id": 545
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.iterator",
						"id": 544
					}
				},
				{
					"id": 583,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 584,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 585,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.remove",
								"id": 516
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.remove",
						"id": 515
					}
				},
				{
					"id": 586,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 587,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 588,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.removeAll",
								"id": 519
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.removeAll",
						"id": 518
					}
				},
				{
					"id": 589,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 590,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 591,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 592,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 593,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 594,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 595,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 596,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.removeIf",
						"id": 521
					}
				},
				{
					"id": 597,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 598,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 599,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.retainAll",
								"id": 530
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.retainAll",
						"id": 529
					}
				},
				{
					"id": 600,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 601,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.size",
								"id": 533
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.size",
						"id": 532
					}
				},
				{
					"id": 602,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 603,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "Set.toArray",
								"id": 535
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "Set.toArray",
						"id": 534
					}
				},
				{
					"id": 557,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 558,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4] and set2 : [4,5,6,7]\n  set1.union(set2); //returns a new set : [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 559,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 44,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Set.union",
						"id": 490
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						548
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						569
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						551,
						554,
						570,
						572,
						575,
						563,
						578,
						566,
						604,
						560,
						581,
						612,
						583,
						586,
						589,
						597,
						600,
						602,
						557
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-set.ts",
					"line": 7,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 126,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 698
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Set",
					"id": 482,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 698,
			"name": "AbstractSortedSet",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 699,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 705,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 706,
							"name": "new AbstractSortedSet",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 707,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 708,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 709,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 710,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 711,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-sorted-set.ts",
													"line": 8,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 712,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSortedSet",
								"id": 698
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSet.__constructor",
								"id": 548
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 6,
							"character": 42
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSet.__constructor",
						"id": 548
					}
				},
				{
					"id": 700,
					"name": "_comparator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 6,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 701,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 702,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 703,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										},
										{
											"id": 704,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "ds/abstract/abstract-sorted-set.ts",
									"line": 6,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 751,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 713,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 714,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,3,6,8] //compareFn is ascending\n  set.add(4); //set: [1,3,4,6,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 715,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSet.add",
								"id": 551
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.add",
								"id": 617
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 20,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSet.add",
						"id": 551
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.add",
						"id": 616
					}
				},
				{
					"id": 716,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 717,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all items of an array into this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set containes [1,8,12] (compareFn designed for ascending order)\n  set.addAll([6,10,15]); //[1,6,8,10,12,15]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 718,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractSet.addAll",
								"id": 554
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.addAll",
								"id": 620
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 34,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractSet.addAll",
						"id": 554
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.addAll",
						"id": 619
					}
				},
				{
					"id": 752,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 753,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.clear",
								"id": 655
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.clear",
						"id": 654
					}
				},
				{
					"id": 719,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 720,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  set.comparator(); //returns a function\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 721,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 722,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 723,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 724,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "ds/abstract/abstract-sorted-set.ts",
											"line": 47,
											"character": 15
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.comparator",
								"id": 623
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 47,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.comparator",
						"id": 622
					}
				},
				{
					"id": 754,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 755,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 756,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.contains",
								"id": 657
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.contains",
						"id": 656
					}
				},
				{
					"id": 757,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 758,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 759,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.containsAll",
								"id": 660
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.containsAll",
						"id": 659
					}
				},
				{
					"id": 745,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 746,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 747,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.difference",
								"id": 563
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 66,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.difference",
						"id": 563
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.difference",
						"id": 648
					}
				},
				{
					"id": 760,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 761,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 762,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.equals",
								"id": 663
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.equals",
						"id": 662
					}
				},
				{
					"id": 748,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 749,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.difference(set2); //returns a new set : [1,2,3,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 750,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.exclusion",
								"id": 566
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 77,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.exclusion",
						"id": 566
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.exclusion",
						"id": 651
					}
				},
				{
					"id": 725,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 726,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first (lowest) element currently in this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4]\n  set.first()\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.first",
								"id": 629
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 57,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.first",
						"id": 628
					}
				},
				{
					"id": 786,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 787,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 788,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 789,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 790,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 791,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 792,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 793,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.forEach",
						"id": 688
					}
				},
				{
					"id": 733,
					"name": "headSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 734,
							"name": "headSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are strictly less than toElement.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set : [1,2,3,5,7,9]\n  set.headSet(6) //returns set : [1,2,3,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 735,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSortedSet",
								"id": 698,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.headSet",
								"id": 631
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 90,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.headSet",
						"id": 630
					}
				},
				{
					"id": 742,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 743,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4,5] and set2 : [4,5,6,7]\n  set1.intersection(set2); //returns a new set : [4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 744,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.intersection",
								"id": 560
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 55,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.intersection",
						"id": 560
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.intersection",
						"id": 645
					}
				},
				{
					"id": 763,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 764,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.isEmpty",
								"id": 666
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.isEmpty",
						"id": 665
					}
				},
				{
					"id": 794,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 795,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.iterator",
								"id": 697
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.iterator",
						"id": 696
					}
				},
				{
					"id": 727,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 728,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the last (highest) element currently in this set.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4]\n  set.last();\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.last",
								"id": 634
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 67,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.last",
						"id": 633
					}
				},
				{
					"id": 765,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 766,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 767,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.remove",
								"id": 668
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.remove",
						"id": 667
					}
				},
				{
					"id": 768,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 769,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 770,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.removeAll",
								"id": 671
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.removeAll",
						"id": 670
					}
				},
				{
					"id": 771,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 772,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 773,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 774,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 775,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 776,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 777,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 778,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.removeIf",
						"id": 673
					}
				},
				{
					"id": 779,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 780,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 781,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.retainAll",
								"id": 682
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.retainAll",
						"id": 681
					}
				},
				{
					"id": 782,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 783,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.size",
								"id": 685
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.size",
						"id": 684
					}
				},
				{
					"id": 729,
					"name": "subSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 730,
							"name": "subSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set contains [1,2,3,4,5,6,7,8,9,10]\n  set.subSet(4,9) //returns set : [4,5,6,7,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 731,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 732,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSortedSet",
								"id": 698,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.subSet",
								"id": 636
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 77,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.subSet",
						"id": 635
					}
				},
				{
					"id": 736,
					"name": "tailSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 737,
							"name": "tailSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are greater than or equal to fromElement.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set : [1,2,3,5,7,9]\n  set.tailSet(4) //returns set : [5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 738,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSortedSet",
								"id": 698,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.tailSet",
								"id": 640
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-sorted-set.ts",
							"line": 100,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.tailSet",
						"id": 639
					}
				},
				{
					"id": 784,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 785,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "SortedSet.toArray",
								"id": 687
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.toArray",
						"id": 686
					}
				},
				{
					"id": 739,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 740,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //set1 : [1,2,3,4] and set2 : [4,5,6,7]\n  set1.union(set2); //returns a new set : [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 741,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AbstractSet",
										"id": 546,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractSet",
								"id": 546,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractSet.union",
								"id": 557
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-set.ts",
							"line": 44,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractSet.union",
						"id": 557
					},
					"implementationOf": {
						"type": "reference",
						"name": "SortedSet.union",
						"id": 642
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						705
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						700,
						751
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						713,
						716,
						752,
						719,
						754,
						757,
						745,
						760,
						748,
						725,
						786,
						733,
						742,
						763,
						794,
						727,
						765,
						768,
						771,
						779,
						782,
						729,
						736,
						784,
						739
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-sorted-set.ts",
					"line": 4,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 546,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Set",
					"id": 482,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "SortedSet",
					"id": 614,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 803,
			"name": "ArrayList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Resizable-array implementation of the List interface."
			},
			"typeParameter": [
				{
					"id": 804,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 806,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructs an empty list with an initial capacity of ten.\nConstructs an empty list with the specified initial capacity.\nConstructs a list containing the items."
					},
					"signatures": [
						{
							"id": 807,
							"name": "new ArrayList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with an initial capacity of ten."
							},
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 803
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 272
							}
						},
						{
							"id": 808,
							"name": "new ArrayList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an empty list with the specified initial capacity."
							},
							"parameters": [
								{
									"id": 809,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 803
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 272
							}
						},
						{
							"id": 810,
							"name": "new ArrayList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs a list containing the items."
							},
							"parameters": [
								{
									"id": 811,
									"name": "initialCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 812,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 803
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.__constructor",
								"id": 272
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 11,
							"character": 30
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 16,
							"character": 15
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 20,
							"character": 37
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 24,
							"character": 51
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.__constructor",
						"id": 272
					}
				},
				{
					"id": 805,
					"name": "_capacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 11,
							"character": 21
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					}
				},
				{
					"id": 874,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 813,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 814,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 815,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.add",
								"id": 275
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 185
							}
						},
						{
							"id": 816,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.add(4); //[1,2,3,4]\n  list.add(2.5,2); //[1,2,2.5,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 817,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 818,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.add",
								"id": 275
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 33,
							"character": 5
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 41,
							"character": 5
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 42,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.add",
						"id": 275
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 184
					}
				},
				{
					"id": 819,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 820,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 821,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.addAll",
								"id": 281
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 191
							}
						},
						{
							"id": 822,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.addAll([4,5]); //[1,2,3,4,5]\n  list.addAll([2.1,2.2,2.3], 2); //[1,2,2.1,2.2,2.3,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 823,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 824,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractList.addAll",
								"id": 281
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 50,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 58,
							"character": 8
						},
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 59,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractList.addAll",
						"id": 281
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 190
					}
				},
				{
					"id": 875,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 876,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 226
					}
				},
				{
					"id": 834,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 835,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of this ArrayList instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  let newArrayList = arrayList.clone();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "ArrayList",
								"id": 803,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Cloneable.clone",
								"id": 799
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 91,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Cloneable.clone",
						"id": 798
					}
				},
				{
					"id": 877,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 878,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 879,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 229
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 228
					}
				},
				{
					"id": 880,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 881,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 882,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 232
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 231
					}
				},
				{
					"id": 825,
					"name": "ensureCapacity",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 826,
							"name": "ensureCapacity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Increases the capacity of this ArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList has a capacity 10\n  arrayList.ensureCapacity(15);\n  //new capacity is 15\n"
									}
								]
							},
							"parameters": [
								{
									"id": 827,
									"name": "minCapacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 71,
							"character": 16
						}
					]
				},
				{
					"id": 883,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 884,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 885,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 235
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 234
					}
				},
				{
					"id": 909,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 910,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 911,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 912,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 913,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 914,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 915,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 916,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 260
					}
				},
				{
					"id": 840,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 841,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 842,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.get",
								"id": 287
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 197
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.get",
						"id": 287
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 196
					}
				},
				{
					"id": 843,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 844,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 845,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.indexOf",
								"id": 290
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 200
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.indexOf",
						"id": 290
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 199
					}
				},
				{
					"id": 886,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 887,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 238
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 237
					}
				},
				{
					"id": 917,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 918,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 269
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 268
					}
				},
				{
					"id": 846,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 847,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 848,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.lastIndexOf",
								"id": 293
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 203
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.lastIndexOf",
						"id": 293
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 202
					}
				},
				{
					"id": 849,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 850,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator(); //starts at index 0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 851,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.listIterator",
								"id": 296
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 206
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.listIterator",
						"id": 296
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 205
					}
				},
				{
					"id": 888,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 889,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 890,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 240
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 239
					}
				},
				{
					"id": 891,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 892,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 893,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 243
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 242
					}
				},
				{
					"id": 852,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 853,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 854,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeAt",
								"id": 299
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 209
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeAt",
						"id": 299
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 208
					}
				},
				{
					"id": 894,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 895,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 896,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 897,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 898,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 899,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 900,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 901,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 245
					}
				},
				{
					"id": 855,
					"name": "removeRange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 856,
							"name": "removeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,4,5,6]\n  console.log(list.removeRange(1,4)); //[1,5,6]\n  //Output: [2,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 857,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 858,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.removeRange",
								"id": 302
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.removeRange",
						"id": 302
					}
				},
				{
					"id": 828,
					"name": "replaceAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 829,
							"name": "replaceAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces each element of this list with the result of applying the mapping function",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4]\n  arrayList.map((x)=>(x*2));\n  //now arrayList contains [2,4,6,8]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 830,
									"name": "mappingFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 831,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 832,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 833,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/lists/array-list.ts",
													"line": 82,
													"character": 23
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 82,
							"character": 12
						}
					]
				},
				{
					"id": 902,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 903,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 904,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 254
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 253
					}
				},
				{
					"id": 859,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 860,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 861,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 862,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.set",
								"id": 306
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 126,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.set",
						"id": 306
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 211
					}
				},
				{
					"id": 905,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 906,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 256
					}
				},
				{
					"id": 863,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 864,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is considered smaller than y if the compareFn(x,y) is negetive",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 865,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 866,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 867,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 868,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 869,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 141,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.sort",
								"id": 310
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 141,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.sort",
						"id": 310
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 215
					}
				},
				{
					"id": 870,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 871,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 872,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 873,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 270,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractList.subList",
								"id": 317
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 223
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 151,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractList.subList",
						"id": 317
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 222
					}
				},
				{
					"id": 907,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 908,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 259
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 258
					}
				},
				{
					"id": 838,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 839,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the arrayList into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4]\n  console.log(arrayList.toString());\n  //Output\n  //[1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Serializable.toString",
								"id": 802
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 113,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 801
					}
				},
				{
					"id": 836,
					"name": "trimToSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 837,
							"name": "trimToSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trims the capacity of this ArrayList instance to be the list's current size.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //arrayList contains [1,2,3,4,5] and capacity is 10\n  arrayList.trimToSize(); //new capacity is 5\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/lists/array-list.ts",
							"line": 101,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						806
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						805,
						874
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						813,
						819,
						875,
						834,
						877,
						880,
						825,
						883,
						909,
						840,
						843,
						886,
						917,
						846,
						849,
						888,
						891,
						852,
						894,
						855,
						828,
						902,
						859,
						905,
						863,
						870,
						907,
						838,
						836
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/lists/array-list.ts",
					"line": 9,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 182,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Cloneable",
					"id": 796,
					"typeArguments": [
						{
							"type": "reference",
							"name": "ArrayList",
							"id": 803,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "E"
								}
							]
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 800
				}
			]
		},
		{
			"id": 13,
			"name": "Iterator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Used to iterate over Iterable objects"
			},
			"typeParameter": [
				{
					"id": 14,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 17,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 18,
							"name": "new Iterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 19,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13
							}
						},
						{
							"id": 20,
							"name": "new Iterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 21,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 22,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 31
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 9,
							"character": 39
						}
					]
				},
				{
					"id": 16,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 15,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					}
				},
				{
					"id": 23,
					"name": "forEachRemaining",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 24,
							"name": "forEachRemaining",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4], iterator pointer after 2\n  iterator.forEachRemaining(function(item, index) {\n    console.log(item*2);\n  });\n  // Output: 6 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 25,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 27,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 28,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 29,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "classes/iterator.ts",
													"line": 24,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 24,
							"character": 18
						}
					]
				},
				{
					"id": 30,
					"name": "hasNext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 31,
							"name": "hasNext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the iteration has more elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4] iterator pointer after 3.\n  if(iterator.hasNext()) console.log(\"Elements remaining\");\n  //Ouput: Elements remaining\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 37,
							"character": 9
						}
					]
				},
				{
					"id": 32,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the next element in the iteration.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,25,83,48] iterator pointer after 1.\n  console.log((item = iterator.next());\n  //Output 25\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 48,
							"character": 6
						}
					]
				},
				{
					"id": 34,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 35,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from the underlying Iterable the last element returned by this iterator.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,25,83,48] iterator pointer after 1.\n  iterator.next() //returns 25\n  iterator.remove(); //removes 25\n  // now target contains [1,83,48]\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 60,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						17
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16,
						15
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						23,
						30,
						32,
						34
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/iterator.ts",
					"line": 4,
					"character": 21
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ListIterator",
					"id": 36
				}
			]
		},
		{
			"id": 36,
			"name": "ListIterator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Iterator modified to iterate over lists"
			},
			"typeParameter": [
				{
					"id": 37,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 59,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 60,
							"name": "new ListIterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 61,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.__constructor",
								"id": 17
							}
						},
						{
							"id": 62,
							"name": "new ListIterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 63,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 64,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.__constructor",
								"id": 17
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 31
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 9,
							"character": 39
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.__constructor",
						"id": 17
					}
				},
				{
					"id": 58,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator._index",
						"id": 16
					}
				},
				{
					"id": 57,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator._target",
						"id": 15
					}
				},
				{
					"id": 38,
					"name": "lastIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 6,
							"character": 21
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 39,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 40,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element into the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  iterator.add(25);\n  //new list contains [1,5,11,25,26]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 41,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 15,
							"character": 5
						}
					]
				},
				{
					"id": 65,
					"name": "forEachRemaining",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 66,
							"name": "forEachRemaining",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4], iterator pointer after 2\n  iterator.forEachRemaining(function(item, index) {\n    console.log(item*2);\n  });\n  // Output: 6 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 67,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 68,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 69,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 70,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 71,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "classes/iterator.ts",
													"line": 24,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.forEachRemaining",
								"id": 23
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 24,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.forEachRemaining",
						"id": 23
					}
				},
				{
					"id": 72,
					"name": "hasNext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 73,
							"name": "hasNext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the iteration has more elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4] iterator pointer after 3.\n  if(iterator.hasNext()) console.log(\"Elements remaining\");\n  //Ouput: Elements remaining\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.hasNext",
								"id": 30
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 37,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.hasNext",
						"id": 30
					}
				},
				{
					"id": 44,
					"name": "hasPrevious",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 45,
							"name": "hasPrevious",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this list iterator has more elements when traversing the list in the reverse direction.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer before 1\n  console.log(iterator.hasPrevious());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 42,
							"character": 13
						}
					]
				},
				{
					"id": 42,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the next element in the iteration.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  console.log(iterator.next());\n  //Output: 11\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterator.next",
								"id": 32
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 27,
							"character": 6
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterator.next",
						"id": 32
					}
				},
				{
					"id": 48,
					"name": "nextIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "nextIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the element that would be returned by a subsequent call to next().",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.nextIndex());\n  //Output: 3\n  iterator.next();\n  console.log(iterator.nextIndex());\n  //Output: -1\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 71,
							"character": 11
						}
					]
				},
				{
					"id": 46,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 47,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the previous element in the list and moves the cursor position backwards.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.previous());\n  //Output: 11\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 53,
							"character": 10
						}
					]
				},
				{
					"id": 50,
					"name": "previousIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 51,
							"name": "previousIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the element that would be returned by a subsequent call to previous().",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.previousIndex());\n  //Output: 2\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 82,
							"character": 15
						}
					]
				},
				{
					"id": 55,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 56,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from the underlying Iterable the last element returned by this iterator.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  iterator.previous(); //returns 5\n  iterator.remove(); //removes 5\n  //now target contains [1,11,26]\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterator.remove",
								"id": 34
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 108,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterator.remove",
						"id": 34
					}
				},
				{
					"id": 52,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 53,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the last element returned by next() or previous() with the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  iterator.next(); //returns 11\n  iterator.set(15);\n  //now target contains [1,5,15,26]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 54,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 94,
							"character": 5
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						59
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						58,
						57,
						38
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						39,
						65,
						72,
						44,
						42,
						48,
						46,
						50,
						55,
						52
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/list-iterator.ts",
					"line": 4,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Iterator",
					"id": 13,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 919,
			"name": "PriorityQueue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An unbounded priority queue. The elements of the priority queue are ordered according to the compare function provided at queue construction time."
			},
			"typeParameter": [
				{
					"id": 920,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 926,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 927,
							"name": "new PriorityQueue",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 928,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 929,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 930,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 931,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 932,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/queues/priority-queue.ts",
													"line": 10,
													"character": 26
												}
											]
										}
									}
								},
								{
									"id": 933,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PriorityQueue",
								"id": 919
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 129
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 8,
							"character": 44
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 129
					}
				},
				{
					"id": 921,
					"name": "_comparator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 8,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 922,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 923,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 924,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										},
										{
											"id": 925,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "ds/queues/priority-queue.ts",
									"line": 8,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 952,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 934,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 935,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified item into this priority queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue containes [1,8,12] (compareFn designed for ascending order)\n  queue.add(6); //[1,6,8,12]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 936,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.add",
								"id": 369
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 22,
							"character": 7
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 132
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.add",
						"id": 368
					}
				},
				{
					"id": 937,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 938,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all items of an array into this priority queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue containes [1,8,12] (compareFn designed for ascending order)\n  queue.addAll([6,10,15]); //[1,6,8,10,12,15]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 939,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.addAll",
								"id": 376
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 36,
							"character": 10
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 135
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.addAll",
						"id": 375
					}
				},
				{
					"id": 953,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 954,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.clear",
								"id": 379
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.clear",
						"id": 378
					}
				},
				{
					"id": 940,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 941,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  queue.comparator(); //returns a function\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 942,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 943,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 944,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 945,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "ds/queues/priority-queue.ts",
											"line": 49,
											"character": 17
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 49,
							"character": 14
						}
					]
				},
				{
					"id": 955,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 956,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 957,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.contains",
								"id": 381
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.contains",
						"id": 380
					}
				},
				{
					"id": 958,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 959,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 960,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.containsAll",
								"id": 384
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.containsAll",
						"id": 383
					}
				},
				{
					"id": 948,
					"name": "element",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 949,
							"name": "element",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves, but does not remove, the head of this queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractQueue.element",
								"id": 424
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.element",
								"id": 372
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 15,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractQueue.element",
						"id": 424
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.element",
						"id": 371
					}
				},
				{
					"id": 961,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 962,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 963,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.equals",
								"id": 387
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.equals",
						"id": 386
					}
				},
				{
					"id": 987,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 988,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 989,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 990,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 991,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 992,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 993,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 994,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.forEach",
						"id": 412
					}
				},
				{
					"id": 964,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 965,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.isEmpty",
								"id": 390
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.isEmpty",
						"id": 389
					}
				},
				{
					"id": 995,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 996,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.iterator",
								"id": 421
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.iterator",
						"id": 420
					}
				},
				{
					"id": 950,
					"name": "poll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 951,
							"name": "poll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves and removes the head of this queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue has elements [1,2,3,4]\n  console.log(queue.element());\n  //Output: 1 and queue now has elements [2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractQueue.poll",
								"id": 426
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.poll",
								"id": 374
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-queue.ts",
							"line": 26,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractQueue.poll",
						"id": 426
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.poll",
						"id": 373
					}
				},
				{
					"id": 966,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 967,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 968,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.remove",
								"id": 392
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.remove",
						"id": 391
					}
				},
				{
					"id": 969,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 970,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 971,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.removeAll",
								"id": 395
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeAll",
						"id": 394
					}
				},
				{
					"id": 972,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 973,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 974,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 975,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 976,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 977,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 978,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 979,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.removeIf",
						"id": 397
					}
				},
				{
					"id": 980,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 981,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 982,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.retainAll",
								"id": 406
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.retainAll",
						"id": 405
					}
				},
				{
					"id": 983,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 984,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.size",
								"id": 409
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.size",
						"id": 408
					}
				},
				{
					"id": 985,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 986,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "Queue.toArray",
								"id": 411
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "Queue.toArray",
						"id": 410
					}
				},
				{
					"id": 946,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 947,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the queue into a JSON String",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.toString());\n  //Output\n  //[1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Serializable.toString",
								"id": 802
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queues/priority-queue.ts",
							"line": 61,
							"character": 12
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Serializable.toString",
						"id": 801
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						926
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						921,
						952
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						934,
						937,
						953,
						940,
						955,
						958,
						948,
						961,
						987,
						964,
						995,
						950,
						966,
						969,
						972,
						980,
						983,
						985,
						946
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/queues/priority-queue.ts",
					"line": 7,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 422,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Queue",
					"id": 366,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "Serializable",
					"id": 800
				}
			]
		},
		{
			"id": 997,
			"name": "Stack",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Create a Stack (LIFO) datastructure."
			},
			"typeParameter": [
				{
					"id": 998,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 1000,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1001,
							"name": "new Stack",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1002,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack",
								"id": 997
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 4,
							"character": 21
						}
					]
				},
				{
					"id": 999,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 4,
							"character": 16
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "T"
					}
				},
				{
					"id": 1003,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Number of elements in stack",
						"tags": [
							{
								"tag": "example",
								"text": "\n  //stack contains [1,2,3,4]\n  console.log(stack.height);\n  //Output: 4\n"
							}
						]
					},
					"getSignature": [
						{
							"id": 1004,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Number of elements in stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4]\n  console.log(stack.height);\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 17,
							"character": 12
						}
					]
				},
				{
					"id": 1010,
					"name": "peek",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1011,
							"name": "peek",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return top of the stack (does not pop)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,5,6]\n  console.log(stack.peek());\n  //Output: 6 (stack does not change)\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 53,
							"character": 6
						}
					]
				},
				{
					"id": 1008,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1009,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pop top of the stack and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,5,6,7]\n  console.log(stack.pop());\n  //Output: 7\n  //now stack contains [1,2,3,4,5,6]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 42,
							"character": 5
						}
					]
				},
				{
					"id": 1005,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1006,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Push item/items to the top of the stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4]\n  stack.push(5);\n  //now stack contains [1,2,3,4,5]\n  stack.push(6,7);\n  //now stack contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1007,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 30,
							"character": 6
						}
					]
				},
				{
					"id": 1012,
					"name": "search",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1013,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return first index (from top of the stack) of an item in stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,3,5]\n  console.log(stack.search(3));\n  //Output: 4\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1014,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 64,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1000
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						999
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1003
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1010,
						1008,
						1005,
						1012
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/stack.ts",
					"line": 3,
					"character": 18
				}
			]
		},
		{
			"id": 796,
			"name": "Cloneable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Classes that implements this interface must have a clone method."
			},
			"typeParameter": [
				{
					"id": 797,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 798,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 799,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "create a copy of the current object and return"
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/cloneable.ts",
							"line": 6,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						798
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/cloneable.ts",
					"line": 2,
					"character": 26
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 803
				}
			]
		},
		{
			"id": 74,
			"name": "Collection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Collection is a set of elements of same type."
			},
			"typeParameter": [
				{
					"id": 75,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 76,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 77,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to collection"
							},
							"parameters": [
								{
									"id": 78,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 9,
							"character": 5
						}
					]
				},
				{
					"id": 79,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 80,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to collection"
							},
							"parameters": [
								{
									"id": 81,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 13,
							"character": 8
						}
					]
				},
				{
					"id": 82,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					]
				},
				{
					"id": 84,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 85,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 86,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					]
				},
				{
					"id": 87,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 88,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 89,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					]
				},
				{
					"id": 90,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 91,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 92,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					]
				},
				{
					"id": 116,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 117,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 118,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 119,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 120,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 121,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 122,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 123,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					}
				},
				{
					"id": 93,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 94,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					]
				},
				{
					"id": 124,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 125,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 95,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 96,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 97,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					]
				},
				{
					"id": 98,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 99,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 100,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					]
				},
				{
					"id": 101,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 102,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 103,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 104,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 105,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 106,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 107,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 108,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					]
				},
				{
					"id": 109,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 110,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 111,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					]
				},
				{
					"id": 112,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 113,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					]
				},
				{
					"id": 114,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 115,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						76,
						79,
						82,
						84,
						87,
						90,
						116,
						93,
						124,
						95,
						98,
						101,
						109,
						112,
						114
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/collection.ts",
					"line": 5,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Iterable",
					"id": 1,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "List",
					"id": 182
				},
				{
					"type": "reference",
					"name": "Queue",
					"id": 366
				},
				{
					"type": "reference",
					"name": "Set",
					"id": 482
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 126
				},
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270
				},
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 422
				},
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 546
				},
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 698
				},
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 803
				},
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 919
				}
			]
		},
		{
			"id": 1,
			"name": "Iterable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Anything whose elements can be iterated over."
			},
			"typeParameter": [
				{
					"id": 2,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 3,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 4,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Do an action for each item in this object"
							},
							"parameters": [
								{
									"id": 5,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 7,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 8,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 9,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 10,
															"name": "iterable",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Iterable",
																"id": 1,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/iterable.ts",
													"line": 8,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 8,
							"character": 9
						}
					]
				},
				{
					"id": 11,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 12,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						3,
						11
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/iterable.ts",
					"line": 4,
					"character": 25
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74
				}
			]
		},
		{
			"id": 182,
			"name": "List",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Sub interface of Collection. List has much more functionalities than a collection."
			},
			"typeParameter": [
				{
					"id": 183,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 184,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 185,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 186,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 76
							}
						},
						{
							"id": 187,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list"
							},
							"parameters": [
								{
									"id": 188,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 189,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 76
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 11,
							"character": 5
						},
						{
							"fileName": "interfaces/list.ts",
							"line": 15,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 76
					}
				},
				{
					"id": 190,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 191,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 192,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 79
							}
						},
						{
							"id": 193,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position."
							},
							"parameters": [
								{
									"id": 194,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 195,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 79
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 19,
							"character": 8
						},
						{
							"fileName": "interfaces/list.ts",
							"line": 23,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 79
					}
				},
				{
					"id": 226,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 227,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 82
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 228,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 229,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 230,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 84
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 231,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 232,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 233,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 87
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 234,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 236,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 260,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 261,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 262,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 263,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 264,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 265,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 266,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 267,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 196,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 197,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list"
							},
							"parameters": [
								{
									"id": 198,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 27,
							"character": 5
						}
					]
				},
				{
					"id": 199,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 200,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of first occurrence of the element."
							},
							"parameters": [
								{
									"id": 201,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 31,
							"character": 9
						}
					]
				},
				{
					"id": 237,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 238,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 93
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 268,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 269,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 202,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 203,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of last occurrence of the element."
							},
							"parameters": [
								{
									"id": 204,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 35,
							"character": 13
						}
					]
				},
				{
					"id": 205,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 206,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list starting from the 'index'"
							},
							"parameters": [
								{
									"id": 207,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 39,
							"character": 14
						}
					]
				},
				{
					"id": 239,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 240,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 241,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 95
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 242,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 243,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 244,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 208,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 209,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list."
							},
							"parameters": [
								{
									"id": 210,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 43,
							"character": 10
						}
					]
				},
				{
					"id": 245,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 246,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 247,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 248,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 249,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 250,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 251,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 252,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 101
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 253,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 254,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 255,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 109
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 211,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 212,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element"
							},
							"parameters": [
								{
									"id": 213,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 214,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 47,
							"character": 5
						}
					]
				},
				{
					"id": 256,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 257,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 112
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 215,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 216,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn"
							},
							"parameters": [
								{
									"id": 217,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 219,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 220,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 221,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/list.ts",
													"line": 51,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 51,
							"character": 6
						}
					]
				},
				{
					"id": 222,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 223,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive."
							},
							"parameters": [
								{
									"id": 224,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 225,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 182,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 55,
							"character": 9
						}
					]
				},
				{
					"id": 258,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 114
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						184,
						190,
						226,
						228,
						231,
						234,
						260,
						196,
						199,
						237,
						268,
						202,
						205,
						239,
						242,
						208,
						245,
						253,
						211,
						256,
						215,
						222,
						258
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/list.ts",
					"line": 7,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270
				},
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 803
				}
			]
		},
		{
			"id": 366,
			"name": "Queue",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 367,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 368,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 369,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 370,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 76
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/queue.ts",
							"line": 4,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 76
					}
				},
				{
					"id": 375,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 376,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to collection"
							},
							"parameters": [
								{
									"id": 377,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 79
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 13,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 79
					}
				},
				{
					"id": 378,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 379,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 82
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 380,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 381,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 382,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 84
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 383,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 384,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 385,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 87
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 371,
					"name": "element",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 372,
							"name": "element",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/queue.ts",
							"line": 5,
							"character": 9
						}
					]
				},
				{
					"id": 386,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 387,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 388,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 412,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 413,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 414,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 415,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 416,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 417,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 418,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 419,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 389,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 390,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 93
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 420,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 421,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 373,
					"name": "poll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 374,
							"name": "poll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/queue.ts",
							"line": 6,
							"character": 6
						}
					]
				},
				{
					"id": 391,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 392,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 393,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 95
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 394,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 395,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 396,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 397,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 398,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 399,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 400,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 401,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 402,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 403,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 404,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 101
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 405,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 406,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 407,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 109
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 408,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 409,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 112
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 410,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 411,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 114
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						368,
						375,
						378,
						380,
						383,
						371,
						386,
						412,
						389,
						420,
						373,
						391,
						394,
						397,
						405,
						408,
						410
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/queue.ts",
					"line": 3,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractQueue",
					"id": 422
				},
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 919
				}
			]
		},
		{
			"id": 800,
			"name": "Serializable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Implementing this interface means that the class overrides Object's toString method to return the object's JSON String"
			},
			"children": [
				{
					"id": 801,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 802,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return this object's corresponding JSON String"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/serializable.ts",
							"line": 8,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						801
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/serializable.ts",
					"line": 4,
					"character": 29
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "ArrayList",
					"id": 803
				},
				{
					"type": "reference",
					"name": "PriorityQueue",
					"id": 919
				}
			]
		},
		{
			"id": 482,
			"name": "Set",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A collection that contains no duplicate elements"
			},
			"typeParameter": [
				{
					"id": 483,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 484,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 485,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present"
							},
							"parameters": [
								{
									"id": 486,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 76
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 10,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 76
					}
				},
				{
					"id": 487,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 488,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds all of the elements in the specified array to this set if they're not already present"
							},
							"parameters": [
								{
									"id": 489,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 79
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 14,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 79
					}
				},
				{
					"id": 502,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 503,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 82
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 504,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 505,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 506,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 84
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 507,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 508,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 509,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 87
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 496,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 497,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set."
							},
							"parameters": [
								{
									"id": 498,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 26,
							"character": 12
						}
					]
				},
				{
					"id": 510,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 511,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 512,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 499,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 500,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified."
							},
							"parameters": [
								{
									"id": 501,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 30,
							"character": 11
						}
					]
				},
				{
					"id": 536,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 537,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 538,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 539,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 540,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 541,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 542,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 543,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 493,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 494,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified"
							},
							"parameters": [
								{
									"id": 495,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 22,
							"character": 14
						}
					]
				},
				{
					"id": 513,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 514,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 93
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 544,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 545,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 515,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 516,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 517,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 95
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 518,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 519,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 520,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 521,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 522,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 523,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 524,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 525,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 526,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 527,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 528,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 101
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 529,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 530,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 531,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 109
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 532,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 533,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 112
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 534,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 535,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 114
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				},
				{
					"id": 490,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 491,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified"
							},
							"parameters": [
								{
									"id": 492,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 18,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						484,
						487,
						502,
						504,
						507,
						496,
						510,
						499,
						536,
						493,
						513,
						544,
						515,
						518,
						521,
						529,
						532,
						534,
						490
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/set.ts",
					"line": 6,
					"character": 20
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "SortedSet",
					"id": 614
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractSet",
					"id": 546
				},
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 698
				}
			]
		},
		{
			"id": 614,
			"name": "SortedSet",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A Set that further provides a total ordering on its elements. The elements are ordered using the compare function typically provided at sorted set creation time."
			},
			"typeParameter": [
				{
					"id": 615,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 616,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 617,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the specified element to this set if it is not already present"
							},
							"parameters": [
								{
									"id": 618,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Set.add",
								"id": 484
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 10,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Set.add",
						"id": 484
					}
				},
				{
					"id": 619,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 620,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds all of the elements in the specified array to this set if they're not already present"
							},
							"parameters": [
								{
									"id": 621,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Set.addAll",
								"id": 487
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 14,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Set.addAll",
						"id": 487
					}
				},
				{
					"id": 654,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 655,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 82
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 622,
					"name": "comparator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 623,
							"name": "comparator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the compare function used to order the elements in this set"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 624,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 625,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 626,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												},
												{
													"id": 627,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "interfaces/sorted-set.ts",
											"line": 18,
											"character": 15
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 18,
							"character": 12
						}
					]
				},
				{
					"id": 656,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 657,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 658,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 84
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 659,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 660,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 661,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 87
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 648,
					"name": "difference",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 649,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by subtracting the specified set from this set."
							},
							"parameters": [
								{
									"id": 650,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.difference",
								"id": 496
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 26,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.difference",
						"id": 496
					}
				},
				{
					"id": 662,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 663,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 664,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 651,
					"name": "exclusion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 652,
							"name": "exclusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by exclusion of this set and the set specified."
							},
							"parameters": [
								{
									"id": 653,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.exclusion",
								"id": 499
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 30,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.exclusion",
						"id": 499
					}
				},
				{
					"id": 628,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 629,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first (lowest) element currently in this set."
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 22,
							"character": 7
						}
					]
				},
				{
					"id": 688,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 689,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 690,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 691,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 692,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 693,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 694,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 695,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 630,
					"name": "headSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 631,
							"name": "headSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are strictly less than toElement."
							},
							"parameters": [
								{
									"id": 632,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SortedSet",
								"id": 614,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 26,
							"character": 9
						}
					]
				},
				{
					"id": 645,
					"name": "intersection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 646,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by intersection of this set and the set specified"
							},
							"parameters": [
								{
									"id": 647,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.intersection",
								"id": 493
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 22,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.intersection",
						"id": 493
					}
				},
				{
					"id": 665,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 666,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 93
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 696,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 697,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 633,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 634,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the last (highest) element currently in this set."
							},
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 30,
							"character": 6
						}
					]
				},
				{
					"id": 667,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 668,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 669,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 95
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 670,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 671,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 672,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 673,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 674,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 675,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 676,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 677,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 678,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 679,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 680,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 101
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 681,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 682,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 683,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 109
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 684,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 685,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 112
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 635,
					"name": "subSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 636,
							"name": "subSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive."
							},
							"parameters": [
								{
									"id": 637,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 638,
									"name": "toItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SortedSet",
								"id": 614,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 34,
							"character": 8
						}
					]
				},
				{
					"id": 639,
					"name": "tailSet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 640,
							"name": "tailSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this set whose elements are greater than or equal to fromElement."
							},
							"parameters": [
								{
									"id": 641,
									"name": "fromItem",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SortedSet",
								"id": 614,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/sorted-set.ts",
							"line": 38,
							"character": 9
						}
					]
				},
				{
					"id": 686,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 687,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 114
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				},
				{
					"id": 642,
					"name": "union",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 643,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new set created by union of this set and the set specified"
							},
							"parameters": [
								{
									"id": 644,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Set",
										"id": 482,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"id": 482,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Set.union",
								"id": 490
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/set.ts",
							"line": 18,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Set.union",
						"id": 490
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						616,
						619,
						654,
						622,
						656,
						659,
						648,
						662,
						651,
						628,
						688,
						630,
						645,
						665,
						696,
						633,
						667,
						670,
						673,
						681,
						684,
						635,
						639,
						686,
						642
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/sorted-set.ts",
					"line": 6,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Set",
					"id": 482,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractSortedSet",
					"id": 698
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				126,
				270,
				422,
				546,
				698,
				803,
				13,
				36,
				919,
				997
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				796,
				74,
				1,
				182,
				366,
				800,
				482,
				614
			]
		}
	]
}