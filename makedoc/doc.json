{
	"id": 0,
	"name": "js-datastructure",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 126,
			"name": "AbstractCollection",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract implementation of Collection interface"
			},
			"typeParameter": [
				{
					"id": 127,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 129,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 130,
							"name": "new AbstractCollection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 131,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractCollection",
								"id": 126
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 28
						}
					]
				},
				{
					"id": 128,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "T"
					},
					"defaultValue": " []"
				},
				{
					"id": 132,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 133,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.add(5);\n  //now collection contains [1,2,3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 134,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.add",
								"id": 77
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 21,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.add",
						"id": 76
					}
				},
				{
					"id": 135,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4,5]\n  collection.addAll([6,7]);\n  //now collection contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 137,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 80
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 32,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 79
					}
				},
				{
					"id": 138,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 139,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 83
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 140,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 141,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 142,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 85
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 143,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 144,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 145,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 88
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 146,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 147,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 148,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 91
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 172,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 173,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 175,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 176,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 177,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 178,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 179,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 149,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 150,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 180,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 181,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.iterator",
								"id": 125
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.iterator",
						"id": 124
					}
				},
				{
					"id": 151,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 152,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 153,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 96
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 154,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 155,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 156,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 99
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 157,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 158,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 159,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 160,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 161,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 162,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 163,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 164,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 165,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 166,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 167,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 110
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 168,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 169,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.size",
								"id": 113
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 170,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 171,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 115
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						129
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						128
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						132,
						135,
						138,
						140,
						143,
						146,
						172,
						149,
						180,
						151,
						154,
						157,
						165,
						168,
						170
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-collection.ts",
					"line": 7,
					"character": 40
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			]
		},
		{
			"id": 270,
			"name": "AbstractList",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An abstract implementation of List interface"
			},
			"typeParameter": [
				{
					"id": 271,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 272,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 273,
							"name": "new AbstractList",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 274,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 270
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.__constructor",
								"id": 129
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 8,
							"character": 78
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.__constructor",
						"id": 129
					}
				},
				{
					"id": 317,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"defaultValue": " []",
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection._store",
						"id": 128
					}
				},
				{
					"id": 275,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 276,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 277,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 185
							}
						},
						{
							"id": 278,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.add(4); //[1,2,3,4]\n  list.add(2.5,2); //[1,2,2.5,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 279,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 280,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.add",
								"id": 132
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.add",
								"id": 187
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 17,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 25,
							"character": 5
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 26,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.add",
						"id": 132
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.add",
						"id": 184
					}
				},
				{
					"id": 281,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 282,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 283,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 191
							}
						},
						{
							"id": 284,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  list.addAll([4,5]); //[1,2,3,4,5]\n  list.addAll([2.1,2.2,2.3], 2); //[1,2,2.1,2.2,2.3,3,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 285,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 286,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "AbstractCollection.addAll",
								"id": 135
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.addAll",
								"id": 193
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 38,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 46,
							"character": 8
						},
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 47,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "AbstractCollection.addAll",
						"id": 135
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.addAll",
						"id": 190
					}
				},
				{
					"id": 318,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 319,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all the elements",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.clear();\n  //now collection contains []\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.clear",
								"id": 138
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.clear",
								"id": 227
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 47,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.clear",
						"id": 138
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.clear",
						"id": 226
					}
				},
				{
					"id": 320,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 321,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains(3));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 322,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.contains",
								"id": 140
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.contains",
								"id": 229
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 58,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.contains",
						"id": 140
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.contains",
						"id": 228
					}
				},
				{
					"id": 323,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 324,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.contains([1,2,4]));\n  //Output: false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 325,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.containsAll",
								"id": 143
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.containsAll",
								"id": 232
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 71,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.containsAll",
						"id": 143
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.containsAll",
						"id": 231
					}
				},
				{
					"id": 326,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 327,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection1 contains [1,2,3] and collection2 contains [1,2,3]\n  console.log(collection1.equals(collection2));\n  //Output: true\n"
									}
								]
							},
							"parameters": [
								{
									"id": 328,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.equals",
								"id": 146
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.equals",
								"id": 235
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 85,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.equals",
						"id": 146
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.equals",
						"id": 234
					}
				},
				{
					"id": 352,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 353,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.forEach(function(item) {\n    console.log(item * 4);\n  });\n  //Output: 4 8 12 16\n"
									}
								]
							},
							"parameters": [
								{
									"id": 354,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 355,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 356,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 357,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 358,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 359,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 198,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.forEach",
								"id": 172
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 198,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.forEach",
						"id": 172
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.forEach",
						"id": 260
					}
				},
				{
					"id": 287,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 288,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.get(2));\n  //Output: 3\n"
									}
								]
							},
							"parameters": [
								{
									"id": 289,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.get",
								"id": 197
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 63,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.get",
						"id": 196
					}
				},
				{
					"id": 290,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 291,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3,2,4]\n  console.log(list.indexOf(2));\n  //Output: 1\n"
									}
								]
							},
							"parameters": [
								{
									"id": 292,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.indexOf",
								"id": 200
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 74,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.indexOf",
						"id": 199
					}
				},
				{
					"id": 329,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 330,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  console.log(collection.isEmpty());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.isEmpty",
								"id": 149
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.isEmpty",
								"id": 238
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 106,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.isEmpty",
						"id": 149
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.isEmpty",
						"id": 237
					}
				},
				{
					"id": 360,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 361,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an iterator for the collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = collection.iterator(); //returns an Iterator for the collection\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.iterator",
								"id": 180
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.iterator",
								"id": 269
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 209,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.iterator",
						"id": 180
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.iterator",
						"id": 268
					}
				},
				{
					"id": 293,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 294,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of last occurrence of the element.\n  //list contains [1,2,3,2,4]\n  console.log(list.lastIndexOf(2));\n  //Output: 3"
							},
							"parameters": [
								{
									"id": 295,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.lastIndexOf",
								"id": 203
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 84,
							"character": 13
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.lastIndexOf",
						"id": 202
					}
				},
				{
					"id": 296,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 297,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var listIterator = list.listIterator();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 298,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.listIterator",
								"id": 206
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 93,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.listIterator",
						"id": 205
					}
				},
				{
					"id": 331,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 332,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3]\n  collection.remove(3);\n  //now collection contains [1,2]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 333,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.remove",
								"id": 151
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.remove",
								"id": 240
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 117,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.remove",
						"id": 151
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.remove",
						"id": 239
					}
				},
				{
					"id": 334,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.removeAll([1,3,5,7]);\n  //now collection contains [2,4]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 336,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeAll",
								"id": 154
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAll",
								"id": 243
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 129,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeAll",
						"id": 154
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAll",
						"id": 242
					}
				},
				{
					"id": 299,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 300,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.removeAt(1)); //[1,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 301,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.removeAt",
								"id": 209
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 104,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.removeAt",
						"id": 208
					}
				},
				{
					"id": 337,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 338,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n//collection contains [1,2,3,4,5,6,7,8,9]\ncollection.removeIf(function(x) {\n  return (x%2==0);\n}); //removing even numbers\n//now collection contains [1,3,5,7,9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 339,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 340,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 341,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 342,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 343,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 344,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-collection.ts",
													"line": 146,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.removeIf",
								"id": 157
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 146,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.removeIf",
						"id": 157
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.removeIf",
						"id": 245
					}
				},
				{
					"id": 345,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 346,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  collection.retainAll([1,3,5,7]);\n  //now collection contains [1,3]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 347,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.retainAll",
								"id": 165
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.retainAll",
								"id": 254
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 163,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.retainAll",
						"id": 165
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.retainAll",
						"id": 253
					}
				},
				{
					"id": 302,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 303,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,2,3]\n  console.log(list.set(1,2.5)); //[1,2.5,3]\n  //Output: 2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 304,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 305,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "E"
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.set",
								"id": 212
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 115,
							"character": 5
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.set",
						"id": 211
					}
				},
				{
					"id": 348,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 349,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.size());\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.size",
								"id": 168
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.size",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 174,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.size",
						"id": 168
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.size",
						"id": 256
					}
				},
				{
					"id": 306,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 307,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn.\ncompareFn is a function which should return a number value (-ve, zero, or +ve).\nx is sorted as the lowest value if compareFn(x,y) is the lowest.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.sort(function(x,y) {\n    return x-y;\n  }); // [1, 2, 3, 6, 7, 8, 9, 11]\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 308,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 309,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 310,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 311,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 312,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/abstract/abstract-list.ts",
													"line": 130,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 130,
							"character": 6
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.sort",
						"id": 215
					}
				},
				{
					"id": 313,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 314,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //list contains [1,8,6,2,7,3,9,11]\n  list.subList(2,7); // returns a list containing [6, 2, 7, 3, 9]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 315,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 316,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractList",
								"id": 270,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.subList",
								"id": 223
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-list.ts",
							"line": 140,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "List.subList",
						"id": 222
					}
				},
				{
					"id": 350,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 351,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //collection contains [1,2,3,4]\n  console.log(collection.toArray());\n  //Output: [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractCollection.toArray",
								"id": 170
							},
							"implementationOf": {
								"type": "reference",
								"name": "List.toArray",
								"id": 259
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/abstract/abstract-collection.ts",
							"line": 185,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "AbstractCollection.toArray",
						"id": 170
					},
					"implementationOf": {
						"type": "reference",
						"name": "List.toArray",
						"id": 258
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						272
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						317
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						275,
						281,
						318,
						320,
						323,
						326,
						352,
						287,
						290,
						329,
						360,
						293,
						296,
						331,
						334,
						299,
						337,
						345,
						302,
						348,
						306,
						313,
						350
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/abstract/abstract-list.ts",
					"line": 8,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 126,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				},
				{
					"type": "reference",
					"name": "List",
					"id": 182,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 13,
			"name": "Iterator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Used to iterate over Iterable objects"
			},
			"typeParameter": [
				{
					"id": 14,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 17,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 18,
							"name": "new Iterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 19,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13
							}
						},
						{
							"id": 20,
							"name": "new Iterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 21,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 22,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 31
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 9,
							"character": 39
						}
					]
				},
				{
					"id": 16,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 15,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					}
				},
				{
					"id": 23,
					"name": "forEachRemaining",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 24,
							"name": "forEachRemaining",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4], iterator pointer after 2\n  iterator.forEachRemaining(function(item, index) {\n    console.log(item*2);\n  });\n  // Output: 6 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 25,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 27,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 28,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 29,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "classes/iterator.ts",
													"line": 24,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 24,
							"character": 18
						}
					]
				},
				{
					"id": 30,
					"name": "hasNext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 31,
							"name": "hasNext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the iteration has more elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4] iterator pointer after 3.\n  if(iterator.hasNext()) console.log(\"Elements remaining\");\n  //Ouput: Elements remaining\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 37,
							"character": 9
						}
					]
				},
				{
					"id": 32,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the next element in the iteration.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,25,83,48] iterator pointer after 1.\n  console.log((item = iterator.next());\n  //Output 25\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 48,
							"character": 6
						}
					]
				},
				{
					"id": 34,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 35,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from the underlying Iterable the last element returned by this iterator.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,25,83,48] iterator pointer after 1.\n  iterator.next() //returns 25\n  iterator.remove(); //removes 25\n  // now target contains [1,83,48]\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 60,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						17
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16,
						15
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						23,
						30,
						32,
						34
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/iterator.ts",
					"line": 4,
					"character": 21
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ListIterator",
					"id": 36
				}
			]
		},
		{
			"id": 36,
			"name": "ListIterator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Iterator modified to iterate over lists"
			},
			"typeParameter": [
				{
					"id": 37,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 59,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 60,
							"name": "new ListIterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 61,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.__constructor",
								"id": 17
							}
						},
						{
							"id": 62,
							"name": "new ListIterator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 63,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 64,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.__constructor",
								"id": 17
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 31
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 8,
							"character": 25
						},
						{
							"fileName": "classes/iterator.ts",
							"line": 9,
							"character": 39
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.__constructor",
						"id": 17
					}
				},
				{
					"id": 58,
					"name": "_index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 6,
							"character": 18
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator._index",
						"id": 16
					}
				},
				{
					"id": 57,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "E"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator._target",
						"id": 15
					}
				},
				{
					"id": 38,
					"name": "lastIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 6,
							"character": 21
						}
					],
					"type": {
						"type": "instrinct",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 39,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 40,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element into the list.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  iterator.add(25);\n  //new list contains [1,5,11,25,26]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 41,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 15,
							"character": 5
						}
					]
				},
				{
					"id": 65,
					"name": "forEachRemaining",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 66,
							"name": "forEachRemaining",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs the given action for each remaining element until all elements have been processed or the action throws an exception.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4], iterator pointer after 2\n  iterator.forEachRemaining(function(item, index) {\n    console.log(item*2);\n  });\n  // Output: 6 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 67,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 68,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 69,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 70,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 71,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "classes/iterator.ts",
													"line": 24,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.forEachRemaining",
								"id": 23
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 24,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.forEachRemaining",
						"id": 23
					}
				},
				{
					"id": 72,
					"name": "hasNext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 73,
							"name": "hasNext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the iteration has more elements.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,2,3,4] iterator pointer after 3.\n  if(iterator.hasNext()) console.log(\"Elements remaining\");\n  //Ouput: Elements remaining\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterator.hasNext",
								"id": 30
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/iterator.ts",
							"line": 37,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterator.hasNext",
						"id": 30
					}
				},
				{
					"id": 44,
					"name": "hasPrevious",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 45,
							"name": "hasPrevious",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this list iterator has more elements when traversing the list in the reverse direction.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer before 1\n  console.log(iterator.hasPrevious());\n  //Output: false\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 42,
							"character": 13
						}
					]
				},
				{
					"id": 42,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the next element in the iteration.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  console.log(iterator.next());\n  //Output: 11\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterator.next",
								"id": 32
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 27,
							"character": 6
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterator.next",
						"id": 32
					}
				},
				{
					"id": 48,
					"name": "nextIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "nextIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the element that would be returned by a subsequent call to next().",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.nextIndex());\n  //Output: 3\n  iterator.next();\n  console.log(iterator.nextIndex());\n  //Output: -1\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 71,
							"character": 11
						}
					]
				},
				{
					"id": 46,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 47,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the previous element in the list and moves the cursor position backwards.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.previous());\n  //Output: 11\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 53,
							"character": 10
						}
					]
				},
				{
					"id": 50,
					"name": "previousIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 51,
							"name": "previousIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the element that would be returned by a subsequent call to previous().",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 11 and 26\n  console.log(iterator.previousIndex());\n  //Output: 2\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 82,
							"character": 15
						}
					]
				},
				{
					"id": 55,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 56,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes from the underlying Iterable the last element returned by this iterator.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  iterator.previous(); //returns 5\n  iterator.remove(); //removes 5\n  //now target contains [1,11,26]\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterator.remove",
								"id": 34
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 108,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterator.remove",
						"id": 34
					}
				},
				{
					"id": 52,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 53,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the last element returned by next() or previous() with the specified element.",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //target contains [1,5,11,26] and iterator pointer between 5 and 11\n  iterator.next(); //returns 11\n  iterator.set(15);\n  //now target contains [1,5,15,26]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 54,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "classes/list-iterator.ts",
							"line": 94,
							"character": 5
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						59
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						58,
						57,
						38
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						39,
						65,
						72,
						44,
						42,
						48,
						46,
						50,
						55,
						52
					]
				}
			],
			"sources": [
				{
					"fileName": "classes/list-iterator.ts",
					"line": 4,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Iterator",
					"id": 13,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			]
		},
		{
			"id": 362,
			"name": "Queue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Creates a simple Queue (FIFO) datastructure"
			},
			"typeParameter": [
				{
					"id": 363,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 365,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 366,
							"name": "new Queue",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 367,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Queue",
								"id": 362
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 6,
							"character": 21
						}
					]
				},
				{
					"id": 364,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 6,
							"character": 16
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "T"
					}
				},
				{
					"id": 368,
					"name": "front",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return front of the queue",
						"tags": [
							{
								"tag": "example",
								"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.front);\n  //Output: 1\n"
							}
						]
					},
					"getSignature": [
						{
							"id": 369,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return front of the queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.front);\n  //Output: 1\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 19,
							"character": 11
						}
					]
				},
				{
					"id": 372,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns size of the queue",
						"tags": [
							{
								"tag": "example",
								"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.length);\n  //Output: 4\n"
							}
						]
					},
					"getSignature": [
						{
							"id": 373,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Returns size of the queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.length);\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 41,
							"character": 12
						}
					]
				},
				{
					"id": 370,
					"name": "rear",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return rear of the queue",
						"tags": [
							{
								"tag": "example",
								"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.rear);\n  //Output: 4\n"
							}
						]
					},
					"getSignature": [
						{
							"id": 371,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return rear of the queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  console.log(queue.rear);\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 30,
							"character": 10
						}
					]
				},
				{
					"id": 377,
					"name": "dequeue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 378,
							"name": "dequeue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove item from the beginning of the queue and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4,5]\n  console.log(queue.dequeue());\n  //Output: 5\n  //now queue contains [1,2,3,4]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 64,
							"character": 9
						}
					]
				},
				{
					"id": 374,
					"name": "enqueue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 375,
							"name": "enqueue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add item to the end of the queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  queue.enqueue(5);\n  //now queue contains [1,2,3,4,5]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 376,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 52,
							"character": 9
						}
					]
				},
				{
					"id": 379,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 380,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Do an action for each item in queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //queue contains [1,2,3,4]\n  queue.forEach(function(item) {\n    console.log(item + 4);\n  });\n  //Output: 5 6 7 8\n"
									}
								]
							},
							"parameters": [
								{
									"id": 381,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 382,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 383,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 384,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 385,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 386,
															"name": "queue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Queue",
																"id": 362,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "ds/queue.ts",
													"line": 77,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 77,
							"character": 9
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					}
				},
				{
					"id": 387,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 388,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for the queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n  var iterator = queue.iterator(); //returns an Iterator for the queue\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 12
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/queue.ts",
							"line": 88,
							"character": 10
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						365
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						364
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						368,
						372,
						370
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						377,
						374,
						379,
						387
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/queue.ts",
					"line": 5,
					"character": 18
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Iterable",
					"id": 1,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			]
		},
		{
			"id": 389,
			"name": "Stack",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Create a Stack (LIFO) datastructure."
			},
			"typeParameter": [
				{
					"id": 390,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 392,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 393,
							"name": "new Stack",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 394,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack",
								"id": 389
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 4,
							"character": 21
						}
					]
				},
				{
					"id": 391,
					"name": "_store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 4,
							"character": 16
						}
					],
					"type": {
						"type": "typeParameter",
						"isArray": true,
						"name": "T"
					}
				},
				{
					"id": 395,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Number of elements in stack",
						"tags": [
							{
								"tag": "example",
								"text": "\n  //stack contains [1,2,3,4]\n  console.log(stack.height);\n  //Output: 4\n"
							}
						]
					},
					"getSignature": [
						{
							"id": 396,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Number of elements in stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4]\n  console.log(stack.height);\n  //Output: 4\n"
									}
								]
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 17,
							"character": 12
						}
					]
				},
				{
					"id": 402,
					"name": "peek",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 403,
							"name": "peek",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return top of the stack (does not pop)",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,5,6]\n  console.log(stack.peek());\n  //Output: 6 (stack does not change)\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 53,
							"character": 6
						}
					]
				},
				{
					"id": 400,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 401,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pop top of the stack and return",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,5,6,7]\n  console.log(stack.pop());\n  //Output: 7\n  //now stack contains [1,2,3,4,5,6]\n"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 42,
							"character": 5
						}
					]
				},
				{
					"id": 397,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 398,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Push item/items to the top of the stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4]\n  stack.push(5);\n  //now stack contains [1,2,3,4,5]\n  stack.push(6,7);\n  //now stack contains [1,2,3,4,5,6,7]\n"
									}
								]
							},
							"parameters": [
								{
									"id": 399,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 30,
							"character": 6
						}
					]
				},
				{
					"id": 404,
					"name": "search",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 405,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return first index (from top of the stack) of an item in stack",
								"tags": [
									{
										"tag": "example",
										"text": "\n  //stack contains [1,2,3,4,3,5]\n  console.log(stack.search(3));\n  //Output: 4\n"
									}
								]
							},
							"parameters": [
								{
									"id": 406,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "ds/stack.ts",
							"line": 64,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						392
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						391
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						395
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						402,
						400,
						397,
						404
					]
				}
			],
			"sources": [
				{
					"fileName": "ds/stack.ts",
					"line": 3,
					"character": 18
				}
			]
		},
		{
			"id": 407,
			"name": "Cloneable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Classes that implements this interface must have a clone method."
			},
			"typeParameter": [
				{
					"id": 408,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 409,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 410,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "create a copy of the current object and return"
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/cloneable.ts",
							"line": 6,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						409
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/cloneable.ts",
					"line": 2,
					"character": 26
				}
			]
		},
		{
			"id": 74,
			"name": "Collection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Collection is a set of elements of same type."
			},
			"typeParameter": [
				{
					"id": 75,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 76,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 77,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add an item to collection"
							},
							"parameters": [
								{
									"id": 78,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 9,
							"character": 5
						}
					]
				},
				{
					"id": 79,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 80,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add all items of an array to collection"
							},
							"parameters": [
								{
									"id": 81,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 13,
							"character": 8
						}
					]
				},
				{
					"id": 82,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					]
				},
				{
					"id": 84,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 85,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 86,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					]
				},
				{
					"id": 87,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 88,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 89,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					]
				},
				{
					"id": 90,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 91,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 92,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					]
				},
				{
					"id": 116,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 117,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 118,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 119,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 120,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 121,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 122,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 123,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					}
				},
				{
					"id": 93,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 94,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					]
				},
				{
					"id": 124,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 125,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 95,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 96,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 97,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					]
				},
				{
					"id": 98,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 99,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 100,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					]
				},
				{
					"id": 101,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 102,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 103,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 104,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 105,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 106,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 107,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 108,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					]
				},
				{
					"id": 109,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 110,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 111,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					]
				},
				{
					"id": 112,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 113,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					]
				},
				{
					"id": 114,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 115,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						76,
						79,
						82,
						84,
						87,
						90,
						116,
						93,
						124,
						95,
						98,
						101,
						109,
						112,
						114
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/collection.ts",
					"line": 5,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Iterable",
					"id": 1,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "T"
						}
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "List",
					"id": 182
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractCollection",
					"id": 126
				},
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270
				}
			]
		},
		{
			"id": 1,
			"name": "Iterable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Anything whose elements can be iterated over."
			},
			"typeParameter": [
				{
					"id": 2,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 3,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 4,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Do an action for each item in this object"
							},
							"parameters": [
								{
									"id": 5,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 7,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 8,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 9,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 10,
															"name": "iterable",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Iterable",
																"id": 1,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/iterable.ts",
													"line": 8,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 8,
							"character": 9
						}
					]
				},
				{
					"id": 11,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 12,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						3,
						11
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/iterable.ts",
					"line": 4,
					"character": 25
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "Queue",
					"id": 362
				}
			]
		},
		{
			"id": 182,
			"name": "List",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Sub interface of Collection. List has much more functionalities than a collection."
			},
			"typeParameter": [
				{
					"id": 183,
					"name": "E",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"children": [
				{
					"id": 184,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 185,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends the specified element to the end of this list"
							},
							"parameters": [
								{
									"id": 186,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 76
							}
						},
						{
							"id": 187,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts the specified element at the specified position in this list"
							},
							"parameters": [
								{
									"id": 188,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								},
								{
									"id": 189,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.add",
								"id": 76
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 11,
							"character": 5
						},
						{
							"fileName": "interfaces/list.ts",
							"line": 15,
							"character": 5
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.add",
						"id": 76
					}
				},
				{
					"id": 190,
					"name": "addAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 191,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Appends all of the elements in the specified array to the end of this list"
							},
							"parameters": [
								{
									"id": 192,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 79
							}
						},
						{
							"id": 193,
							"name": "addAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts all of the elements in the specified array into this list at the specified position."
							},
							"parameters": [
								{
									"id": 194,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								},
								{
									"id": 195,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Collection.addAll",
								"id": 79
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 19,
							"character": 8
						},
						{
							"fileName": "interfaces/list.ts",
							"line": 23,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Collection.addAll",
						"id": 79
					}
				},
				{
					"id": 226,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 227,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements from this collection"
							},
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.clear",
								"id": 82
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 17,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.clear",
						"id": 82
					}
				},
				{
					"id": 228,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 229,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains the specified element."
							},
							"parameters": [
								{
									"id": 230,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.contains",
								"id": 84
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 21,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.contains",
						"id": 84
					}
				},
				{
					"id": 231,
					"name": "containsAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 232,
							"name": "containsAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains all of the elements in the specified array."
							},
							"parameters": [
								{
									"id": 233,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.containsAll",
								"id": 87
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 25,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.containsAll",
						"id": 87
					}
				},
				{
					"id": 234,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compares the specified object with this collection for equality."
							},
							"parameters": [
								{
									"id": 236,
									"name": "collection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Collection",
										"id": 74,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.equals",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 29,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.equals",
						"id": 90
					}
				},
				{
					"id": 260,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 261,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an action for each item in this collection."
							},
							"parameters": [
								{
									"id": 262,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 263,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 264,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 265,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 266,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 267,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 61,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Iterable.forEach",
								"id": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.forEach",
								"id": 116
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 61,
							"character": 9
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Iterable.forEach",
						"id": 3
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.forEach",
						"id": 116
					}
				},
				{
					"id": 196,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 197,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read an item from the list"
							},
							"parameters": [
								{
									"id": 198,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E"
									},
									{
										"type": "instrinct",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 27,
							"character": 5
						}
					]
				},
				{
					"id": 199,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 200,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of first occurrence of the element."
							},
							"parameters": [
								{
									"id": 201,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 31,
							"character": 9
						}
					]
				},
				{
					"id": 237,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 238,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if this collection contains no elements."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.isEmpty",
								"id": 93
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 33,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.isEmpty",
						"id": 93
					}
				},
				{
					"id": 268,
					"name": "iterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 269,
							"name": "iterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return iterator for this object"
							},
							"type": {
								"type": "reference",
								"name": "Iterator",
								"id": 13,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Iterable.iterator",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/iterable.ts",
							"line": 12,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Iterable.iterator",
						"id": 11
					}
				},
				{
					"id": 202,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 203,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position of last occurrence of the element."
							},
							"parameters": [
								{
									"id": 204,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 35,
							"character": 13
						}
					]
				},
				{
					"id": 205,
					"name": "listIterator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 206,
							"name": "listIterator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list iterator over the elements in this list starting from the 'index'"
							},
							"parameters": [
								{
									"id": 207,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ListIterator",
								"id": 36,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 39,
							"character": 14
						}
					]
				},
				{
					"id": 239,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 240,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a single instance of the specified element from this collection, if it is present"
							},
							"parameters": [
								{
									"id": 241,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.remove",
								"id": 95
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 37,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.remove",
						"id": 95
					}
				},
				{
					"id": 242,
					"name": "removeAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 243,
							"name": "removeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of this collection's elements that are also contained in the specified array."
							},
							"parameters": [
								{
									"id": 244,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeAll",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 41,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeAll",
						"id": 98
					}
				},
				{
					"id": 208,
					"name": "removeAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 209,
							"name": "removeAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the element at the specified position in this list."
							},
							"parameters": [
								{
									"id": 210,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 43,
							"character": 10
						}
					]
				},
				{
					"id": 245,
					"name": "removeIf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 246,
							"name": "removeIf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all of the elements of this collection that satisfy the given filter function."
							},
							"parameters": [
								{
									"id": 247,
									"name": "filterFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 248,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 249,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 250,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 251,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "number"
															}
														},
														{
															"id": 252,
															"name": "collection",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Collection",
																"id": 74,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "E"
																	}
																]
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/collection.ts",
													"line": 45,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.removeIf",
								"id": 101
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 45,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.removeIf",
						"id": 101
					}
				},
				{
					"id": 253,
					"name": "retainAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 254,
							"name": "retainAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retains only the elements in this collection that are contained in the specified array."
							},
							"parameters": [
								{
									"id": 255,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"isArray": true,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.retainAll",
								"id": 109
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 49,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.retainAll",
						"id": 109
					}
				},
				{
					"id": 211,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 212,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces the element at the specified position in this list with the specified element"
							},
							"parameters": [
								{
									"id": 213,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 214,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "E"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 47,
							"character": 5
						}
					]
				},
				{
					"id": 256,
					"name": "size",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 257,
							"name": "size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of elements in this collection."
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.size",
								"id": 112
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 53,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.size",
						"id": 112
					}
				},
				{
					"id": 215,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 216,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts this list according to the compareFn"
							},
							"parameters": [
								{
									"id": 217,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 219,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 220,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														},
														{
															"id": 221,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "interfaces/list.ts",
													"line": 51,
													"character": 17
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 51,
							"character": 6
						}
					]
				},
				{
					"id": 222,
					"name": "subList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 223,
							"name": "subList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive."
							},
							"parameters": [
								{
									"id": 224,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								},
								{
									"id": 225,
									"name": "toIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "List",
								"id": 182,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/list.ts",
							"line": 55,
							"character": 9
						}
					]
				},
				{
					"id": 258,
					"name": "toArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "toArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array containing all of the elements in this collection"
							},
							"type": {
								"type": "typeParameter",
								"isArray": true,
								"name": "E"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Collection.toArray",
								"id": 114
							}
						}
					],
					"sources": [
						{
							"fileName": "interfaces/collection.ts",
							"line": 57,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Collection.toArray",
						"id": 114
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						184,
						190,
						226,
						228,
						231,
						234,
						260,
						196,
						199,
						237,
						268,
						202,
						205,
						239,
						242,
						208,
						245,
						253,
						211,
						256,
						215,
						222,
						258
					]
				}
			],
			"sources": [
				{
					"fileName": "interfaces/list.ts",
					"line": 7,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Collection",
					"id": 74,
					"typeArguments": [
						{
							"type": "typeParameter",
							"name": "E"
						}
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "AbstractList",
					"id": 270
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				126,
				270,
				13,
				36,
				362,
				389
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				407,
				74,
				1,
				182
			]
		}
	]
}